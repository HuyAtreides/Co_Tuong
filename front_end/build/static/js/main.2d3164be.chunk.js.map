{"version":3,"sources":["Components/App/context.js","Components/App/callAPI.js","Components/SignIn/SignIn.jsx","Components/Main/EntryComponent/board-image.png","Components/Main/EntryComponent/EntryComponent.jsx","Components/Main/NavBar/NavBar.jsx","Components/Main/Game/GameController/GameController.jsx","Components/Main/Game/Timer/Timer.jsx","Components/Main/Game/Board/Piece/Piece.jsx","Components/Main/Game/Board/getSVGLocation.js","pieces/piece.js","Components/Main/Game/Board/Board.jsx","Components/Main/Game/GamePlayArea/GameResult/GameResult.jsx","Components/Main/Game/GamePlayArea/Pause/Pause.jsx","Components/Main/Game/GamePlayArea/GamePlayArea.jsx","Components/Main/Game/GameBar/ChatSection/renderMessages.js","Components/Main/Game/GameBar/ChatSection/DrawOffer/DrawOffer.jsx","Components/Main/Game/GameBar/ChatSection/ChatSection.jsx","Components/Main/Game/GameBar/GameBar.jsx","Components/Main/Game/Game.jsx","Components/Main/VerifyEmailNote/VerifyEmailNote.jsx","Components/Main/Main.jsx","Components/Signup/Signup.jsx","Components/VerifyEmail/VerifyEmail.jsx","Components/App/App.jsx","pieces/move_rules/advisorRules.js","pieces/advisor.js","pieces/move_rules/generalRules.js","pieces/general.js","pieces/move_rules/cannonRules.js","pieces/cannon.js","pieces/move_rules/elephantRules.js","pieces/elephant.js","pieces/move_rules/chariotRules.js","pieces/chariot.js","pieces/move_rules/horseRules.js","pieces/horse.js","pieces/move_rules/soldierRules.js","pieces/soldier.js","pieces/instantiatePiece.js","Components/Main/Game/Board/initializeBoard.js","reducer/boardReducer.js","reducer/appReducer.js","reducer/gameReducer.js","reducer/rootReducer.js","index.jsx"],"names":["socket","io","autoConnect","SocketContext","React","createContext","SetMoveTimerContext","AuthenticateUserContext","authenticateUser","dispatch","user","sessionID","connected","disconnect","type","value","auth","player","playername","username","guest","photo","connect","setMoveTimer","playerTurn","gameFinish","removeAllListeners","emit","on","callAPI","method","endPoint","data","a","init","credentials","headers","body","JSON","stringify","fetch","response","json","responseData","ok","Login","useDispatch","useContext","useState","successfullyLogin","setSuccessfullyLogin","checkingSession","setCheckingSession","invalidUsernameMess","setInvalidUsernameMess","invalidPasswordMess","setInvalidPasswordMess","error","setError","waitForResponse","setWaitForResponse","setUsername","password","setPassword","waitForServer","setWaitForServer","loginError","useSelector","state","appState","isAuthenticated","handleMissingField","count","handleError","message","test","handleLogin","event","preventDefault","handleLoginAsGuest","useEffect","to","Container","fluid","Spinner","animation","variant","style","width","window","innerWidth","height","borderWidth","Row","className","Col","md","span","sm","xs","Form","onSubmit","Group","controlId","InputGroup","hasValidation","Control","isInvalid","placeholder","onChange","target","Feedback","textAlign","length","Button","onClick","href","EntryComponent","props","cols","order","src","board_image","alt","NavBar","lang","handleSetLang","selectedLang","currentTarget","text","handleLogout","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","display","NavDropdown","title","Item","GameController","findingMatch","gameState","time","side","boardState","handleSelectTime","selectedTime","getAttribute","handleToggle","handleSwitchSide","selectedSide","opponent","firstMove","disabled","timeSelectorDisplay","Timer","minute","Math","floor","timeLeftToMove","second","turnToMove","listItemRef","createRef","winner","reason","ref","Piece","pieces","i","j","board","position","row","col","push","name","transform","translate","onMouseDown","handleMouseDown","getSVGLocation","clientX","clientY","svg","point","createSVGPoint","x","y","location","matrixTransform","getScreenCTM","inverse","choosenSide","this","split","minCol","maxCol","minRow","maxRow","newRow","newCol","curRow","curCol","moveRow","moveCol","valid","existMove","moves","some","move","generalTranslate","putGeneralInDanger","capture","translateX","translateY","isValid","checkValidMove","countPiecesBetween","tmpBoard","reduce","acc","updateTmpBoard","isGeneralInDanger","tmp","DOMNode","document","querySelector","moveVertical","moveDiagonal","xB","yB","yA","xA","setAttribute","setPosition","step","requestAnimationFrame","animate","abs","setTransform","canCapture","canCaptureGeneral","canMoveToNewPosition","Board","targetDisplay","boardSize","currentPiece","getClicked","draggable","warningDisplay","setWarningDisplay","warningTranslate","setWarningTranslate","svgRef","useRef","targetTranslate","opponentInfo","updateBoard","moveResult","setTimeout","handleMouseUp","current","canMove","updateCurrentPiece","handleMouseMove","constructNewBoard","map","piece","handleResize","offsetWidth","ondragstart","onmousemove","onmouseup","onresize","animateMove","handleOpponentMove","lostReason","PieceClass","isLost","moveOnClick","backgroundImage","fill","elementId","memo","GameResult","gameResult","boardWidth","boardHeight","gameResultDisplay","playerInfo","displayGameResult","charAt","toUpperCase","slice","left","pauseTime","pause","from","Pause","store","useStore","handleOpponentPauseOrResumeGame","getState","GamePlayArea","opponentTimeLeftToMove","playerTimeLeftToMove","foundMatch","capturedPieces","element","index","renderMessages","messages","DrawOffer","receiveDrawOffer","handleDrawResult","ChatSection","input","setInput","messagesContainerRef","hideChat","setHideChat","displayMessages","list","lastListItem","scrollTop","offsetTop","GameBar","handleGameOver","result","action","Game","setTimeSelectorDisplay","foundMatchRef","VerifyEmailNote","hideNote","setHideNote","Main","innerText","email","verified","Signup","invalidEmailMess","setInvalidEmailMess","setEmail","firstname","setFirstname","invalidFirstname","setInvalidFirstname","invalidLastname","setInvalidLastname","lastname","setLastname","handleSignUp","Label","float","VerifyEmail","setVerified","resend","setResend","verificationCode","setVerficationCode","invalidCodeMess","setInvalidCodeMess","waitForSendingCode","setWaitForSendingCode","codeRef","handleSubmit","correct","sendVerificationCode","code","marginTop","App","Provider","path","advisorRules","Advisor","generalRules","General","cannonRules","Cannon","elephantRules","Elephant","chariotRules","Chariot","horseRules","Horse","isBlocked","soliderRules","Soldier","crossRiver","instantiatePiece","Solider","initializeBoard","initialBoard","initialPosition","getInitialPosition","pieceName","toString","defaultState","boardReducer","newState","Object","assign","newCapturedPieces","gameReducer","newMessages","rootReducer","combineReducers","appReducer","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2d3164be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:8080/play\", { autoConnect: false });\r\nconst SocketContext = React.createContext();\r\nconst SetMoveTimerContext = React.createContext();\r\nconst AuthenticateUserContext = React.createContext();\r\n\r\nconst authenticateUser = (dispatch, user, sessionID) => {\r\n  if (socket.connected) socket.disconnect();\r\n  dispatch({ type: \"setPlayerInfo\", value: user });\r\n  dispatch({ type: \"setIsAuthenticated\", value: sessionID ? true : \"guest\" });\r\n  socket.auth = {\r\n    player: {\r\n      playername: user.username,\r\n      guest: user.guest,\r\n      photo: user.photo,\r\n    },\r\n    sessionID: sessionID,\r\n  };\r\n  socket.connect();\r\n};\r\n\r\nconst setMoveTimer = (playerTurn, gameFinish, dispatch) => {\r\n  socket.removeAllListeners(\"oneSecondPass\");\r\n  if (gameFinish) {\r\n    socket.emit(\"setTimer\", false);\r\n    dispatch({ type: \"setPause\", value: null });\r\n    dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setTurnToMove\", value: false });\r\n    return;\r\n  }\r\n  if (playerTurn)\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n  else dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n  socket.emit(\"startTimer\", true);\r\n  socket.on(\"oneSecondPass\", () => {\r\n    if (playerTurn) dispatch({ type: \"setPlayerTimeLeftToMove\", value: null });\r\n    else dispatch({ type: \"setOpponentTimeLeftToMove\", value: null });\r\n  });\r\n};\r\n\r\nexport {\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n  setMoveTimer,\r\n  socket,\r\n  AuthenticateUserContext,\r\n  authenticateUser,\r\n};\r\n","const callAPI = async (method, endPoint, data) => {\r\n  let response;\r\n  if (method === \"POST\") {\r\n    const init = {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    response = await fetch(`http://localhost:8080/api/${endPoint}`, init);\r\n  } else\r\n    response = await fetch(`http://localhost:8080/api/${endPoint}`, {\r\n      credentials: \"include\",\r\n    });\r\n  const responseData = await response.json();\r\n  responseData.ok = response.ok;\r\n  return responseData;\r\n};\r\n\r\nexport default callAPI;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AuthenticateUserContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"./SignIn.scss\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const [successfullyLogin, setSuccessfullyLogin] = useState(false);\r\n  const [checkingSession, setCheckingSession] = useState(false);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [waitForServer, setWaitForServer] = useState(false);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Password/.test(message)) {\r\n      setInvalidPasswordMess(message);\r\n    } else if (/Username/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n    dispatch({ type: \"setLoginError\", value: null });\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    const missingField = handleMissingField();\r\n    if (!missingField && !invalidPasswordMess && !invalidUsernameMess) {\r\n      setError(null);\r\n      setWaitForResponse(true);\r\n      const { message, user, ok, sessionID } = await callAPI(\"POST\", \"login\", {\r\n        username: username,\r\n        password: password,\r\n      });\r\n      setWaitForResponse(false);\r\n      if (user) {\r\n        authenticateUser(dispatch, user, sessionID);\r\n      } else handleError(ok, message);\r\n    }\r\n  };\r\n\r\n  const handleLoginAsGuest = async () => {\r\n    setWaitForServer(true);\r\n    const { user } = await callAPI(\"GET\", \"login-as-guest\", null);\r\n    setWaitForServer(false);\r\n    setSuccessfullyLogin(true);\r\n    authenticateUser(dispatch, user, null);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (isAuthenticated) return;\r\n    if (!loginError) {\r\n      setCheckingSession(true);\r\n      const { message, user, ok, sessionID } = await callAPI(\r\n        \"GET\",\r\n        \"user\",\r\n        null\r\n      );\r\n      setCheckingSession(false);\r\n      if (user) {\r\n        authenticateUser(dispatch, user, sessionID);\r\n      } else handleError(ok, message);\r\n    } else handleError(false, loginError);\r\n  }, [isAuthenticated]);\r\n\r\n  if (isAuthenticated) {\r\n    if (isAuthenticated !== \"guest\") return <Redirect to=\"/\" />;\r\n    else if (successfullyLogin) return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      {checkingSession ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col\r\n            md={{ span: 4 }}\r\n            sm={{ span: 6 }}\r\n            xs={{ span: 10 }}\r\n            className=\"login-component d-flex flex-column  align-items-center\"\r\n          >\r\n            {error ? <p className=\"error-message\">{error}</p> : null}\r\n            <Form onSubmit={handleLogin} method=\"POST\">\r\n              <Form.Group controlId=\"username-or-email\">\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidUsernameMess !== \"\"}\r\n                    placeholder=\"Username or Email\"\r\n                    onChange={handleUsernameChange}\r\n                    value={username}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    isInvalid={invalidPasswordMess !== \"\"}\r\n                    placeholder=\"Password\"\r\n                    onChange={handlePasswordChange}\r\n                    value={password}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button type=\"submit\">\r\n                {waitForResponse ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Log In\"\r\n                )}\r\n              </Button>\r\n              <Button className=\"log-in-as-guest\" onClick={handleLoginAsGuest}>\r\n                {waitForServer ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Log In As Guest\"\r\n                )}\r\n              </Button>\r\n            </Form>\r\n            <p className=\"seperator\">\r\n              <span></span>\r\n              <span className=\"seperator-text\">or connect with</span>\r\n              <span></span>\r\n            </p>\r\n            <div className=\"social-login\">\r\n              <a\r\n                className=\"google\"\r\n                href=\"http://localhost:8080/api/auth/google\"\r\n              >\r\n                <i className=\"fab fa-google\"></i> Google\r\n              </a>\r\n              <a\r\n                className=\"facebook\"\r\n                href=\"http://localhost:8080/api/auth/facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook \"></i> Facebook\r\n              </a>\r\n              <a\r\n                className=\"github\"\r\n                href=\"http://localhost:8080/api/auth/github\"\r\n              >\r\n                <i className=\"fab fa-github \"></i> Github\r\n              </a>\r\n            </div>\r\n            <div className=\"sign-up-area\">\r\n              <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/board-image.3c95ca99.png\";","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport board_image from \"./board-image.png\";\r\nimport \"./EntryComponent.scss\";\r\n\r\nconst EntryComponent = (props) => {\r\n  return (\r\n    <Row md={{ cols: 2 }} className=\"justify-content-around mt-5\">\r\n      <Col\r\n        className=\"image-container\"\r\n        md={{ span: 4, order: 1 }}\r\n        xs={{ span: 10, order: 2 }}\r\n      >\r\n        <img src={board_image} alt=\"\" />\r\n      </Col>\r\n      <Col\r\n        className=\"intro\"\r\n        md={{ span: 4, order: 2 }}\r\n        xs={{ span: 10, order: 1 }}\r\n      >\r\n        <h1>Play Xiangqi Online for Free</h1>\r\n        <Link className=\"play-button\" to=\"/signin\">\r\n          Play\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default EntryComponent;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, NavDropdown, Nav, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport callAPI from \"../../App/callAPI.js\";\r\nimport { SocketContext } from \"../../App/context.js\";\r\nimport \"./NavBar.scss\";\r\n\r\nconst NavBar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const handleSetLang = (event) => {\r\n    const selectedLang = event.currentTarget.text;\r\n    dispatch({ type: \"setLang\", value: selectedLang });\r\n  };\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  const handleLogout = async (event) => {\r\n    props.setWaitForResponse(true);\r\n    await callAPI(\"GET\", \"logout\", null);\r\n    if (event) socket.emit(\"logout\");\r\n    dispatch({ type: \"setIsAuthenticated\", value: false });\r\n    dispatch({ type: \"setPlayerInfo\", value: null });\r\n    socket.disconnect();\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"accountLogout\", () => {\r\n      handleLogout(null);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"accountLogout\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Navbar expand=\"md\" className=\"nav-bar\">\r\n      <Navbar.Brand>\r\n        <Link to=\"/\" className=\"link-brand\">\r\n          Xiangqi\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"nav\">\r\n          <Link\r\n            to={`/${\r\n              isAuthenticated && isAuthenticated !== \"guest\" ? \"home\" : \"signin\"\r\n            }`}\r\n            className=\"link nav-link\"\r\n          >\r\n            {isAuthenticated && isAuthenticated !== \"guest\"\r\n              ? \"Home\"\r\n              : \"Sign In\"}\r\n          </Link>\r\n          <button\r\n            className=\"link nav-link logout\"\r\n            onClick={handleLogout}\r\n            style={{\r\n              display:\r\n                isAuthenticated && isAuthenticated !== \"guest\"\r\n                  ? \"inline\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            Log Out\r\n          </button>\r\n          <Link\r\n            to=\"/signup\"\r\n            className=\"link nav-link \"\r\n            style={{\r\n              display:\r\n                isAuthenticated && isAuthenticated !== \"guest\"\r\n                  ? \"none\"\r\n                  : \"inline\",\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Link>\r\n          <NavDropdown title={lang} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item onClick={handleSetLang}>\r\n              Tiếng Việt\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item onClick={handleSetLang}>English</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport \"./GameController.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst GameController = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const findingMatch = useSelector((state) => state.gameState.findingMatch);\r\n  const time = useSelector((state) => state.gameState.time);\r\n  const side = useSelector((state) => state.boardState.side);\r\n\r\n  const handlePlay = () => {\r\n    if (findingMatch !== true) {\r\n      socket.emit(\"findMatch\", side, time);\r\n      dispatch({ type: \"setFindingMatch\", value: true });\r\n    }\r\n  };\r\n\r\n  const handleSelectTime = (event) => {\r\n    const selectedTime = +event.currentTarget.getAttribute(\"value\");\r\n    dispatch({ type: \"setTime\", value: selectedTime });\r\n    props.handleToggle();\r\n  };\r\n\r\n  const handleSwitchSide = (event) => {\r\n    const selectedSide = event.currentTarget.getAttribute(\"value\");\r\n    if (selectedSide === \"black\")\r\n      dispatch({ type: \"switchSide\", value: [\"red\", \"black\"] });\r\n    else dispatch({ type: \"switchSide\", value: [\"black\", \"red\"] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"timeout\", () => {\r\n      dispatch({\r\n        type: \"setFindingMatch\",\r\n        value: \"No Players are currently online :(\",\r\n      });\r\n    });\r\n\r\n    socket.on(\"foundMatch\", (opponent, firstMove, time) => {\r\n      dispatch({\r\n        type: \"setOpponentInfo\",\r\n        value: {\r\n          playername: opponent.playername,\r\n          photo: opponent.photo,\r\n        },\r\n      });\r\n      dispatch({ type: \"setTime\", value: time });\r\n      dispatch({ type: \"setTurnToMove\", value: firstMove });\r\n      dispatch({ type: \"setFoundMatch\", value: true });\r\n      setMoveTimer(firstMove, false, dispatch);\r\n    });\r\n\r\n    socket.on(\"isInGame\", () => {\r\n      dispatch({\r\n        type: \"setFindingMatch\",\r\n        value:\r\n          \"Your account is currently in a game. Please try again after the game was finished\",\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"timeout\");\r\n      socket.removeAllListeners(\"foundMatch\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Col md={{ span: 4 }} xs={{ span: 10 }} className=\"game-controller mb-3\">\r\n      <div className=\"button-container\">\r\n        <div className=\"select-side-container\">\r\n          <Button\r\n            className=\"red-side\"\r\n            value=\"red\"\r\n            onClick={handleSwitchSide}\r\n            disabled={findingMatch === true}\r\n          >\r\n            Red\r\n          </Button>\r\n          <Button\r\n            className=\"black-side\"\r\n            value=\"black\"\r\n            onClick={handleSwitchSide}\r\n            disabled={findingMatch === true}\r\n          >\r\n            Black\r\n          </Button>\r\n        </div>\r\n        <div className=\"time-select-container\">\r\n          <Button\r\n            className=\"select-timer\"\r\n            onClick={props.handleToggle}\r\n            disabled={findingMatch === true}\r\n          >\r\n            <i className=\"fas fa-clock\"></i> {time + \":00\"}{\" \"}\r\n            <i className=\"fas fa-angle-down\"></i>\r\n          </Button>\r\n          <div\r\n            className=\"time-select-table\"\r\n            style={{ display: props.timeSelectorDisplay }}\r\n          >\r\n            <Button onClick={handleSelectTime} value=\"1\">\r\n              1 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"3\">\r\n              3 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"5\">\r\n              5 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"10\">\r\n              10 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"15\">\r\n              15 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"30\">\r\n              30 min\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className={`play ${findingMatch === true ? \"finding-opponent\" : \"\"}`}\r\n          onClick={handlePlay}\r\n        >\r\n          {findingMatch === true ? \"Finding Opponent...\" : findingMatch}\r\n        </Button>\r\n        <Button className=\"play-with-friend\" disabled={findingMatch === true}>\r\n          Play With Friend\r\n        </Button>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GameController;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n\r\n  useEffect(() => {\r\n    if (props.timeLeftToMove === 0 && turnToMove) {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [props.timeLeftToMove]);\r\n\r\n  return (\r\n    <div className={`clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`}>\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nfunction Piece(props) {\r\n  const pieces = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (props.board[i][j]) {\r\n        const [row, col] = props.board[i][j].position;\r\n        pieces.push(\r\n          <image\r\n            id={`p${row}${col}`}\r\n            href={`/images/Pieces/${props.board[i][j].name}.png`}\r\n            width={props.board[i][j].width - 3}\r\n            height={props.board[i][j].width - 3}\r\n            transform={props.board[i][j].translate}\r\n            key={`${i}${j}`}\r\n            onMouseDown={props.handleMouseDown}\r\n          ></image>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return <g>{pieces}</g>;\r\n}\r\n\r\nexport default Piece;\r\n","const getSVGLocation = (clientX, clientY, svg) => {\r\n  const point = svg.createSVGPoint();\r\n  point.x = clientX;\r\n  point.y = clientY;\r\n  const location = point.matrixTransform(svg.getScreenCTM().inverse());\r\n  return [location.x, location.y];\r\n};\r\n\r\nexport default getSVGLocation;\r\n","class Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    this.width = width;\r\n    this.position = [row, col];\r\n    this.name = name;\r\n    this.side = name.split(\"-\")[1];\r\n    this.choosenSide = choosenSide;\r\n    this.minCol = 0;\r\n    this.maxCol = 8;\r\n    this.minRow = 0;\r\n    this.maxRow = 9;\r\n    this.translate = `translate(${width * col}, ${width * row})`;\r\n  }\r\n\r\n  move(x, y) {\r\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\r\n    this.translate = translate;\r\n  }\r\n\r\n  checkValidMove(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    const valid =\r\n      newCol >= this.minCol &&\r\n      newCol <= this.maxCol &&\r\n      newRow >= this.minRow &&\r\n      newRow <= this.maxRow;\r\n    const existMove = this.moves.some((move) => {\r\n      return move[0] === moveRow && move[1] === moveCol;\r\n    });\r\n    if (valid && existMove) {\r\n      const generalTranslate = this.putGeneralInDanger(newRow, newCol, board);\r\n      if (generalTranslate) return generalTranslate;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setPosition(capture, newRow, newCol) {\r\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\r\n    const translate = `translate(${translateX}, ${translateY})`;\r\n    this.position = [newRow, newCol];\r\n    this.translate = translate;\r\n    return [capture === \"capture\", newRow, newCol];\r\n  }\r\n\r\n  canMoveToNewPosition(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (this.side === this.choosenSide[1]) {\r\n      const isValid = this.checkValidMove(newRow, newCol, board);\r\n      if (isValid && !/translate/.test(isValid)) {\r\n        if (!board[newRow][newCol].side) {\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 0) return true;\r\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 1)\r\n            return \"capture\";\r\n      } else if (isValid) return isValid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (newRow === curRow) {\r\n      do {\r\n        curCol += curCol > newCol ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curCol !== newCol);\r\n    } else {\r\n      do {\r\n        curRow += curRow > newRow ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curRow !== newRow);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  static isGeneralInDanger(board, side) {\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (board[i][j] && board[i][j].side !== side) {\r\n          const canCapture = board[i][j].canCaptureGeneral(board);\r\n          if (/translate/.test(canCapture)) return canCapture;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  putGeneralInDanger(newRow, newCol, board) {\r\n    const tmpBoard = board.reduce((acc, row) => {\r\n      acc.push([...row]);\r\n      return acc;\r\n    }, []);\r\n    this.updateTmpBoard(newRow, newCol, tmpBoard);\r\n    return Piece.isGeneralInDanger(tmpBoard, this.side);\r\n  }\r\n\r\n  static isLost(board, side) {\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (board[i][j] && board[i][j].side === side) {\r\n          const [curRow, curCol] = board[i][j].position;\r\n          for (let move of board[i][j].moves) {\r\n            const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n            const tmp = board[i][j].canMoveToNewPosition(newRow, newCol, board);\r\n            if (tmp && !/translate/.test(tmp)) return null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Piece.isGeneralInDanger(board, side)) {\r\n      return \"Checkmate\";\r\n    }\r\n    return \"Stalemate\";\r\n  }\r\n\r\n  updateTmpBoard(newRow, newCol, tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    const tmp = tmpBoard[curRow][curCol];\r\n    tmpBoard[curRow][curCol] = 0;\r\n    tmpBoard[newRow][newCol] = tmp;\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    for (let move of this.moves) {\r\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n        if (tmpBoard[newRow][newCol].side)\r\n          if (tmpBoard[newRow][newCol].side !== tmpBoard[curRow][curCol].side)\r\n            if (this.countPiecesBetween(newRow, newCol, tmpBoard) === 1)\r\n              if (tmpBoard[newRow][newCol].name.split(\"-\")[0] === \"general\") {\r\n                return tmpBoard[newRow][newCol].translate;\r\n              }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  animateMove([newRow, newCol], board, dispatch) {\r\n    const [curRow, curCol] = this.position;\r\n    this.DOMNode = document.querySelector(`#p${curRow}${curCol}`);\r\n    if (curCol === newCol) {\r\n      this.moveVertical([newRow, newCol], board, dispatch);\r\n    } else this.moveDiagonal([newRow, newCol], board, dispatch);\r\n  }\r\n\r\n  setTransform([xB, yB], board, dispatch) {\r\n    const [yA, xA] = this.position;\r\n    const translate = `translate(${xB * this.width}, ${yB * this.width})`;\r\n    this.DOMNode.setAttribute(\"transform\", translate);\r\n    if (board) {\r\n      this.setPosition(null, yB, xB);\r\n      const tmp = board[yA][xA];\r\n      if (board[yB][xB])\r\n        dispatch({ type: \"setCapturedPieces\", value: board[yB][xB] });\r\n      board[yA][xA] = 0;\r\n      board[yB][xB] = tmp;\r\n      dispatch({ type: \"setTurnToMove\", value: true });\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n    }\r\n  }\r\n\r\n  moveVertical([yB, xB], board, dispatch) {\r\n    const [yA, xA] = this.position;\r\n    let step = 0;\r\n\r\n    const animate = () => {\r\n      if (Math.abs(step) < Math.abs(yB - yA)) {\r\n        step += (yB - yA) / (0.25 * 60);\r\n        this.setTransform([xA, yA + step], null, null);\r\n        window.requestAnimationFrame(animate);\r\n      } else if (Math.abs(step) >= Math.abs(yB - yA)) {\r\n        this.setTransform([xB, yB], board, dispatch);\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  moveDiagonal([yB, xB], board, dispatch) {\r\n    const [yA, xA] = this.position;\r\n    let step = 0;\r\n\r\n    const animate = () => {\r\n      if (Math.abs(step) < Math.abs(xB - xA)) {\r\n        step += (xB - xA) / (0.25 * 60);\r\n        let y = (step / (xB - xA)) * (yB - yA) + yA;\r\n        this.setTransform([xA + step, y], null, null);\r\n        window.requestAnimationFrame(animate);\r\n      } else if (Math.abs(step) >= Math.abs(xB - xA)) {\r\n        this.setTransform([xB, yB], board, dispatch);\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(animate);\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport Piece from \"./Piece/Piece.jsx\";\r\nimport \"./Board.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport getSVGLocation from \"./getSVGLocation.js\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\nimport PieceClass from \"../../../../pieces/piece.js\";\r\n\r\nfunction Board() {\r\n  const dispatch = useDispatch();\r\n  const board = useSelector((state) => state.boardState.board);\r\n  const targetDisplay = useSelector((state) => state.boardState.targetDisplay);\r\n  const boardSize = useSelector((state) => state.boardState.boardSize);\r\n  const currentPiece = useSelector((state) => state.boardState.currentPiece);\r\n  const getClicked = useSelector((state) => state.boardState.getClicked);\r\n  const draggable = useSelector((state) => state.boardState.draggable);\r\n  const [warningDisplay, setWarningDisplay] = useState(\"none\");\r\n  const [warningTranslate, setWarningTranslate] = useState(\"translate(0, 0)\");\r\n  const side = useSelector((state) => state.boardState.side);\r\n  const svgRef = useRef();\r\n  const targetTranslate = useSelector(\r\n    (state) => state.boardState.targetTranslate\r\n  );\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  const handleMouseDown = (event) => {\r\n    const elementId = event.currentTarget.id;\r\n    const [row, col] = [+elementId[1], +elementId[2]];\r\n    const translate = board[row][col].translate;\r\n    if (!currentPiece || board[row][col].side === currentPiece.side) {\r\n      if (currentPiece) {\r\n        const [curRow, curCol] = currentPiece.position;\r\n        if (row !== curRow || curCol !== col) {\r\n          dispatch({ type: \"setGetClicked\", value: false });\r\n        }\r\n      }\r\n      dispatch({ type: \"setTargetDisplay\", value: \"inline\" });\r\n      dispatch({ type: \"setDraggable\", value: true });\r\n      dispatch({ type: \"setTargetTranslate\", value: translate });\r\n      dispatch({ type: \"setCurrentPiece\", value: board[row][col] });\r\n    }\r\n  };\r\n\r\n  const updateBoard = (moveResult, [curRow, curCol]) => {\r\n    if (moveResult && !/translate/.test(moveResult)) {\r\n      const [capture, newRow, newCol] = moveResult;\r\n      if (capture) {\r\n        dispatch({ type: \"setCapturedPieces\", value: board[newRow][newCol] });\r\n      }\r\n      board[curRow][curCol] = 0;\r\n      board[newRow][newCol] = currentPiece;\r\n    } else if (moveResult) {\r\n      setTimeout(() => {\r\n        setWarningDisplay(\"none\");\r\n      }, 400);\r\n      setWarningDisplay(\"inline\");\r\n      setWarningTranslate(moveResult);\r\n    }\r\n  };\r\n\r\n  const handleOpponentMove = ([curRow, curCol], [newRow, newCol]) => {\r\n    if (board[curRow][curCol] && board[curRow][curCol].side === side[0]) {\r\n      board[curRow][curCol].animateMove([newRow, newCol], board, dispatch);\r\n      setMoveTimer(true, false, dispatch);\r\n    }\r\n  };\r\n\r\n  const updateCurrentPiece = (moveResult) => {\r\n    if ((moveResult && !/translate/.test(moveResult)) || getClicked) {\r\n      dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n      dispatch({ type: \"setCurrentPiece\", value: null });\r\n      dispatch({ type: \"setGetClicked\", value: false });\r\n    } else {\r\n      dispatch({ type: \"setGetClicked\", value: true });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (event) => {\r\n    if (currentPiece) {\r\n      let moveResult = null;\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      const newCol = Math.floor(x / currentPiece.width);\r\n      const newRow = Math.floor(y / currentPiece.width);\r\n      const [curRow, curCol] = currentPiece.position;\r\n      const canMove = currentPiece.canMoveToNewPosition(newRow, newCol, board);\r\n      if (turnToMove && canMove && !/translate/.test(canMove))\r\n        moveResult = currentPiece.setPosition(canMove, newRow, newCol);\r\n      else if (/translate/.test(canMove)) moveResult = canMove;\r\n      updateBoard(moveResult, [curRow, curCol]);\r\n      dispatch({ type: \"setDraggable\", value: false });\r\n      updateCurrentPiece(moveResult);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n      if (moveResult && !/translate/.test(moveResult)) {\r\n        dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n        setMoveTimer(false, false, dispatch);\r\n        socket.emit(\"opponentMove\", moveResult, [curRow, curCol]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const svg = svgRef.current;\r\n    const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n    if (x >= 0 && x < boardSize[0] && y >= 0 && y < boardSize[1] && draggable) {\r\n      currentPiece.move(x, y, board);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n    }\r\n  };\r\n\r\n  const moveOnClick = (currentPiece, x, y) => {\r\n    let moveResult = null;\r\n    const [curRow, curCol] = currentPiece.position;\r\n    const newCol = Math.floor(x / currentPiece.width);\r\n    const newRow = Math.floor(y / currentPiece.width);\r\n    const canMove = currentPiece.canMoveToNewPosition(newRow, newCol, board);\r\n    if (turnToMove && canMove && !/translate/.test(canMove))\r\n      moveResult = currentPiece.setPosition(canMove, newRow, newCol);\r\n    updateBoard(moveResult, [curRow, curCol]);\r\n    dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n    dispatch({ type: \"setCurrentPiece\", value: null });\r\n    dispatch({ type: \"setBoard\", value: [...board] });\r\n    if (moveResult && !/translate/.test(moveResult)) {\r\n      dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n      setMoveTimer(false, false, dispatch);\r\n      socket.emit(\"opponentMove\", moveResult, [curRow, curCol]);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    if (currentPiece) {\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      if (!event.target.id) moveOnClick(currentPiece, x, y);\r\n    }\r\n  };\r\n\r\n  const constructNewBoard = (width) => {\r\n    const newBoard = board.map((row) => {\r\n      const newRow = row.map((piece) => {\r\n        if (piece) {\r\n          const [row, col] = piece.position;\r\n          piece.width = width;\r\n          piece.translate = `translate(${width * col}, ${width * row})`;\r\n          return piece;\r\n        }\r\n        return 0;\r\n      });\r\n      return newRow;\r\n    });\r\n    return newBoard;\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({\r\n      type: \"setBoardSize\",\r\n      value: [width, width / (521 / 577)],\r\n    });\r\n    dispatch({\r\n      type: \"setBoard\",\r\n      value: constructNewBoard(width / 9),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({ type: \"setBoardSize\", value: [width, width / (521 / 577)] });\r\n    dispatch({ type: \"setBoard\", value: constructNewBoard(width / 9) });\r\n\r\n    window.ondragstart = () => false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.onmousemove = handleMouseMove;\r\n    window.onmouseup = handleMouseUp;\r\n    window.onresize = handleResize;\r\n    socket.on(\"move\", ([curRow, curCol], [newRow, newCol]) => {\r\n      handleOpponentMove([curRow, curCol], [newRow, newCol]);\r\n    });\r\n\r\n    return () => {\r\n      window.onmouseup = null;\r\n      window.onmousemove = null;\r\n      window.onresize = null;\r\n      socket.removeAllListeners(\"move\");\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (turnToMove) {\r\n      const lostReason = PieceClass.isLost(board, side[1]);\r\n      if (lostReason) {\r\n        const listItemRef = React.createRef();\r\n        dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            type: \"game result message\",\r\n            winner: `${opponentInfo.playername} Won - `,\r\n            reason: lostReason,\r\n            className: \"game-message\",\r\n            ref: listItemRef,\r\n          },\r\n        });\r\n        setMoveTimer(null, true, dispatch);\r\n        socket.emit(\"gameFinish\", [\"Won\", lostReason]);\r\n      }\r\n    }\r\n  }, [turnToMove]);\r\n\r\n  return (\r\n    <svg\r\n      width={boardSize[0]}\r\n      height={boardSize[1]}\r\n      onClick={handleClick}\r\n      style={{\r\n        backgroundImage: 'url(\"/images/Board/board.jpg\")',\r\n      }}\r\n      ref={svgRef}\r\n    >\r\n      <image\r\n        href=\"/images/Target_Icon/target.gif\"\r\n        width={boardSize[0] / 9 - 3}\r\n        height={boardSize[0] / 9 - 3}\r\n        style={{ display: targetDisplay }}\r\n        transform={targetTranslate}\r\n      ></image>\r\n      <rect\r\n        width={boardSize[0] / 9 - 3}\r\n        height={boardSize[0] / 9 - 3}\r\n        style={{ display: warningDisplay }}\r\n        transform={warningTranslate}\r\n        fill=\"brown\"\r\n      ></rect>\r\n      <Piece board={board} handleMouseDown={handleMouseDown} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(Board);\r\n","import React from \"react\";\r\nimport \"./GameResult.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GameResult = () => {\r\n  const dispatch = useDispatch();\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const gameResultDisplay = useSelector(\r\n    (state) => state.gameState.gameResultDisplay\r\n  );\r\n  const side = useSelector((state) => state.boardState.side);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n  let displayGameResult = \"Draw\";\r\n\r\n  if (gameResult === \"Won\") {\r\n    displayGameResult = `${\r\n      side[1].charAt(0).toUpperCase() + side[1].slice(1)\r\n    } Won`;\r\n  } else if (gameResult === \"Lose\")\r\n    displayGameResult = `${\r\n      side[0].charAt(0).toUpperCase() + side[0].slice(1)\r\n    } Won`;\r\n\r\n  const handleHideGameResult = () => {\r\n    dispatch({ type: \"setGameResultDisplay\", value: \"none\" });\r\n  };\r\n\r\n  if (!gameResult) return null;\r\n  return (\r\n    <div\r\n      className=\"game-result\"\r\n      style={{\r\n        width: \"80%\",\r\n        height: `${boardHeight - 40}px`,\r\n        left: `${boardWidth * (10 / 100)}px`,\r\n        display: `${gameResultDisplay}`,\r\n      }}\r\n    >\r\n      <i\r\n        className=\"fas fa-times hide-game-result\"\r\n        onClick={handleHideGameResult}\r\n      ></i>\r\n      <div className=\"won-side\">\r\n        <p>{displayGameResult}</p>\r\n      </div>\r\n      <div className=\"players\">\r\n        <div className=\"player-info\">\r\n          <div\r\n            className={`img-container ${\r\n              gameResult === \"Won\" || gameResult === \"Draw\" ? \"\" : \"winner\"\r\n            }`}\r\n          >\r\n            <img src={opponentInfo.photo} alt=\"\" />\r\n          </div>\r\n\r\n          <p>{opponentInfo.playername}</p>\r\n        </div>\r\n        <span>VS</span>\r\n        <div className=\"player-info\">\r\n          <div\r\n            className={`img-container ${gameResult === \"Won\" ? \"winner\" : \"\"}`}\r\n          >\r\n            <img src={playerInfo.photo} alt=\"\" />\r\n          </div>\r\n\r\n          <p>{playerInfo.username}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameResult;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./Pause.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const time = useSelector((state) => state.gameState.pauseTime);\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      if (/Paused/.test(props.pause)) {\r\n        socket.emit(\"startTimer\", true);\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n      } else {\r\n        socket.emit(\"startTimer\", false);\r\n        dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n        dispatch({ type: \"setPause\", value: null });\r\n        setMoveTimer(turnToMove, false, dispatch);\r\n        socket.emit(\"startGame\");\r\n      }\r\n    }\r\n\r\n    socket.on(\"pauseOver\", () => {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n      dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n      socket.emit(\"starTimer\", true);\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          from: \"\",\r\n          message: \"Pause Timeout\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    });\r\n\r\n    socket.on(\"gameStarted\", () => {\r\n      socket.emit(\"startTimer\", false);\r\n      dispatch({ type: \"setPause\", value: null });\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      setMoveTimer(turnToMove, false, dispatch);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"pauseOver\");\r\n      socket.removeAllListeners(\"gameStarted\");\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <p className=\"pause-timer\">\r\n      {/Paused/.test(props.pause) ? \"Resume In\" : \"Game Will Start In\"}:{\" \"}\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Pause = () => {\r\n  const dispatch = useDispatch();\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const store = useStore();\r\n  const socket = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    if (pause) {\r\n      if (/Paused/.test(pause)) {\r\n        socket.removeAllListeners(\"oneSecondPass\");\r\n        socket.emit(\"startTimer\", true);\r\n        socket.on(\"oneSecondPass\", () => {\r\n          dispatch({ type: \"setPauseTime\", value: null });\r\n        });\r\n      } else if (/Resumed/.test(pause)) {\r\n        socket.emit(\"startTimer\", true);\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n      }\r\n    }\r\n\r\n    const handleOpponentPauseOrResumeGame = (pause) => {\r\n      const opponentInfo = store.getState().gameState.opponentInfo;\r\n      const listItemRef = React.createRef();\r\n      const message = {\r\n        from: `${opponentInfo.playername}`,\r\n        message: `${pause ? \"Paused\" : \"Resumed\"} Game`,\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({\r\n        type: \"setPause\",\r\n        value: `${opponentInfo.playername} ${\r\n          pause ? \"Paused\" : \"Resumed\"\r\n        } Game`,\r\n      });\r\n    };\r\n\r\n    socket.on(\"opponentPauseGame\", () => {\r\n      handleOpponentPauseOrResumeGame(true);\r\n    });\r\n\r\n    socket.on(\"opponentResumeGame\", () => {\r\n      handleOpponentPauseOrResumeGame(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentPauseGame\");\r\n      socket.removeAllListeners(\"opponentResumeGame\");\r\n    };\r\n  }, [pause]);\r\n\r\n  if (!pause) return null;\r\n  return (\r\n    <div\r\n      className=\"pause\"\r\n      style={{\r\n        width: `${boardWidth}px`,\r\n        height: `${boardHeight}px`,\r\n      }}\r\n    >\r\n      <div>\r\n        <p className=\"pause-announce\">{pause}</p>\r\n        <Timer pause={pause} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pause);\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Timer from \"../Timer/Timer.jsx\";\r\nimport Board from \"../Board/Board\";\r\nimport \"./GamePlayArea.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GameResult from \"./GameResult/GameResult.jsx\";\r\nimport Pause from \"./Pause/Pause.jsx\";\r\n\r\nconst GamePlayArea = (props) => {\r\n  const opponentTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.opponentTimeLeftToMove\r\n  );\r\n  const playerTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.playerTimeLeftToMove\r\n  );\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const capturedPieces = useSelector(\r\n    (state) => state.boardState.capturedPieces\r\n  );\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  return (\r\n    <Col\r\n      md={{ span: 4 }}\r\n      sm={{ span: 11 }}\r\n      xs={{ span: 11 }}\r\n      className=\"board-container pb-3\"\r\n    >\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <img src={opponentInfo.photo} alt=\"\" />\r\n          <p className=\"user-name\">{opponentInfo.playername}</p>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[1])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer\r\n          timeLeftToMove={opponentTimeLeftToMove}\r\n          turnToMove={foundMatch && !gameResult ? !turnToMove : turnToMove}\r\n        />\r\n      </div>\r\n      <Board />\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <div className=\"avatar-and-name\">\r\n            <img src={playerInfo.photo} alt=\"\" />\r\n            <p className=\"user-name\">{playerInfo.username}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[0])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer timeLeftToMove={playerTimeLeftToMove} turnToMove={turnToMove} />\r\n      </div>\r\n      <GameResult />\r\n      <Pause />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GamePlayArea;\r\n","const renderMessages = (messages) => {\r\n  const displayMessages = messages.map((element, index) => {\r\n    if (element.type) {\r\n      return (\r\n        <li key={`m${index}`} ref={element.ref} className={element.className}>\r\n          <p className=\"game-over\">Game Over</p>\r\n          <p>{`${element.winner}${element.reason}`}</p>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <li key={`m${index}`} ref={element.ref} className={element.className}>\r\n        <span>{element.from}</span> {element.message}\r\n      </li>\r\n    );\r\n  });\r\n  return displayMessages;\r\n};\r\n\r\nexport default renderMessages;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./DrawOffer.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n} from \"../../../../../App/context.js\";\r\n\r\nconst DrawOffer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n  const receiveDrawOffer = useSelector(\r\n    (state) => state.gameState.receiveDrawOffer\r\n  );\r\n\r\n  const handleDrawResult = () => {\r\n    const listItemRef = React.createRef();\r\n    dispatch({ type: \"setGameResult\", value: \"Draw\" });\r\n    dispatch({\r\n      type: \"setMessage\",\r\n      value: {\r\n        type: \"game result message\",\r\n        winner: \"\",\r\n        reason: \"Game Draw By Agreement\",\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      },\r\n    });\r\n    setMoveTimer(null, true, dispatch);\r\n  };\r\n\r\n  const handleAcceptOffer = () => {\r\n    dispatch({ type: \"setReceiveDrawOffer\", value: false });\r\n    handleDrawResult();\r\n    socket.emit(\"gameFinish\", \"Draw\");\r\n  };\r\n\r\n  const handleDeclineOffer = () => {\r\n    const listItemRef = React.createRef();\r\n    dispatch({ type: \"setReceiveDrawOffer\", value: false });\r\n    dispatch({\r\n      type: \"setMessage\",\r\n      value: {\r\n        from: `${playerInfo.username}`,\r\n        message: \"Declined A Draw\",\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      },\r\n    });\r\n    socket.emit(\"sendMessage\", {\r\n      from: `${playerInfo.username}`,\r\n      message: \"Declined A Draw\",\r\n      className: \"game-message\",\r\n      ref: listItemRef,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receiveDrawOffer\", () => {\r\n      dispatch({ type: \"setReceiveDrawOffer\", value: true });\r\n    });\r\n\r\n    socket.on(\"draw\", () => {\r\n      handleDrawResult();\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"draw\");\r\n      socket.removeAllListeners(\"receiveDrawOffer\");\r\n    };\r\n  });\r\n\r\n  if (!receiveDrawOffer) return null;\r\n  return (\r\n    <li className=\"draw-offer\" style={{ display: props.display }}>\r\n      <p>\r\n        <span>{opponentInfo.playername}</span> Offer A Draw\r\n      </p>\r\n      <div className=\"answer\">\r\n        <Button className=\"accept-offer\" onClick={handleAcceptOffer}>\r\n          Accept <i className=\"fas fa-check\"></i>\r\n        </Button>\r\n        <Button className=\"decline-offer\" onClick={handleDeclineOffer}>\r\n          Decline <i className=\"fas fa-times\"></i>\r\n        </Button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DrawOffer;\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./ChatSection.scss\";\r\nimport renderMessages from \"./renderMessages.js\";\r\nimport DrawOffer from \"./DrawOffer/DrawOffer.jsx\";\r\nimport { SocketContext } from \"../../../../App/context.js\";\r\n\r\nconst ChatSection = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesContainerRef = useRef();\r\n  const messages = useSelector((state) => state.gameState.messages);\r\n  const [hideChat, setHideChat] = useState(false);\r\n  const displayMessages = renderMessages(messages);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  const handleOnChange = (event) => {\r\n    setInput(event.currentTarget.value);\r\n  };\r\n\r\n  const handleHideChat = () => {\r\n    setHideChat(true);\r\n  };\r\n\r\n  const handleShowChat = () => {\r\n    setHideChat(false);\r\n  };\r\n\r\n  const handleSendMessage = (event) => {\r\n    if (input) {\r\n      const listItemRef = React.createRef();\r\n      const message = {\r\n        from: `${playerInfo.username}: `,\r\n        message: input,\r\n        className: \"\",\r\n        ref: listItemRef,\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      setInput(\"\");\r\n      socket.emit(\"sendMessage\", message);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      const list = messagesContainerRef.current;\r\n      const lastListItem = messages[messages.length - 1].ref.current;\r\n      if (lastListItem) {\r\n        list.scrollTop = lastListItem.offsetTop;\r\n      }\r\n    }\r\n    socket.on(\"incomingMessage\", (message) => {\r\n      if (message.from && message.className !== \"game-message\")\r\n        message.from = `${opponentInfo.playername}: `;\r\n      dispatch({ type: \"setMessage\", value: message });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"incomingMessage\");\r\n    };\r\n  });\r\n\r\n  return hideChat ? (\r\n    <Button className=\"show-chat\" onClick={handleShowChat}>\r\n      Show Chat\r\n      <DrawOffer display=\"none\" />\r\n    </Button>\r\n  ) : (\r\n    <div className=\"chat-section\">\r\n      <i className=\"fas fa-times hide-chat\" onClick={handleHideChat}></i>\r\n      <ul className=\"message-container\" ref={messagesContainerRef}>\r\n        <li className=\"announce-new-game\">\r\n          <p className=\"versus game-message\">\r\n            <span>{opponentInfo.playername}</span> vs{\" \"}\r\n            <span>{playerInfo.username}</span>\r\n          </p>\r\n        </li>\r\n        {displayMessages}\r\n      </ul>\r\n      <DrawOffer display=\"flex\" />\r\n      <form className=\"chat-input\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Message...\"\r\n          onChange={handleOnChange}\r\n          value={input}\r\n        />\r\n        <Button className=\"send-btn\" type=\"submit\">\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSection;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport \"./GameBar.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChatSection from \"./ChatSection/ChatSection.jsx\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst GameBar = () => {\r\n  const dispatch = useDispatch();\r\n  const receiveDrawOffer = useSelector(\r\n    (state) => state.gameState.receiveDrawOffer\r\n  );\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  const handlePauseOrResume = (event) => {\r\n    const listItemRef = React.createRef();\r\n    const action = event.currentTarget.id;\r\n    const message = {\r\n      from: `${playerInfo.username}`,\r\n      message: `${action}d Game`,\r\n      className: \"game-message\",\r\n      ref: listItemRef,\r\n    };\r\n    dispatch({ type: \"setMessage\", value: message });\r\n    dispatch({\r\n      type: \"setPause\",\r\n      value: `${playerInfo.username} ${action}d Game`,\r\n    });\r\n    socket.emit(`player${action}Game`);\r\n  };\r\n\r\n  const handleGameOver = (result, reason) => {\r\n    const listItemRef = React.createRef();\r\n    dispatch({ type: \"setGameResult\", value: result });\r\n    dispatch({\r\n      type: \"setMessage\",\r\n      value: {\r\n        type: \"game result message\",\r\n        winner: `${\r\n          result === \"Won\"\r\n            ? `${playerInfo.username}`\r\n            : `${opponentInfo.playername}`\r\n        } Won - `,\r\n        reason: reason,\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      },\r\n    });\r\n    setMoveTimer(null, true, dispatch);\r\n  };\r\n\r\n  const handleOfferDraw = () => {\r\n    if (!receiveDrawOffer) {\r\n      const listItemRef = React.createRef();\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          from: `${playerInfo.username}`,\r\n          message: \"Offered A Draw\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n      socket.emit(\"sendDrawOffer\");\r\n    }\r\n  };\r\n\r\n  const handleResign = () => {\r\n    handleGameOver(\"Lose\", `${playerInfo.username} Resign`);\r\n    socket.emit(\"gameFinish\", [\"Won\", `${playerInfo.username} Resign`]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"gameOver\", (result, reason) => {\r\n      if (gameResult !== null) return;\r\n      handleGameOver(result, reason);\r\n    });\r\n\r\n    socket.on(\"opponentLeftGame\", () => {\r\n      const listItemRef = React.createRef();\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          from: `${opponentInfo.playername}`,\r\n          message: \"Left The Game\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentLeftGame\");\r\n      socket.removeAllListeners(\"gameOver\");\r\n    };\r\n  });\r\n\r\n  const handleExit = () => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    socket.emit(\"exitGame\");\r\n    dispatch({ type: \"resetBoardState\", value: width });\r\n    dispatch({ type: \"resetGameState\" });\r\n  };\r\n\r\n  return (\r\n    <Col\r\n      md={{ span: 4 }}\r\n      xs={{ span: 10 }}\r\n      className=\"game-controller mb-3 game-bar-controller\"\r\n    >\r\n      <div className=\"button-container game-bar\">\r\n        <div className=\"select-side-container\">\r\n          <Button\r\n            className=\"red-side draw-btn\"\r\n            value=\"draw\"\r\n            onClick={handleOfferDraw}\r\n            disabled={gameResult !== null || pause}\r\n          >\r\n            &#189; Draw\r\n          </Button>\r\n          <Button\r\n            className=\"black-side resign-btn\"\r\n            value=\"resign\"\r\n            onClick={handleResign}\r\n            disabled={gameResult !== null || pause}\r\n          >\r\n            <i className=\"fas fa-flag\"></i> Resign\r\n          </Button>\r\n        </div>\r\n        <div className=\"time-select-container\">\r\n          <Button\r\n            className=\"select-timer pause-btn\"\r\n            disabled={gameResult !== null || (pause && !/Paused/.test(pause))}\r\n            id={!pause ? \"Pause\" : \"Resume\"}\r\n            onClick={handlePauseOrResume}\r\n          >\r\n            <i className={`fas fa-${!pause ? \"pause\" : \"play\"}`}></i>{\" \"}\r\n            {!pause ? \"Pause\" : \"Resume\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <ChatSection />\r\n      <Button\r\n        className=\"exit-game\"\r\n        disabled={gameResult === null}\r\n        onClick={handleExit}\r\n      >\r\n        Exit Game\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GameBar;\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport GameBar from \"./GameBar/GameBar.jsx\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../App/context.js\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const foundMatchRef = useRef();\r\n\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    foundMatchRef.current = foundMatch;\r\n  }, [foundMatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (foundMatchRef.current) {\r\n        const listItemRef = React.createRef();\r\n        dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            type: \"game result message\",\r\n            winner: \"Opponent Won - \",\r\n            reason: \"Game Abandoned\",\r\n            className: \"game-message\",\r\n            ref: listItemRef,\r\n          },\r\n        });\r\n        setMoveTimer(null, true, dispatch);\r\n        socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea />\r\n      {!foundMatch ? (\r\n        <GameController\r\n          timeSelectorDisplay={timeSelectorDisplay}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ) : (\r\n        <GameBar />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./VerifyEmailNote.scss\";\r\n\r\nconst VerifyEmailNote = () => {\r\n  const [hideNote, setHideNote] = useState(false);\r\n\r\n  const handleHideNote = () => {\r\n    setHideNote(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"verify-email-note\"\r\n      style={{ display: hideNote ? \"none\" : \"block\" }}\r\n    >\r\n      <p>\r\n        Look Like you haven't verified your email. Please click{\" \"}\r\n        <Link to=\"/verify-email\">here</Link> to verify your email.\r\n      </p>\r\n      <i className=\"fas fa-times hide-note\" onClick={handleHideNote}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmailNote;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport { AuthenticateUserContext } from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  useEffect(async () => {\r\n    if (!isAuthenticated) {\r\n      setWaitForResponse(true);\r\n      const { user, sessionID, message } = await callAPI(\"GET\", \"user\", null);\r\n      setWaitForResponse(false);\r\n      if (user) {\r\n        authenticateUser(dispatch, user, sessionID);\r\n      } else if (message) dispatch({ type: \"setLoginError\", value: message });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\"title\").innerText =\r\n      lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\r\n  }, [lang]);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n\r\n  return (\r\n    <Container fluid className={waitForResponse ? \"loading\" : \"\"}>\r\n      {waitForResponse ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <NavBar setWaitForResponse={setWaitForResponse} />\r\n          {isAuthenticated ? <Game /> : <EntryComponent />}\r\n        </div>\r\n      )}\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote />\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthenticateUserContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\r\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\r\n  const [checkingSession, setCheckingSession] = useState(false);\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [successfullyLogin, setSuccessfullyLogin] = useState(false);\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^_a-z0-9]/i.test(value) || value.length < 3 || value.length > 20) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^ _a-z]/i.test(value))\r\n      setInvalidFirstname(\"Firstname can only contain letter, space and _\");\r\n    else setInvalidFirstname(\"\");\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^ _a-z]/i.test(value) || /[^a-z]/i.test(value[0])) {\r\n      if (/[^a-z]/i.test(value[0]))\r\n        setInvalidLastname(\"First letter must be letter\");\r\n      else setInvalidLastname(\"Lastname can only contain letter, space and _\");\r\n    } else setInvalidLastname(\"\");\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!firstname) {\r\n      count += 1;\r\n      setInvalidFirstname(\"Please fill out this field\");\r\n    }\r\n    if (!lastname) {\r\n      count += 1;\r\n      setInvalidLastname(\"Please fill out this field\");\r\n    }\r\n    if (!email) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Email/.test(message)) {\r\n      setInvalidEmailMess(message);\r\n    } else if (/User/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n  };\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault();\r\n    const missingField = handleMissingField();\r\n    if (\r\n      !missingField &&\r\n      !invalidEmailMess &&\r\n      !invalidPasswordMess &&\r\n      !invalidUsernameMess &&\r\n      !invalidFirstname &&\r\n      !invalidLastname\r\n    ) {\r\n      setWaitForResponse(true);\r\n      setError(null);\r\n      const { message, user, ok, sessionID } = await callAPI(\"POST\", \"signup\", {\r\n        email: email,\r\n        firstname: firstname,\r\n        username: username,\r\n        password: password,\r\n        lastname: lastname,\r\n      });\r\n      setWaitForResponse(false);\r\n      if (user) {\r\n        authenticateUser(dispatch, user, sessionID);\r\n      } else handleError(ok, message);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (isAuthenticated) return;\r\n    setCheckingSession(true);\r\n    const { user, sessionID, message, ok } = await callAPI(\"GET\", \"user\", null);\r\n    setCheckingSession(false);\r\n    if (user) {\r\n      authenticateUser(dispatch, user, sessionID);\r\n    } else handleError(ok, message);\r\n  }, [isAuthenticated]);\r\n\r\n  if (isAuthenticated) {\r\n    if (isAuthenticated !== \"guest\") return <Redirect to=\"/\" />;\r\n    else if (successfullyLogin) return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      {checkingSession ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col\r\n            md={{ span: 4 }}\r\n            sm={{ span: 6 }}\r\n            xs={{ span: 10 }}\r\n            className=\"login-component d-flex flex-column  align-items-center\"\r\n          >\r\n            {error ? <p className=\"error-message\">{error}</p> : null}\r\n            <Form onSubmit={handleSignUp} method=\"POST\">\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label style={{ float: \"left\" }}>Username</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidUsernameMess !== \"\"}\r\n                    onChange={handleUsernameChange}\r\n                    value={username}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"firstname\">\r\n                <Form.Label style={{ float: \"left\" }}>Firstname</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidFirstname !== \"\"}\r\n                    onChange={handleFirstnameChange}\r\n                    value={firstname}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidFirstname}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"lastname\">\r\n                <Form.Label style={{ float: \"left\" }}>Lastname</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidLastname !== \"\"}\r\n                    onChange={handleLastnameChange}\r\n                    value={lastname}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidLastname}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label style={{ float: \"left\" }}>Email</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidEmailMess !== \"\"}\r\n                    onChange={handleEmailChange}\r\n                    value={email}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidEmailMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label style={{ float: \"left\" }}>Password</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    isInvalid={invalidPasswordMess !== \"\"}\r\n                    onChange={handlePasswordChange}\r\n                    value={password}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\">\r\n                {waitForResponse ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </Button>\r\n            </Form>\r\n            <p className=\"seperator\">\r\n              <span></span>\r\n              <span className=\"seperator-text\">or connect with</span>\r\n              <span></span>\r\n            </p>\r\n            <div className=\"social-login\">\r\n              <a\r\n                className=\"google\"\r\n                href=\"http://localhost:8080/api/auth/google\"\r\n              >\r\n                <i className=\"fab fa-google\"></i> Google\r\n              </a>\r\n              <a\r\n                className=\"facebook\"\r\n                href=\"http://localhost:8080/api/auth/facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook \"></i> Facebook\r\n              </a>\r\n              <a\r\n                className=\"github\"\r\n                href=\"http://localhost:8080/api/auth/github\"\r\n              >\r\n                <i className=\"fab fa-github \"></i> Github\r\n              </a>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst VerifyEmail = () => {\r\n  const dispatch = useDispatch();\r\n  const [verified, setVerified] = useState(false);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [resend, setResend] = useState(false);\r\n  const [verificationCode, setVerficationCode] = useState(\"\");\r\n  const [invalidCodeMess, setInvalidCodeMess] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [waitForSendingCode, setWaitForSendingCode] = useState(false);\r\n  const codeRef = useRef();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  const handleVerificationCodeChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^0-9]/.test(value) || value.length > 5)\r\n      setInvalidCodeMess(\"Invalid verification code\");\r\n    else setInvalidCodeMess(\"\");\r\n    setVerficationCode(value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!verificationCode) setInvalidCodeMess(\"Please fill in this field\");\r\n    else if (!invalidCodeMess) {\r\n      setWaitForResponse(true);\r\n      const { message, ok, user } = await callAPI(\"POST\", \"verify-email/code\", {\r\n        username: playerInfo.username,\r\n        correct: +codeRef.current === +verificationCode,\r\n      });\r\n      setWaitForResponse(false);\r\n      if (!ok) setError(message);\r\n      else if (user) {\r\n        setVerified(true);\r\n        dispatch({ type: \"setPlayerInfo\", value: user });\r\n      } else if (+codeRef.current === +verificationCode)\r\n        setInvalidCodeMess(\"Incorrect Code\");\r\n      else setError(message);\r\n    }\r\n  };\r\n\r\n  const sendVerificationCode = async () => {\r\n    if (!resend) setResend(true);\r\n    setWaitForSendingCode(true);\r\n    setError(\"\");\r\n    const { message, code, ok } = await callAPI(\"POST\", \"verify-email\", {\r\n      email: playerInfo.email.value,\r\n      lastname: playerInfo.name.lastname,\r\n    });\r\n    setWaitForSendingCode(false);\r\n    if (!ok) setError(message);\r\n    else codeRef.current = code;\r\n  };\r\n\r\n  if (!playerInfo || verified) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 3 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          {error ? <p className=\"error-message\">{error}</p> : null}\r\n          <Form onSubmit={handleSubmit} method=\"POST\">\r\n            <Form.Group controlId=\"verificationCode\">\r\n              <Form.Label style={{ float: \"left\" }}>\r\n                Enter your verification code\r\n              </Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"verificationCode\"\r\n                  isInvalid={invalidCodeMess !== \"\"}\r\n                  onChange={handleVerificationCodeChange}\r\n                  value={verificationCode}\r\n                  placeholder=\"Verification Code\"\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidCodeMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">\r\n              {waitForResponse ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              onClick={sendVerificationCode}\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              {waitForSendingCode ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : resend ? (\r\n                \"Resend Verification Code\"\r\n              ) : (\r\n                \"Send Verification Code\"\r\n              )}\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport SignIn from \"../SignIn/SignIn.jsx\";\r\nimport Main from \"../Main/Main.jsx\";\r\nimport Signup from \"../Signup/Signup.jsx\";\r\nimport VerifyEmail from \"../VerifyEmail/VerifyEmail.jsx\";\r\nimport {\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n  setMoveTimer,\r\n  AuthenticateUserContext,\r\n  authenticateUser,\r\n  socket,\r\n} from \"./context.js\";\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <SetMoveTimerContext.Provider value={setMoveTimer}>\r\n        <AuthenticateUserContext.Provider value={authenticateUser}>\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/signin\">\r\n                <SignIn />\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route path=\"/verify-email\">\r\n                <VerifyEmail />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Main />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </AuthenticateUserContext.Provider>\r\n      </SetMoveTimerContext.Provider>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","const advisorRules = [\r\n  [1, 1],\r\n  [1, -1],\r\n  [-1, 1],\r\n  [-1, -1],\r\n];\r\n\r\nexport default advisorRules;\r\n","import Piece from \"./piece.js\";\r\nimport advisorRules from \"./move_rules/advisorRules.js\";\r\n\r\nclass Advisor extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = advisorRules;\r\n    this.minCol = 3;\r\n    this.maxCol = 5;\r\n    this.minRow = this.side === this.choosenSide[0] ? 0 : 7;\r\n    this.maxRow = this.side === this.choosenSide[0] ? 2 : 9;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol || curRow !== newRow);\r\n\r\n    return count;\r\n  }\r\n\r\n  canCaptureGeneral() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Advisor;\r\n","const generalRules = [\r\n  [1, 0],\r\n  [0, 1],\r\n  [-1, 0],\r\n  [0, -1],\r\n];\r\n\r\nexport default generalRules;\r\n","import Advisor from \"./advisor.js\";\r\nimport generalRules from \"./move_rules/generalRules.js\";\r\n\r\nclass General extends Advisor {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = generalRules;\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    let [curRow, curCol] = this.position;\r\n    const tmp = curRow < 3 ? 1 : -1;\r\n    do {\r\n      curRow += tmp;\r\n      if (tmpBoard[curRow][curCol]) {\r\n        if (tmpBoard[curRow][curCol].name.split(\"-\")[0] === \"general\") {\r\n          return tmpBoard[curRow][curCol].translate;\r\n        }\r\n        return false;\r\n      }\r\n    } while (curRow !== 0 && curRow !== 9);\r\n    return false;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (newRow === curRow) {\r\n      do {\r\n        curCol += curCol > newCol ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curCol !== newCol);\r\n    } else {\r\n      do {\r\n        curRow += curRow > newRow ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curRow !== newRow);\r\n    }\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default General;\r\n","const cannonRules = [\r\n  [0, 1],\r\n  [0, 2],\r\n  [0, 3],\r\n  [0, 4],\r\n  [0, 5],\r\n  [0, 6],\r\n  [0, 7],\r\n  [0, 8],\r\n  [0, -1],\r\n  [0, -2],\r\n  [0, -3],\r\n  [0, -4],\r\n  [0, -5],\r\n  [0, -6],\r\n  [0, -7],\r\n  [0, -8],\r\n  [1, 0],\r\n  [2, 0],\r\n  [3, 0],\r\n  [4, 0],\r\n  [5, 0],\r\n  [6, 0],\r\n  [7, 0],\r\n  [8, 0],\r\n  [9, 0],\r\n  [-1, 0],\r\n  [-2, 0],\r\n  [-3, 0],\r\n  [-4, 0],\r\n  [-5, 0],\r\n  [-6, 0],\r\n  [-7, 0],\r\n  [-8, 0],\r\n  [-9, 0],\r\n];\r\n\r\nexport default cannonRules;\r\n","import Piece from \"./piece.js\";\r\nimport cannonRules from \"./move_rules/cannonRules.js\";\r\n\r\nclass Cannon extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = cannonRules;\r\n  }\r\n\r\n  canMoveToNewPosition(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (this.side === this.choosenSide[1]) {\r\n      const isValid = this.checkValidMove(newRow, newCol, board);\r\n      if (isValid && !/translate/.test(isValid)) {\r\n        if (!board[newRow][newCol].side) {\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 0) return true;\r\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 2)\r\n            return \"capture\";\r\n      } else if (isValid) return isValid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    for (let move of this.moves) {\r\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n        if (tmpBoard[newRow][newCol].side)\r\n          if (tmpBoard[newRow][newCol].side !== tmpBoard[curRow][curCol].side)\r\n            if (this.countPiecesBetween(newRow, newCol, tmpBoard) === 2)\r\n              if (tmpBoard[newRow][newCol].name.split(\"-\")[0] === \"general\") {\r\n                return tmpBoard[newRow][newCol].translate;\r\n              }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Cannon;\r\n","const elephantRules = [\r\n  [-2, -2],\r\n  [2, 2],\r\n  [-2, 2],\r\n  [2, -2],\r\n];\r\n\r\nexport default elephantRules;\r\n","import Piece from \"./piece.js\";\r\nimport elephantRules from \"./move_rules/elephantRules.js\";\r\n\r\nclass Elephant extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = elephantRules;\r\n    this.maxRow = this.side === this.choosenSide[0] ? 4 : 9;\r\n    this.minRow = this.side === this.choosenSide[0] ? 0 : 5;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol || curRow !== newRow);\r\n\r\n    return count;\r\n  }\r\n\r\n  canCaptureGeneral() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Elephant;\r\n","const chariotRules = [\r\n  [0, 1],\r\n  [0, 2],\r\n  [0, 3],\r\n  [0, 4],\r\n  [0, 5],\r\n  [0, 6],\r\n  [0, 7],\r\n  [0, 8],\r\n  [0, -1],\r\n  [0, -2],\r\n  [0, -3],\r\n  [0, -4],\r\n  [0, -5],\r\n  [0, -6],\r\n  [0, -7],\r\n  [0, -8],\r\n  [1, 0],\r\n  [2, 0],\r\n  [3, 0],\r\n  [4, 0],\r\n  [5, 0],\r\n  [6, 0],\r\n  [7, 0],\r\n  [8, 0],\r\n  [9, 0],\r\n  [-1, 0],\r\n  [-2, 0],\r\n  [-3, 0],\r\n  [-4, 0],\r\n  [-5, 0],\r\n  [-6, 0],\r\n  [-7, 0],\r\n  [-8, 0],\r\n  [-9, 0],\r\n];\r\n\r\nexport default chariotRules;\r\n","import Piece from \"./piece.js\";\r\nimport chariotRules from \"./move_rules/chariotRules.js\";\r\n\r\nclass Chariot extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = chariotRules;\r\n  }\r\n}\r\n\r\nexport default Chariot;\r\n","const horseRules = [\r\n  [2, 1],\r\n  [2, -1],\r\n  [-2, 1],\r\n  [-2, -1],\r\n  [1, 2],\r\n  [-1, 2],\r\n  [1, -2],\r\n  [-1, -2],\r\n];\r\n\r\nexport default horseRules;\r\n","import horseRules from \"./move_rules/horseRules.js\";\r\nimport Piece from \"./piece.js\";\r\n\r\nclass Horse extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = horseRules;\r\n  }\r\n\r\n  canMoveToNewPosition(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (this.side === this.choosenSide[1]) {\r\n      const isValid = this.checkValidMove(newRow, newCol, board);\r\n      if (isValid && !/translate/.test(isValid)) {\r\n        if (!this.isBlocked(newRow, newCol, board)) {\r\n          if (!board[newRow][newCol].side) {\r\n            return true;\r\n          } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n            return \"capture\";\r\n        }\r\n      } else if (isValid) return isValid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isBlocked(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    if (Math.abs(moveRow) === 2) {\r\n      return board[curRow + moveRow / 2][curCol] !== 0;\r\n    } else {\r\n      return board[curRow][curCol + moveCol / 2] !== 0;\r\n    }\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    for (let move of this.moves) {\r\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n        if (tmpBoard[newRow][newCol].side)\r\n          if (tmpBoard[newRow][newCol].side !== tmpBoard[curRow][curCol].side)\r\n            if (!this.isBlocked(newRow, newCol, tmpBoard))\r\n              if (tmpBoard[newRow][newCol].name.split(\"-\")[0] === \"general\") {\r\n                return tmpBoard[newRow][newCol].translate;\r\n              }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Horse;\r\n","const soliderRules = [[[1, 0]], [[-1, 0]]];\r\n\r\nexport default soliderRules;\r\n","import Piece from \"./piece.js\";\r\nimport soliderRules from \"./move_rules/soldierRules.js\";\r\n\r\nclass Soldier extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves =\r\n      choosenSide[0] === this.side\r\n        ? [...soliderRules[0]]\r\n        : [...soliderRules[1]];\r\n  }\r\n\r\n  setPosition(capture, newRow, newCol) {\r\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\r\n    const translate = `translate(${translateX}, ${translateY})`;\r\n    this.position = [newRow, newCol];\r\n    this.translate = translate;\r\n    if (this.side === this.choosenSide[0]) {\r\n      if (this.position[0] > 4) this.crossRiver();\r\n    } else if (this.position[0] < 5) this.crossRiver();\r\n    return [capture === \"capture\", newRow, newCol];\r\n  }\r\n\r\n  crossRiver() {\r\n    this.moves.push([0, 1]);\r\n    this.moves.push([0, -1]);\r\n  }\r\n}\r\n\r\nexport default Soldier;\r\n","import Advisor from \"./advisor.js\";\r\nimport General from \"./general.js\";\r\nimport Cannon from \"./cannon.js\";\r\nimport Elephant from \"./elephant.js\";\r\nimport Chariot from \"./chariot.js\";\r\nimport Horse from \"./horse.js\";\r\nimport Solider from \"./soldier.js\";\r\n\r\nconst instantiatePiece = (width, row, col, name, choosenSide) => {\r\n  const pieceName = name.split(\"-\")[0];\r\n  switch (pieceName) {\r\n    case \"advisor\":\r\n      return new Advisor(width, row, col, name, choosenSide);\r\n    case \"general\":\r\n      return new General(width, row, col, name, choosenSide);\r\n    case \"cannon\":\r\n      return new Cannon(width, row, col, name, choosenSide);\r\n    case \"soldier\":\r\n      return new Solider(width, row, col, name, choosenSide);\r\n    case \"chariot\":\r\n      return new Chariot(width, row, col, name, choosenSide);\r\n    case \"horse\":\r\n      return new Horse(width, row, col, name, choosenSide);\r\n    default:\r\n      return new Elephant(width, row, col, name, choosenSide);\r\n  }\r\n};\r\n\r\nexport default instantiatePiece;\r\n","import instantiatePiece from \"../../../../pieces/instantiatePiece.js\";\r\n\r\nconst getInitialPosition = (side) => {\r\n  return {\r\n    \"0,0\": `chariot-${side[0]}`,\r\n    \"0,1\": `horse-${side[0]}`,\r\n    \"0,2\": `elephant-${side[0]}`,\r\n    \"0,3\": `advisor-${side[0]}`,\r\n    \"0,4\": `general-${side[0]}`,\r\n    \"0,5\": `advisor-${side[0]}`,\r\n    \"0,6\": `elephant-${side[0]}`,\r\n    \"0,7\": `horse-${side[0]}`,\r\n    \"0,8\": `chariot-${side[0]}`,\r\n    \"2,1\": `cannon-${side[0]}`,\r\n    \"2,7\": `cannon-${side[0]}`,\r\n    \"3,0\": `soldier-${side[0]}`,\r\n    \"3,2\": `soldier-${side[0]}`,\r\n    \"3,4\": `soldier-${side[0]}`,\r\n    \"3,6\": `soldier-${side[0]}`,\r\n    \"3,8\": `soldier-${side[0]}`,\r\n    \"6,0\": `soldier-${side[1]}`,\r\n    \"6,2\": `soldier-${side[1]}`,\r\n    \"6,4\": `soldier-${side[1]}`,\r\n    \"6,6\": `soldier-${side[1]}`,\r\n    \"6,8\": `soldier-${side[1]}`,\r\n    \"7,1\": `cannon-${side[1]}`,\r\n    \"7,7\": `cannon-${side[1]}`,\r\n    \"9,0\": `chariot-${side[1]}`,\r\n    \"9,1\": `horse-${side[1]}`,\r\n    \"9,2\": `elephant-${side[1]}`,\r\n    \"9,3\": `advisor-${side[1]}`,\r\n    \"9,4\": `general-${side[1]}`,\r\n    \"9,5\": `advisor-${side[1]}`,\r\n    \"9,6\": `elephant-${side[1]}`,\r\n    \"9,7\": `horse-${side[1]}`,\r\n    \"9,8\": `chariot-${side[1]}`,\r\n  };\r\n};\r\n\r\nconst initializeBoard = (width, side) => {\r\n  const initialBoard = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ];\r\n\r\n  const initialPosition = getInitialPosition(side);\r\n  for (let i = 0; i < 10; i++)\r\n    for (let j = 0; j < 9; j++) {\r\n      const pieceName = initialPosition[[i, j].toString()];\r\n      if (pieceName) {\r\n        initialBoard[i][j] = instantiatePiece(width, i, j, pieceName, side);\r\n      }\r\n    }\r\n  return initialBoard;\r\n};\r\n\r\nexport default initializeBoard;\r\n","import initializeBoard from \"../Components/Main/Game/Board/initializeBoard.js\";\r\n\r\nconst defaultState = {\r\n  board: initializeBoard(520 / 9, [\"red\", \"black\"]),\r\n  targetDisplay: \"none\",\r\n  targetTranslate: \"translate(0, 0)\",\r\n  boardSize: [520, 520 / (521 / 577)],\r\n  currentPiece: null,\r\n  getClicked: false,\r\n  draggable: false,\r\n  capturedPieces: [],\r\n  turnToMove: false,\r\n  side: [\"red\", \"black\"],\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setBoard\":\r\n      newState.board = value;\r\n      return newState;\r\n    case \"setTargetDisplay\":\r\n      newState.targetDisplay = value;\r\n      return newState;\r\n    case \"setTargetTranslate\":\r\n      newState.targetTranslate = value;\r\n      return newState;\r\n    case \"setBoardSize\":\r\n      newState.boardSize = value;\r\n      return newState;\r\n    case \"setCurrentPiece\":\r\n      newState.currentPiece = value;\r\n      return newState;\r\n    case \"setGetClicked\":\r\n      newState.getClicked = value;\r\n      return newState;\r\n    case \"setDraggable\":\r\n      newState.draggable = value;\r\n      return newState;\r\n    case \"setCapturedPieces\":\r\n      const newCapturedPieces = [...newState.capturedPieces];\r\n      newCapturedPieces.push(value);\r\n      newState.capturedPieces = newCapturedPieces;\r\n      return newState;\r\n    case \"setTurnToMove\":\r\n      newState.turnToMove = value;\r\n      return newState;\r\n    case \"switchSide\":\r\n      const width = +document.querySelector(\".board-container\").offsetWidth;\r\n      newState.board = initializeBoard(width / 9, value);\r\n      newState.side = value;\r\n      return newState;\r\n    case \"resetBoardState\":\r\n      defaultState.board = initializeBoard(value / 9, [\"red\", \"black\"]);\r\n      defaultState.boardSize = [value, value / (521 / 577)];\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","const gameReducer = (\r\n  state = {\r\n    lang: \"English\",\r\n    isAuthenticated: false,\r\n    playerInfo: null,\r\n    loginError: null,\r\n  },\r\n  action\r\n) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setLoginError\":\r\n      newState.loginError = value;\r\n      return newState;\r\n    case \"setPlayerInfo\":\r\n      newState.playerInfo = value;\r\n      return newState;\r\n    case \"setLang\":\r\n      newState.lang = value;\r\n      return newState;\r\n    case \"setIsAuthenticated\":\r\n      newState.isAuthenticated = value;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","const defaultState = {\r\n  findingMatch: \"Play\",\r\n  foundMatch: false,\r\n  time: 10,\r\n  opponentTimeLeftToMove: 10 * 60,\r\n  playerTimeLeftToMove: 10 * 60,\r\n  pause: false,\r\n  pauseTime: 25 * 60,\r\n  receiveDrawOffer: false,\r\n  messages: [],\r\n  opponentInfo: {\r\n    playername: \"Opponent\",\r\n    photo:\r\n      \"https://betacssjs.chesscomfiles.com/bundles/web/images/black_400.918cdaa6.png\",\r\n  },\r\n  gameResult: null,\r\n  gameResultDisplay: \"flex\",\r\n};\r\n\r\nconst gameReducer = (state = defaultState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setOpponentInfo\":\r\n      newState.opponentInfo = value;\r\n      return newState;\r\n    case \"setPauseTime\":\r\n      if (value === \"restart\") newState.pauseTime = 25 * 60;\r\n      else if (value === \"timeout\") newState.pauseTime = 5;\r\n      else newState.pauseTime -= 1;\r\n      return newState;\r\n    case \"setGameResult\":\r\n      newState.gameResult = value;\r\n      return newState;\r\n    case \"setFindingMatch\":\r\n      newState.findingMatch = value;\r\n      return newState;\r\n    case \"setFoundMatch\":\r\n      newState.foundMatch = value;\r\n      return newState;\r\n    case \"setTime\":\r\n      newState.time = value;\r\n      newState.playerTimeLeftToMove = value * 60;\r\n      newState.opponentTimeLeftToMove = value * 60;\r\n      return newState;\r\n    case \"setPlayerTimeLeftToMove\":\r\n      if (value === \"restart\")\r\n        newState.playerTimeLeftToMove = newState.time * 60;\r\n      else newState.playerTimeLeftToMove -= 1;\r\n      return newState;\r\n    case \"setOpponentTimeLeftToMove\":\r\n      if (value === \"restart\")\r\n        newState.opponentTimeLeftToMove = newState.time * 60;\r\n      else newState.opponentTimeLeftToMove -= 1;\r\n      return newState;\r\n    case \"setPause\":\r\n      newState.pause = value;\r\n      return newState;\r\n    case \"setReceiveDrawOffer\":\r\n      newState.receiveDrawOffer = value;\r\n      return newState;\r\n    case \"setMessage\":\r\n      const newMessages = [...newState.messages];\r\n      newMessages.push(value);\r\n      newState.messages = newMessages;\r\n      return newState;\r\n    case \"setGameResultDisplay\":\r\n      newState.gameResultDisplay = value;\r\n      return newState;\r\n    case \"resetGameState\":\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n","import boardReducer from \"./boardReducer.js\";\r\nimport appReducer from \"./appReducer.js\";\r\nimport { combineReducers } from \"redux\";\r\nimport gameReducer from \"./gameReducer.js\";\r\n\r\nconst rootReducer = combineReducers({\r\n  boardState: boardReducer,\r\n  appState: appReducer,\r\n  gameState: gameReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./Components/App/App.jsx\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducer/rootReducer.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}