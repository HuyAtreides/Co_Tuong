{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\nimport NavBar from \"./NavBar/NavBar.jsx\";\nimport { Container } from \"react-bootstrap\";\nimport \"./Main.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Game from \"./Game/Game.jsx\";\nimport { Spinner } from \"react-bootstrap\";\nimport callAPI from \"../App/callAPI.js\";\nimport { AuthenticateUserContext, SocketContext, SetMoveTimerContext } from \"../App/context\";\nimport { Redirect } from \"react-router-dom\";\nimport Warning from \"./Warning/Warning.jsx\";\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [connectionError, setConnectionError] = useState(null);\n  const [waitForResponse, setWaitForResponse] = useState(false);\n  const authenticateUser = useContext(AuthenticateUserContext);\n  const socket = useContext(SocketContext);\n  const setMoveTimer = useContext(SetMoveTimerContext);\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const loginError = useSelector(state => state.appState.loginError);\n  const lang = useSelector(state => state.appState.lang);\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const isAuthenticated = useSelector(state => state.appState.isAuthenticated);\n  const [loginOnOtherPlace, setLoginOnOtherPlace] = useState(false);\n  useEffect(async () => {\n    try {\n      if (!isAuthenticated) {\n        setWaitForResponse(true);\n        const {\n          user,\n          message\n        } = await callAPI(\"GET\", \"user\", null);\n        setWaitForResponse(false);\n\n        if (user) {\n          authenticateUser(dispatch, user);\n        } else if (message) dispatch({\n          type: \"setLoginError\",\n          value: message\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: \"setLoginError\",\n        value: err.toString()\n      });\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    document.querySelector(\"title\").innerText = lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\n  }, [lang]);\n  useEffect(() => {\n    socket.on(\"loginOnOtherPlace\", () => {\n      setLoginOnOtherPlace(true);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(window.location.pathname);\n\n    if (foundMatch && window.location.pathname !== \"/\") {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Opponent Won - \",\n          reason: \"Game Abandoned\",\n          className: \"game-message\",\n          ref: listItemRef\n        }\n      });\n      setMoveTimer(null, true, dispatch);\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n    }\n  }, [foundMatch]);\n  useEffect(() => {\n    socket.on(\"disconnect\", event => {\n      if (!loginOnOtherPlace && event !== \"io client disconnect\") {\n        setConnectionError(\"The connection was closed\");\n        dispatch({\n          type: \"setGameResult\",\n          value: undefined\n        });\n      }\n    });\n    return () => {\n      socket.removeAllListeners(\"disconnect\");\n    };\n  }, [loginOnOtherPlace]);\n  if (loginError) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: waitForResponse ? \"loading\" : \"\",\n    children: [waitForResponse ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"secondary\",\n      style: {\n        width: `${window.innerWidth / 5}px`,\n        height: `${window.innerWidth / 5}px`,\n        borderWidth: \"9px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setWaitForResponse: setWaitForResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(EntryComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), playerInfo && !playerInfo.guest && !playerInfo.email.verified ? /*#__PURE__*/_jsxDEV(VerifyEmailNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : null, loginOnOtherPlace || connectionError ? /*#__PURE__*/_jsxDEV(Warning, {\n      connectionError: connectionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"dQ2jY6NjtYPTo/JM3WB87fMofSs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Main.jsx"],"names":["React","useEffect","useState","useContext","EntryComponent","NavBar","Container","useSelector","useDispatch","Game","Spinner","callAPI","AuthenticateUserContext","SocketContext","SetMoveTimerContext","Redirect","Warning","VerifyEmailNote","Main","dispatch","connectionError","setConnectionError","waitForResponse","setWaitForResponse","authenticateUser","socket","setMoveTimer","playerInfo","state","appState","loginError","lang","foundMatch","gameState","isAuthenticated","loginOnOtherPlace","setLoginOnOtherPlace","user","message","type","value","err","toString","document","querySelector","innerText","on","console","log","window","location","pathname","listItemRef","createRef","winner","reason","className","ref","emit","event","undefined","removeAllListeners","width","innerWidth","height","borderWidth","guest","email","verified"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACEC,uBADF,EAEEC,aAFF,EAGEC,mBAHF,QAIO,gBAJP;AAKA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMsB,gBAAgB,GAAGrB,UAAU,CAACS,uBAAD,CAAnC;AACA,QAAMa,MAAM,GAAGtB,UAAU,CAACU,aAAD,CAAzB;AACA,QAAMa,YAAY,GAAGvB,UAAU,CAACW,mBAAD,CAA/B;AACA,QAAMa,UAAU,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,UAA3B,CAA9B;AACA,QAAMG,UAAU,GAAGvB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,UAA3B,CAA9B;AACA,QAAMC,IAAI,GAAGxB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeE,IAA3B,CAAxB;AACA,QAAMC,UAAU,GAAGzB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACK,SAAN,CAAgBD,UAA5B,CAA9B;AACA,QAAME,eAAe,GAAG3B,WAAW,CAChCqB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeK,eADO,CAAnC;AAGA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4ClC,QAAQ,CAAC,KAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACF,UAAI,CAACiC,eAAL,EAAsB;AACpBX,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,cAAM;AAAEc,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAoB,MAAM3B,OAAO,CAAC,KAAD,EAAQ,MAAR,EAAgB,IAAhB,CAAvC;AACAY,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AACA,YAAIc,IAAJ,EAAU;AACRb,UAAAA,gBAAgB,CAACL,QAAD,EAAWkB,IAAX,CAAhB;AACD,SAFD,MAEO,IAAIC,OAAJ,EAAanB,QAAQ,CAAC;AAAEoB,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,KAAK,EAAEF;AAAhC,SAAD,CAAR;AACrB;AACF,KATD,CASE,OAAOG,GAAP,EAAY;AACZtB,MAAAA,QAAQ,CAAC;AAAEoB,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAEC,GAAG,CAACC,QAAJ;AAAhC,OAAD,CAAR;AACD;AACF,GAbQ,EAaN,CAACR,eAAD,CAbM,CAAT;AAeAjC,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,GACEd,IAAI,KAAK,SAAT,GAAqB,SAArB,GAAiC,UADnC;AAED,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,MAAM,CAACqB,EAAP,CAAU,mBAAV,EAA+B,MAAM;AACnCV,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAnC,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAP,CAAgBC,QAA5B;;AACA,QAAInB,UAAU,IAAIiB,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,GAA/C,EAAoD;AAClD,YAAMC,WAAW,gBAAGpD,KAAK,CAACqD,SAAN,EAApB;AACAlC,MAAAA,QAAQ,CAAC;AAAEoB,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACArB,MAAAA,QAAQ,CAAC;AACPoB,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELe,UAAAA,MAAM,EAAE,iBAFH;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE,cAJN;AAKLC,UAAAA,GAAG,EAAEL;AALA;AAFA,OAAD,CAAR;AAUA1B,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,EAAaP,QAAb,CAAZ;AACAM,MAAAA,MAAM,CAACiC,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACD;AACF,GAlBQ,EAkBN,CAAC1B,UAAD,CAlBM,CAAT;AAoBA/B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,MAAM,CAACqB,EAAP,CAAU,YAAV,EAAyBa,KAAD,IAAW;AACjC,UAAI,CAACxB,iBAAD,IAAsBwB,KAAK,KAAK,sBAApC,EAA4D;AAC1DtC,QAAAA,kBAAkB,CAAC,2BAAD,CAAlB;AACAF,QAAAA,QAAQ,CAAC;AAAEoB,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,KAAK,EAAEoB;AAAhC,SAAD,CAAR;AACD;AACF,KALD;AAOA,WAAO,MAAM;AACXnC,MAAAA,MAAM,CAACoC,kBAAP,CAA0B,YAA1B;AACD,KAFD;AAGD,GAXQ,EAWN,CAAC1B,iBAAD,CAXM,CAAT;AAaA,MAAIL,UAAJ,EAAgB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhB,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAER,eAAe,GAAG,SAAH,GAAe,EAA1D;AAAA,eACGA,eAAe,gBACd,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAE;AACLwC,QAAAA,KAAK,EAAG,GAAEb,MAAM,CAACc,UAAP,GAAoB,CAAE,IAD3B;AAELC,QAAAA,MAAM,EAAG,GAAEf,MAAM,CAACc,UAAP,GAAoB,CAAE,IAF5B;AAGLE,QAAAA,WAAW,EAAE;AAHR;AAHT;AAAA;AAAA;AAAA;AAAA,YADc,gBAWd;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,kBAAkB,EAAE1C;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,EAEGW,eAAe,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAc,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,EAiBGP,UAAU,IAAI,CAACA,UAAU,CAACuC,KAA1B,IAAmC,CAACvC,UAAU,CAACwC,KAAX,CAAiBC,QAArD,gBACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAnBN,EAoBGjC,iBAAiB,IAAIf,eAArB,gBACC,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAtBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvGD;;GAAMF,I;UACaV,W,EAMED,W,EACAA,W,EACNA,W,EACMA,W,EACKA,W;;;KAXpBW,I;AAyGN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport {\r\n  AuthenticateUserContext,\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n} from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Warning from \"./Warning/Warning.jsx\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const [connectionError, setConnectionError] = useState(null);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const [loginOnOtherPlace, setLoginOnOtherPlace] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (!isAuthenticated) {\r\n        setWaitForResponse(true);\r\n        const { user, message } = await callAPI(\"GET\", \"user\", null);\r\n        setWaitForResponse(false);\r\n        if (user) {\r\n          authenticateUser(dispatch, user);\r\n        } else if (message) dispatch({ type: \"setLoginError\", value: message });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"setLoginError\", value: err.toString() });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\"title\").innerText =\r\n      lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"loginOnOtherPlace\", () => {\r\n      setLoginOnOtherPlace(true);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(window.location.pathname);\r\n    if (foundMatch && window.location.pathname !== \"/\") {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [foundMatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", (event) => {\r\n      if (!loginOnOtherPlace && event !== \"io client disconnect\") {\r\n        setConnectionError(\"The connection was closed\");\r\n        dispatch({ type: \"setGameResult\", value: undefined });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"disconnect\");\r\n    };\r\n  }, [loginOnOtherPlace]);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n\r\n  return (\r\n    <Container fluid className={waitForResponse ? \"loading\" : \"\"}>\r\n      {waitForResponse ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <NavBar setWaitForResponse={setWaitForResponse} />\r\n          {isAuthenticated ? <Game /> : <EntryComponent />}\r\n        </div>\r\n      )}\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote />\r\n      ) : null}\r\n      {loginOnOtherPlace || connectionError ? (\r\n        <Warning connectionError={connectionError} />\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}