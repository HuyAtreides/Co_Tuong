{"ast":null,"code":"const registerEventHandler = (socket, dispatch, handleOpponentMove) => {\n  socket.on(\"foundMatch\", (opponentID, firstMove) => {\n    socket.opponentID = opponentID;\n    dispatch({\n      type: \"setFindingMatch\",\n      value: false\n    });\n    dispatch({\n      type: \"setTurnToMove\",\n      value: firstMove\n    });\n    dispatch({\n      type: \"setFoundMatch\",\n      value: true\n    });\n    setTimer(firstMove);\n  });\n  socket.on(\"timeout\", () => {\n    dispatch({\n      type: \"setFindingMatch\",\n      value: null\n    });\n  });\n  socket.on(\"move\", ([curRow, curCol], [newRow, newCol]) => {\n    handleOpponentMove([curRow, curCol], [newRow, newCol]);\n  });\n};\n\nexport default registerEventHandler;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Board/registerEventHandler.js"],"names":["registerEventHandler","socket","dispatch","handleOpponentMove","on","opponentID","firstMove","type","value","setTimer","curRow","curCol","newRow","newCol"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAACC,MAAD,EAASC,QAAT,EAAmBC,kBAAnB,KAA0C;AACrEF,EAAAA,MAAM,CAACG,EAAP,CAAU,YAAV,EAAwB,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACjDL,IAAAA,MAAM,CAACI,UAAP,GAAoBA,UAApB;AACAH,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,KAAK,EAAEF;AAAhC,KAAD,CAAR;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAACH,SAAD,CAAR;AACD,GAND;AAQAL,EAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACD,GAFD;AAIAP,EAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkB,CAAC,CAACM,MAAD,EAASC,MAAT,CAAD,EAAmB,CAACC,MAAD,EAASC,MAAT,CAAnB,KAAwC;AACxDV,IAAAA,kBAAkB,CAAC,CAACO,MAAD,EAASC,MAAT,CAAD,EAAmB,CAACC,MAAD,EAASC,MAAT,CAAnB,CAAlB;AACD,GAFD;AAGD,CAhBD;;AAkBA,eAAeb,oBAAf","sourcesContent":["const registerEventHandler = (socket, dispatch, handleOpponentMove) => {\r\n  socket.on(\"foundMatch\", (opponentID, firstMove) => {\r\n    socket.opponentID = opponentID;\r\n    dispatch({ type: \"setFindingMatch\", value: false });\r\n    dispatch({ type: \"setTurnToMove\", value: firstMove });\r\n    dispatch({ type: \"setFoundMatch\", value: true });\r\n    setTimer(firstMove);\r\n  });\r\n\r\n  socket.on(\"timeout\", () => {\r\n    dispatch({ type: \"setFindingMatch\", value: null });\r\n  });\r\n\r\n  socket.on(\"move\", ([curRow, curCol], [newRow, newCol]) => {\r\n    handleOpponentMove([curRow, curCol], [newRow, newCol]);\r\n  });\r\n};\r\n\r\nexport default registerEventHandler;\r\n"]},"metadata":{},"sourceType":"module"}