{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\nimport NavBar from \"./NavBar/NavBar.jsx\";\nimport { Container } from \"react-bootstrap\";\nimport \"./Main.scss\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport Game from \"./Game/Game.jsx\";\nimport { Spinner } from \"react-bootstrap\";\nimport callAPI from \"../App/callAPI.js\";\nimport { AuthenticateUserContext, SocketContext } from \"../App/context\";\nimport { Redirect } from \"react-router-dom\";\nimport Warning from \"./Warning/Warning.jsx\";\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [connectionError, setConnectionError] = useState(null);\n  const [waitForResponse, setWaitForResponse] = useState(false);\n  const authenticateUser = useContext(AuthenticateUserContext);\n  const socket = useContext(SocketContext);\n  const store = useStore();\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const loginError = useSelector(state => state.appState.loginError);\n  const lang = useSelector(state => state.appState.lang);\n  const isAuthenticated = useSelector(state => state.appState.isAuthenticated);\n  useEffect(async () => {\n    try {\n      if (!isAuthenticated) {\n        setWaitForResponse(true);\n        const {\n          user,\n          message\n        } = await callAPI(\"GET\", \"user\", null);\n\n        if (user) {\n          authenticateUser(dispatch, user);\n        } else if (message) dispatch({\n          type: \"setLoginError\",\n          value: message\n        });\n\n        setWaitForResponse(false);\n      }\n    } catch (err) {\n      dispatch({\n        type: \"setLoginError\",\n        value: err.toString()\n      });\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    document.querySelector(\"title\").innerText = lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\n  }, [lang]);\n  useEffect(() => {\n    socket.on(\"connect_error\", err => {\n      setConnectionError(err.message);\n      socket.close();\n    });\n    socket.on(\"connect\", () => {\n      setConnectionError(\"Successfully reconnect\");\n    });\n    return () => {\n      socket.removeAllListeners(\"connect_error\");\n    };\n  }, []);\n  useEffect(() => {\n    socket.on(\"disconnect\", reason => {\n      const foundMatch = store.getState().gameState.foundMatch;\n\n      if (!foundMatch) {\n        dispatch({\n          type: \"setFindingMatch\",\n          value: \"Connection Was Closed\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: \"setFindingMatch\",\n            value: \"Play\"\n          });\n        }, 700);\n      }\n\n      if (reason !== \"io client disconnect\") {\n        setConnectionError(\"The connection was closed\");\n\n        if (foundMatch) {\n          dispatch({\n            type: \"setGameResult\",\n            value: undefined\n          });\n          dispatch({\n            type: \"setMessage\",\n            value: {\n              from: \"\",\n              className: \"game-message\",\n              message: \"The connection was closed\"\n            }\n          });\n        }\n      }\n    });\n    return () => {\n      socket.removeAllListeners(\"disconnect\");\n    };\n  }, []);\n  if (loginError) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: waitForResponse ? \"loading\" : \"\",\n    children: [waitForResponse ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"secondary\",\n      style: {\n        width: `${window.innerWidth / 5}px`,\n        height: `${window.innerWidth / 5}px`,\n        borderWidth: \"9px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setWaitForResponse: setWaitForResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(EntryComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), playerInfo && !playerInfo.guest && !playerInfo.email.verified ? /*#__PURE__*/_jsxDEV(VerifyEmailNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : null, connectionError ? /*#__PURE__*/_jsxDEV(Warning, {\n      connectionError: connectionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"Mfs1Ez5WrqUByKYlpFOqBfWnmwQ=\", false, function () {\n  return [useDispatch, useStore, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Main.jsx"],"names":["React","useEffect","useState","useContext","EntryComponent","NavBar","Container","useSelector","useDispatch","useStore","Game","Spinner","callAPI","AuthenticateUserContext","SocketContext","Redirect","Warning","VerifyEmailNote","Main","dispatch","connectionError","setConnectionError","waitForResponse","setWaitForResponse","authenticateUser","socket","store","playerInfo","state","appState","loginError","lang","isAuthenticated","user","message","type","value","err","toString","document","querySelector","innerText","on","close","removeAllListeners","reason","foundMatch","getState","gameState","setTimeout","undefined","from","className","width","window","innerWidth","height","borderWidth","guest","email","verified"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport { AuthenticateUserContext, SocketContext } from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Warning from \"./Warning/Warning.jsx\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const [connectionError, setConnectionError] = useState(null);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const socket = useContext(SocketContext);\r\n  const store = useStore();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (!isAuthenticated) {\r\n        setWaitForResponse(true);\r\n        const { user, message } = await callAPI(\"GET\", \"user\", null);\r\n        if (user) {\r\n          authenticateUser(dispatch, user);\r\n        } else if (message) dispatch({ type: \"setLoginError\", value: message });\r\n        setWaitForResponse(false);\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"setLoginError\", value: err.toString() });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\"title\").innerText =\r\n      lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect_error\", (err) => {\r\n      setConnectionError(err.message);\r\n      socket.close();\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      setConnectionError(\"Successfully reconnect\");\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"connect_error\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", (reason) => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      if (!foundMatch) {\r\n        dispatch({ type: \"setFindingMatch\", value: \"Connection Was Closed\" });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"setFindingMatch\", value: \"Play\" });\r\n        }, 700);\r\n      }\r\n      if (reason !== \"io client disconnect\") {\r\n        setConnectionError(\"The connection was closed\");\r\n        if (foundMatch) {\r\n          dispatch({ type: \"setGameResult\", value: undefined });\r\n          dispatch({\r\n            type: \"setMessage\",\r\n            value: {\r\n              from: \"\",\r\n              className: \"game-message\",\r\n              message: \"The connection was closed\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"disconnect\");\r\n    };\r\n  }, []);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n\r\n  return (\r\n    <Container fluid className={waitForResponse ? \"loading\" : \"\"}>\r\n      {waitForResponse ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <NavBar setWaitForResponse={setWaitForResponse} />\r\n          {isAuthenticated ? <Game /> : <EntryComponent />}\r\n        </div>\r\n      )}\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote />\r\n      ) : null}\r\n      {connectionError ? <Warning connectionError={connectionError} /> : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}