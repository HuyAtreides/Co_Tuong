{"ast":null,"code":"import initializeBoard from \"../initializeBoard\";\n\nconst boardReducer = (state = {\n  board: initializeBoard(520 / 9, [\"red\", \"black\"]),\n  targetDisplay: \"none\",\n  targetTranslate: \"translate(0, 0)\",\n  boardSize: [520, 520 / (521 / 577)],\n  currentPiece: null,\n  getClicked: false,\n  draggable: false,\n  capturedPiece: [],\n  findMatch: \"\",\n  turnToMove: false\n}, action) => {\n  const newState = Object.assign({}, state);\n  const {\n    type,\n    value\n  } = action;\n\n  switch (type) {\n    case \"setBoard\":\n      newState.board = value;\n      return newState;\n\n    case \"setTargetDisplay\":\n      newState.targetDisplay = value;\n      return newState;\n\n    case \"setTargetTranslate\":\n      newState.targetTranslate = value;\n      return newState;\n\n    case \"setBoardSize\":\n      newState.boardSize = value;\n      return newState;\n\n    case \"setCurrentPiece\":\n      newState.currentPiece = value;\n      return newState;\n\n    case \"setGetClicked\":\n      newState.getClicked = value;\n      return newState;\n\n    case \"setDraggable\":\n      newState.draggable = value;\n      return newState;\n\n    case \"setCapturedPiece\":\n      newState.capturedPiece = value;\n      return newState;\n\n    case \"setFindMatch\":\n      newState.findMatch = value;\n      return newState;\n\n    case \"setTurnToMove\":\n      newState.turnToMove = value;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/reducer/boardReducer.js"],"names":["initializeBoard","boardReducer","state","board","targetDisplay","targetTranslate","boardSize","currentPiece","getClicked","draggable","capturedPiece","findMatch","turnToMove","action","newState","Object","assign","type","value"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,YAAY,GAAG,CACnBC,KAAK,GAAG;AACNC,EAAAA,KAAK,EAAEH,eAAe,CAAC,MAAM,CAAP,EAAU,CAAC,KAAD,EAAQ,OAAR,CAAV,CADhB;AAENI,EAAAA,aAAa,EAAE,MAFT;AAGNC,EAAAA,eAAe,EAAE,iBAHX;AAINC,EAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,OAAO,MAAM,GAAb,CAAN,CAJL;AAKNC,EAAAA,YAAY,EAAE,IALR;AAMNC,EAAAA,UAAU,EAAE,KANN;AAONC,EAAAA,SAAS,EAAE,KAPL;AAQNC,EAAAA,aAAa,EAAE,EART;AASNC,EAAAA,SAAS,EAAE,EATL;AAUNC,EAAAA,UAAU,EAAE;AAVN,CADW,EAanBC,MAbmB,KAchB;AACH,QAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,KAAlB,CAAjB;AACA,QAAM;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,MAAxB;;AACA,UAAQI,IAAR;AACE,SAAK,UAAL;AACEH,MAAAA,QAAQ,CAACX,KAAT,GAAiBe,KAAjB;AACA,aAAOJ,QAAP;;AACF,SAAK,kBAAL;AACEA,MAAAA,QAAQ,CAACV,aAAT,GAAyBc,KAAzB;AACA,aAAOJ,QAAP;;AACF,SAAK,oBAAL;AACEA,MAAAA,QAAQ,CAACT,eAAT,GAA2Ba,KAA3B;AACA,aAAOJ,QAAP;;AACF,SAAK,cAAL;AACEA,MAAAA,QAAQ,CAACR,SAAT,GAAqBY,KAArB;AACA,aAAOJ,QAAP;;AACF,SAAK,iBAAL;AACEA,MAAAA,QAAQ,CAACP,YAAT,GAAwBW,KAAxB;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACN,UAAT,GAAsBU,KAAtB;AACA,aAAOJ,QAAP;;AACF,SAAK,cAAL;AACEA,MAAAA,QAAQ,CAACL,SAAT,GAAqBS,KAArB;AACA,aAAOJ,QAAP;;AACF,SAAK,kBAAL;AACEA,MAAAA,QAAQ,CAACJ,aAAT,GAAyBQ,KAAzB;AACA,aAAOJ,QAAP;;AACF,SAAK,cAAL;AACEA,MAAAA,QAAQ,CAACH,SAAT,GAAqBO,KAArB;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACF,UAAT,GAAsBM,KAAtB;AACA,aAAOJ,QAAP;;AACF;AACE,aAAOZ,KAAP;AAhCJ;AAkCD,CAnDD;;AAqDA,eAAeD,YAAf","sourcesContent":["import initializeBoard from \"../initializeBoard\";\r\n\r\nconst boardReducer = (\r\n  state = {\r\n    board: initializeBoard(520 / 9, [\"red\", \"black\"]),\r\n    targetDisplay: \"none\",\r\n    targetTranslate: \"translate(0, 0)\",\r\n    boardSize: [520, 520 / (521 / 577)],\r\n    currentPiece: null,\r\n    getClicked: false,\r\n    draggable: false,\r\n    capturedPiece: [],\r\n    findMatch: \"\",\r\n    turnToMove: false,\r\n  },\r\n  action\r\n) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setBoard\":\r\n      newState.board = value;\r\n      return newState;\r\n    case \"setTargetDisplay\":\r\n      newState.targetDisplay = value;\r\n      return newState;\r\n    case \"setTargetTranslate\":\r\n      newState.targetTranslate = value;\r\n      return newState;\r\n    case \"setBoardSize\":\r\n      newState.boardSize = value;\r\n      return newState;\r\n    case \"setCurrentPiece\":\r\n      newState.currentPiece = value;\r\n      return newState;\r\n    case \"setGetClicked\":\r\n      newState.getClicked = value;\r\n      return newState;\r\n    case \"setDraggable\":\r\n      newState.draggable = value;\r\n      return newState;\r\n    case \"setCapturedPiece\":\r\n      newState.capturedPiece = value;\r\n      return newState;\r\n    case \"setFindMatch\":\r\n      newState.findMatch = value;\r\n      return newState;\r\n    case \"setTurnToMove\":\r\n      newState.turnToMove = value;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n"]},"metadata":{},"sourceType":"module"}