{"ast":null,"code":"import Piece from \"./piece.js\";\nimport advisorRules from \"./move_rules/advisorRules.js\";\n\nclass Advisor extends Piece {\n  constructor(width, row, col, name, choosenSide) {\n    super(width, row, col, name, choosenSide);\n    this.moves = advisorRules;\n  }\n\n  checkValidMove(newRow, newCol, board) {\n    const [curRow, curCol] = this.position;\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\n    const maxRow = this.side === this.choosenSide[0] ? 3 : 10;\n    const minRow = this.side === this.choosenSide[0] ? 0 : 7;\n    const valid = newCol >= 3 && newCol < 6 && newRow >= minRow && newRow < maxRow;\n    const existMove = this.moves.some(move => {\n      return move[0] === moveRow && move[1] === moveCol;\n    });\n    return valid && existMove && !this.putGeneralInDanger(newRow, newCol, board);\n  }\n\n  countPiecesBetween(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n    let count = 0;\n\n    do {\n      curCol += curCol > newCol ? -1 : 1;\n      curRow += curRow > newRow ? -1 : 1;\n      if (board[curRow][curCol]) count++;\n    } while (curCol !== newCol || curRow !== newRow);\n\n    return count;\n  }\n\n  canCaptureGeneral() {\n    return false;\n  }\n\n}\n\nexport default Advisor;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/advisor.js"],"names":["Piece","advisorRules","Advisor","constructor","width","row","col","name","choosenSide","moves","checkValidMove","newRow","newCol","board","curRow","curCol","position","moveRow","moveCol","maxRow","side","minRow","valid","existMove","some","move","putGeneralInDanger","countPiecesBetween","count","canCaptureGeneral"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAN,SAAsBF,KAAtB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,WAAxB,EAAqC;AAC9C,UAAMJ,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,WAA7B;AACA,SAAKC,KAAL,GAAaR,YAAb;AACD;;AAEDS,EAAAA,cAAc,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACpC,UAAM,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,UAAM,CAACC,OAAD,EAAUC,OAAV,IAAqB,CAACP,MAAM,GAAGG,MAAV,EAAkBF,MAAM,GAAGG,MAA3B,CAA3B;AACA,UAAMI,MAAM,GAAG,KAAKC,IAAL,KAAc,KAAKZ,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,EAAvD;AACA,UAAMa,MAAM,GAAG,KAAKD,IAAL,KAAc,KAAKZ,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,CAAvD;AACA,UAAMc,KAAK,GACTV,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BD,MAAM,IAAIU,MAAvC,IAAiDV,MAAM,GAAGQ,MAD5D;AAEA,UAAMI,SAAS,GAAG,KAAKd,KAAL,CAAWe,IAAX,CAAiBC,IAAD,IAAU;AAC1C,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAYR,OAAZ,IAAuBQ,IAAI,CAAC,CAAD,CAAJ,KAAYP,OAA1C;AACD,KAFiB,CAAlB;AAGA,WACEI,KAAK,IAAIC,SAAT,IAAsB,CAAC,KAAKG,kBAAL,CAAwBf,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,CADzB;AAGD;;AAEDc,EAAAA,kBAAkB,CAAChB,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACxC,QAAI,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,QAAIY,KAAK,GAAG,CAAZ;;AACA,OAAG;AACDb,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACAE,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,UAAIE,KAAK,CAACC,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2Ba,KAAK;AACjC,KAJD,QAISb,MAAM,KAAKH,MAAX,IAAqBE,MAAM,KAAKH,MAJzC;;AAMA,WAAOiB,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAP;AACD;;AAnCyB;;AAsC5B,eAAe3B,OAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport advisorRules from \"./move_rules/advisorRules.js\";\r\n\r\nclass Advisor extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = advisorRules;\r\n  }\r\n\r\n  checkValidMove(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    const maxRow = this.side === this.choosenSide[0] ? 3 : 10;\r\n    const minRow = this.side === this.choosenSide[0] ? 0 : 7;\r\n    const valid =\r\n      newCol >= 3 && newCol < 6 && newRow >= minRow && newRow < maxRow;\r\n    const existMove = this.moves.some((move) => {\r\n      return move[0] === moveRow && move[1] === moveCol;\r\n    });\r\n    return (\r\n      valid && existMove && !this.putGeneralInDanger(newRow, newCol, board)\r\n    );\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol || curRow !== newRow);\r\n\r\n    return count;\r\n  }\r\n\r\n  canCaptureGeneral() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Advisor;\r\n"]},"metadata":{},"sourceType":"module"}