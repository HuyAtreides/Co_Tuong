{"ast":null,"code":"class Piece {\n  constructor(width, row, col, name) {\n    this.width = width;\n    this.position = [row, col];\n    this.name = name;\n    this.side = name.split(\"-\")[1];\n    this.translate = `translate(${width * col}, ${width * row})`;\n  }\n\n  move(x, y) {\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\n    this.translate = translate;\n  }\n\n  checkValidMove(moveRow, moveCol, board) {\n    const valid = this.moves.some(move => {\n      return move[0] === moveRow && move[1] === moveCol;\n    });\n    return valid && this.countPieceBetween(moveRow, moveCol, board) === 0;\n  }\n\n  setPosition(capture, newRow, newCol) {\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\n    const translate = `translate(${translateX}, ${translateY})`;\n    this.position = [newRow, newCol];\n    this.translate = translate;\n    return [capture, newRow, newCol];\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\n    this.translate = `translate(${translateX}, ${translateY})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n      if (this.checkValidMove(newRow - curRow, newCol - curCol, board)) {\n        if (!board[newRow][newCol].side) return this.setPosition(false, newRow, newCol);else if (board[newRow][newCol].side !== board[curRow][curCol].side) return this.setPosition(true, newRow, newCol);\n      }\n    }\n\n    return null;\n  }\n\n  countPieceBetween(moveRow, moveCol, board) {\n    let [curRow, curCol] = this.position;\n    let count = 0;\n\n    if (moveRow) {\n      for (let start = 1; start < moveRow; start++) if (board[curRow + start][curCol]) count++;\n    } else {\n      for (let start = 1; start < moveCol; start++) if (board[curRow + start][curCol + moveCol]) count++;\n    }\n\n    return count;\n  }\n\n}\n\nexport default Piece;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/piece.js"],"names":["Piece","constructor","width","row","col","name","position","side","split","translate","move","x","y","checkValidMove","moveRow","moveCol","board","valid","moves","some","countPieceBetween","setPosition","capture","newRow","newCol","translateX","translateY","setNewPosition","Math","floor","curRow","curCol","count","start"],"mappings":"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","sourcesContent":["class Piece {\r\n  constructor(width, row, col, name) {\r\n    this.width = width;\r\n    this.position = [row, col];\r\n    this.name = name;\r\n    this.side = name.split(\"-\")[1];\r\n    this.translate = `translate(${width * col}, ${width * row})`;\r\n  }\r\n\r\n  move(x, y) {\r\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\r\n    this.translate = translate;\r\n  }\r\n\r\n  checkValidMove(moveRow, moveCol, board) {\r\n    const valid = this.moves.some((move) => {\r\n      return move[0] === moveRow && move[1] === moveCol;\r\n    });\r\n    return valid && this.countPieceBetween(moveRow, moveCol, board) === 0;\r\n  }\r\n\r\n  setPosition(capture, newRow, newCol) {\r\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\r\n    const translate = `translate(${translateX}, ${translateY})`;\r\n    this.position = [newRow, newCol];\r\n    this.translate = translate;\r\n    return [capture, newRow, newCol];\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n      if (this.checkValidMove(newRow - curRow, newCol - curCol, board)) {\r\n        if (!board[newRow][newCol].side)\r\n          return this.setPosition(false, newRow, newCol);\r\n        else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n          return this.setPosition(true, newRow, newCol);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  countPieceBetween(moveRow, moveCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (moveRow) {\r\n      for (let start = 1; start < moveRow; start++)\r\n        if (board[curRow + start][curCol]) count++;\r\n    } else {\r\n      for (let start = 1; start < moveCol; start++)\r\n        if (board[curRow + start][curCol + moveCol]) count++;\r\n    }\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n"]},"metadata":{},"sourceType":"module"}