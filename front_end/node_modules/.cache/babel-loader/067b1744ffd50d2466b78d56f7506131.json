{"ast":null,"code":"import Piece from \"./piece.js\";\nimport advisorRules from \"./move_rules/advisorRules.js\";\n\nclass Advisor extends Piece {\n  constructor(width, row, col, name, side) {\n    super(width, row, col, name);\n    this.moves = advisorRules;\n    this.choosenSide = side;\n  }\n\n  checkValidMove(newRow, newCol, board) {\n    const [curRow, curCol] = this.position;\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\n    const maxRow = this.side === this.choosenSide[0] ? 3 : 10;\n    const minRow = this.side === this.choosenSide[0] ? 0 : 7;\n    const valid = newCol >= 3 && newCol < 6 && newRow >= minRow && newRow < maxRow;\n    const existMove = this.moves.some(move => {\n      return move[0] === moveRow && move[1] === moveCol;\n    });\n    const generalInDanger = this.putGeneralInDanger(newRow, newCol, board);\n    return valid && existMove && !generalInDanger;\n  }\n\n  canCaptureGeneral(board) {\n    return false;\n  }\n\n}\n\nexport default Advisor;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/advisor.js"],"names":["Piece","advisorRules","Advisor","constructor","width","row","col","name","side","moves","choosenSide","checkValidMove","newRow","newCol","board","curRow","curCol","position","moveRow","moveCol","maxRow","minRow","valid","existMove","some","move","generalInDanger","putGeneralInDanger","canCaptureGeneral"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAN,SAAsBF,KAAtB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AACvC,UAAMJ,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKE,KAAL,GAAaR,YAAb;AACA,SAAKS,WAAL,GAAmBF,IAAnB;AACD;;AAEDG,EAAAA,cAAc,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACpC,UAAM,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,UAAM,CAACC,OAAD,EAAUC,OAAV,IAAqB,CAACP,MAAM,GAAGG,MAAV,EAAkBF,MAAM,GAAGG,MAA3B,CAA3B;AACA,UAAMI,MAAM,GAAG,KAAKZ,IAAL,KAAc,KAAKE,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,EAAvD;AACA,UAAMW,MAAM,GAAG,KAAKb,IAAL,KAAc,KAAKE,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,CAAvD;AACA,UAAMY,KAAK,GACTT,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BD,MAAM,IAAIS,MAAvC,IAAiDT,MAAM,GAAGQ,MAD5D;AAEA,UAAMG,SAAS,GAAG,KAAKd,KAAL,CAAWe,IAAX,CAAiBC,IAAD,IAAU;AAC1C,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAYP,OAAZ,IAAuBO,IAAI,CAAC,CAAD,CAAJ,KAAYN,OAA1C;AACD,KAFiB,CAAlB;AAGA,UAAMO,eAAe,GAAG,KAAKC,kBAAL,CAAwBf,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,CAAxB;AACA,WAAOQ,KAAK,IAAIC,SAAT,IAAsB,CAACG,eAA9B;AACD;;AAEDE,EAAAA,iBAAiB,CAACd,KAAD,EAAQ;AACvB,WAAO,KAAP;AACD;;AAvByB;;AA0B5B,eAAeZ,OAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport advisorRules from \"./move_rules/advisorRules.js\";\r\n\r\nclass Advisor extends Piece {\r\n  constructor(width, row, col, name, side) {\r\n    super(width, row, col, name);\r\n    this.moves = advisorRules;\r\n    this.choosenSide = side;\r\n  }\r\n\r\n  checkValidMove(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    const maxRow = this.side === this.choosenSide[0] ? 3 : 10;\r\n    const minRow = this.side === this.choosenSide[0] ? 0 : 7;\r\n    const valid =\r\n      newCol >= 3 && newCol < 6 && newRow >= minRow && newRow < maxRow;\r\n    const existMove = this.moves.some((move) => {\r\n      return move[0] === moveRow && move[1] === moveCol;\r\n    });\r\n    const generalInDanger = this.putGeneralInDanger(newRow, newCol, board);\r\n    return valid && existMove && !generalInDanger;\r\n  }\r\n\r\n  canCaptureGeneral(board) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Advisor;\r\n"]},"metadata":{},"sourceType":"module"}