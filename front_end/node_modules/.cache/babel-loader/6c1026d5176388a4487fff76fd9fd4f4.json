{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./Timer.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const minute = Math.floor(props.timeLeftToMove / 60);\n  const second = props.timeLeftToMove % 60; // useEffect(() => {\n  //   if (props.timeLeftToMove === 0) {\n  //     const listItemRef = React.createRef();\n  //     dispatch({ type: \"setGameResult\", value: \"Lose\" });\n  //     dispatch({ type: \"setSendGameResult\", value: [\"Won\", \"Game Abandoned\"] });\n  //     dispatch({\n  //       type: \"setMessage\",\n  //       value: {\n  //         type: \"game result message\",\n  //         winner: \"Opponent Won - \",\n  //         reason: \"Game Abandoned\",\n  //         className: \"game-message\",\n  //         ref: listItemRef,\n  //       },\n  //     });\n  //   }\n  // }, [props.timeLeftToMove]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Timer/Timer.jsx"],"names":["React","useEffect","useDispatch","Timer","props","dispatch","minute","Math","floor","timeLeftToMove","second","turnToMove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,cAAN,GAAuB,EAAlC,CAAf;AACA,QAAMC,MAAM,GAAGN,KAAK,CAACK,cAAN,GAAuB,EAAtC,CAHuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQL,KAAK,CAACO,UAAN,GAAmB,cAAnB,GAAoC,EAAG,EAAhE;AAAA,2BACE;AAAA,gBACG,CAACL,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAA9B,IACC,GADD,IAEEI,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAF/B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMP,K;UACaD,W;;;KADbC,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n\r\n  // useEffect(() => {\r\n  //   if (props.timeLeftToMove === 0) {\r\n  //     const listItemRef = React.createRef();\r\n  //     dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n  //     dispatch({ type: \"setSendGameResult\", value: [\"Won\", \"Game Abandoned\"] });\r\n  //     dispatch({\r\n  //       type: \"setMessage\",\r\n  //       value: {\r\n  //         type: \"game result message\",\r\n  //         winner: \"Opponent Won - \",\r\n  //         reason: \"Game Abandoned\",\r\n  //         className: \"game-message\",\r\n  //         ref: listItemRef,\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // }, [props.timeLeftToMove]);\r\n\r\n  return (\r\n    <div className={`clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`}>\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}