{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./Timer.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SocketContext, SetTimerContext } from \"../../../App/context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const minute = Math.floor(props.timeLeftToMove / 60);\n  const second = props.timeLeftToMove % 60;\n  const socket = useContext(SocketContext);\n  const setTimer = useContext(SetTimerContext);\n  const turnToMove = useSelector(state => state.boardState.turnToMove);\n  useEffect(() => {\n    if (props.timeLeftToMove === 0 && turnToMove) {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Opponent Won - \",\n          reason: \"Opponent Resign\",\n          className: \"game-message\",\n          ref: listItemRef\n        }\n      });\n      setTimer(null, true, dispatch);\n      socket.emit(\"gameFinish\", [\"Won\", \"Opponent Resign\"]);\n    }\n  }, [props.timeLeftToMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"BvUQitsSh4PeAktJlCj/zhDm7qs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Timer/Timer.jsx"],"names":["React","useEffect","useDispatch","useSelector","SocketContext","SetTimerContext","Timer","props","dispatch","minute","Math","floor","timeLeftToMove","second","socket","useContext","setTimer","turnToMove","state","boardState","listItemRef","createRef","type","value","winner","reason","className","ref","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,yBAA/C;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,cAAN,GAAuB,EAAlC,CAAf;AACA,QAAMC,MAAM,GAAGN,KAAK,CAACK,cAAN,GAAuB,EAAtC;AACA,QAAME,MAAM,GAAGC,UAAU,CAACX,aAAD,CAAzB;AACA,QAAMY,QAAQ,GAAGD,UAAU,CAACV,eAAD,CAA3B;AACA,QAAMY,UAAU,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,UAA7B,CAA9B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACK,cAAN,KAAyB,CAAzB,IAA8BK,UAAlC,EAA8C;AAC5C,YAAMG,WAAW,gBAAGpB,KAAK,CAACqB,SAAN,EAApB;AACAb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAf,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAE,iBAFH;AAGLC,UAAAA,MAAM,EAAE,iBAHH;AAILC,UAAAA,SAAS,EAAE,cAJN;AAKLC,UAAAA,GAAG,EAAEP;AALA;AAFA,OAAD,CAAR;AAUAJ,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAaR,QAAb,CAAR;AACAM,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,iBAAR,CAA1B;AACD;AACF,GAjBQ,EAiBN,CAACrB,KAAK,CAACK,cAAP,CAjBM,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQL,KAAK,CAACU,UAAN,GAAmB,cAAnB,GAAoC,EAAG,EAAhE;AAAA,2BACE;AAAA,gBACG,CAACR,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAA9B,IACC,GADD,IAEEI,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAF/B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCD;;GAAMP,K;UACaJ,W,EAKEC,W;;;KANfG,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SocketContext, SetTimerContext } from \"../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n  const socket = useContext(SocketContext);\r\n  const setTimer = useContext(SetTimerContext);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n\r\n  useEffect(() => {\r\n    if (props.timeLeftToMove === 0 && turnToMove) {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Opponent Resign\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n      setTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Opponent Resign\"]);\r\n    }\r\n  }, [props.timeLeftToMove]);\r\n\r\n  return (\r\n    <div className={`clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`}>\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}