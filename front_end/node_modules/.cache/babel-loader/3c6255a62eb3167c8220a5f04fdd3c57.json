{"ast":null,"code":"const defaultState = {\n  start: new Date(),\n  findingMatch: false,\n  foundMatch: false,\n  time: 10,\n  opponentTimeLeftToMove: 10 * 60,\n  playerTimeLeftToMove: 10 * 60,\n  pause: false,\n  receiveDrawOffer: false,\n  sendDrawOffer: false,\n  messages: [],\n  gameResult: null,\n  sendGameResult: false,\n  messageToSend: null\n};\n\nconst gameReducer = (state = defaultState, action) => {\n  const newState = Object.assign({}, state);\n  const {\n    type,\n    value\n  } = action;\n\n  switch (type) {\n    case \"setSendGameResult\":\n      newState.sendGameResult = value;\n      return newState;\n\n    case \"setGameResult\":\n      newState.gameResult = value;\n      return newState;\n\n    case \"setFindingMatch\":\n      newState.findingMatch = value;\n      return newState;\n\n    case \"setFoundMatch\":\n      newState.foundMatch = value;\n      return newState;\n\n    case \"setTime\":\n      newState.time = value;\n      newState.playerTimeLeftToMove = value * 60;\n      newState.opponentTimeLeftToMove = value * 60;\n      return newState;\n\n    case \"setPlayerTimeLeftToMove\":\n      if (value !== null) newState.playerTimeLeftToMove = newState.time * 60;else {\n        const start = newState.start;\n        console.log((new Date() - start) / 1000);\n        newState.playerTimeLeftToMove -= Math.floor((new Date() - start) / 1000);\n      }\n      return newState;\n\n    case \"setOpponentTimeLeftToMove\":\n      if (value !== null) newState.opponentTimeLeftToMove = newState.time * 60;else {\n        const start = newState.start;\n        console.log((new Date() - start) / 1000);\n        newState.opponentTimeLeftToMove -= Math.floor((new Date() - start) / 1000);\n      }\n      return newState;\n\n    case \"setPause\":\n      newState.pause = value;\n      return newState;\n\n    case \"setReceiveDrawOffer\":\n      newState.receiveDrawOffer = value;\n      return newState;\n\n    case \"setSendDrawOffer\":\n      newState.sendDrawOffer = value;\n      return newState;\n\n    case \"setMessageToSend\":\n      newState.messageToSend = value;\n      return newState;\n\n    case \"setMessage\":\n      const newMessages = [...newState.messages];\n      newMessages.push(value);\n      newState.messages = newMessages;\n      return newState;\n\n    case \"resetGameState\":\n      return defaultState;\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/reducer/gameReducer.js"],"names":["defaultState","start","Date","findingMatch","foundMatch","time","opponentTimeLeftToMove","playerTimeLeftToMove","pause","receiveDrawOffer","sendDrawOffer","messages","gameResult","sendGameResult","messageToSend","gameReducer","state","action","newState","Object","assign","type","value","console","log","Math","floor","newMessages","push"],"mappings":"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","sourcesContent":["const defaultState = {\r\n  start: new Date(),\r\n  findingMatch: false,\r\n  foundMatch: false,\r\n  time: 10,\r\n  opponentTimeLeftToMove: 10 * 60,\r\n  playerTimeLeftToMove: 10 * 60,\r\n  pause: false,\r\n  receiveDrawOffer: false,\r\n  sendDrawOffer: false,\r\n  messages: [],\r\n  gameResult: null,\r\n  sendGameResult: false,\r\n  messageToSend: null,\r\n};\r\n\r\nconst gameReducer = (state = defaultState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setSendGameResult\":\r\n      newState.sendGameResult = value;\r\n      return newState;\r\n    case \"setGameResult\":\r\n      newState.gameResult = value;\r\n      return newState;\r\n    case \"setFindingMatch\":\r\n      newState.findingMatch = value;\r\n      return newState;\r\n    case \"setFoundMatch\":\r\n      newState.foundMatch = value;\r\n      return newState;\r\n    case \"setTime\":\r\n      newState.time = value;\r\n      newState.playerTimeLeftToMove = value * 60;\r\n      newState.opponentTimeLeftToMove = value * 60;\r\n      return newState;\r\n    case \"setPlayerTimeLeftToMove\":\r\n      if (value !== null) newState.playerTimeLeftToMove = newState.time * 60;\r\n      else {\r\n        const start = newState.start;\r\n        console.log((new Date() - start) / 1000);\r\n        newState.playerTimeLeftToMove -= Math.floor(\r\n          (new Date() - start) / 1000\r\n        );\r\n      }\r\n      return newState;\r\n    case \"setOpponentTimeLeftToMove\":\r\n      if (value !== null) newState.opponentTimeLeftToMove = newState.time * 60;\r\n      else {\r\n        const start = newState.start;\r\n        console.log((new Date() - start) / 1000);\r\n        newState.opponentTimeLeftToMove -= Math.floor(\r\n          (new Date() - start) / 1000\r\n        );\r\n      }\r\n\r\n      return newState;\r\n    case \"setPause\":\r\n      newState.pause = value;\r\n      return newState;\r\n    case \"setReceiveDrawOffer\":\r\n      newState.receiveDrawOffer = value;\r\n      return newState;\r\n    case \"setSendDrawOffer\":\r\n      newState.sendDrawOffer = value;\r\n      return newState;\r\n    case \"setMessageToSend\":\r\n      newState.messageToSend = value;\r\n      return newState;\r\n    case \"setMessage\":\r\n      const newMessages = [...newState.messages];\r\n      newMessages.push(value);\r\n      newState.messages = newMessages;\r\n      return newState;\r\n    case \"resetGameState\":\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n"]},"metadata":{},"sourceType":"module"}