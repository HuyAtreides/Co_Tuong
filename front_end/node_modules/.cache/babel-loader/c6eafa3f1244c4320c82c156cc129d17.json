{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Signup\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Form, InputGroup, Button, Spinner, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { SocketContext } from \"../App/context.js\";\nimport callAPI from \"../App/callAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.appState.isAuthenticated);\n  const socket = useContext(SocketContext);\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\n  const [waitForResponse, setWaitForResponse] = useState(false);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n\n  const handleUsernameChange = event => {\n    const value = event.target.value;\n\n    if (/[^_a-z0-9]/i.test(value) || value.length < 3 || value.length > 20) {\n      setInvalidUsernameMess(\"Username must be between 3-20 characters long and use only Latin letters and numbers\");\n    } else setInvalidUsernameMess(\"\");\n\n    setUsername(value);\n  };\n\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n\n    if (value.length < 6) {\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\n    } else setInvalidPasswordMess(\"\");\n\n    setPassword(value);\n  };\n\n  const handleEmailChange = event => {\n    const value = event.target.value;\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value)) setInvalidEmailMess(\"Invalid email address\");else setInvalidEmailMess(\"\");\n    setEmail(value);\n  };\n\n  const handleFirstnameChange = event => {\n    const value = event.target.value;\n    if (/^ _a-z/i.test(value)) setInvalidFirstname(\"Firstname can only contain letter, space and _\");else setInvalidFirstname(\"\");\n    setFirstname(value);\n  };\n\n  const handleLastnameChange = event => {\n    const value = event.target.value;\n    if (/^ _a-z/i.test(value)) setInvalidLastname(\"Lastname can only contain letter, space and _\");else setInvalidLastname(\"\");\n    setLastname(value);\n  };\n\n  const handleMissingField = () => {\n    let count = 0;\n\n    if (!username) {\n      count += 1;\n      setInvalidUsernameMess(\"Please fill out this field\");\n    }\n\n    if (!password) {\n      count += 1;\n      setInvalidPasswordMess(\"Please fill out this field\");\n    }\n\n    if (!firstname) {\n      count += 1;\n      setInvalidFirstname(\"Please fill out this field\");\n    }\n\n    if (!lastname) {\n      count += 1;\n      setInvalidLastname(\"Please fill out this field\");\n    }\n\n    if (!email) {\n      count += 1;\n      setInvalidEmailMess(\"Please fill out this field\");\n    }\n\n    return count !== 0;\n  };\n\n  const handleError = (ok, message) => {\n    if (!ok) {\n      setError(message);\n    } else if (/Email/.test(message)) {\n      setInvalidEmailMess(message);\n    } else if (/User/.test(message)) {\n      setInvalidUsernameMess(message);\n    } else setError(message);\n  };\n\n  const handleSignUp = async event => {\n    event.preventDefault();\n    const missingField = handleMissingField();\n\n    if (!missingField && !invalidEmailMess && !invalidPasswordMess && !invalidUsernameMess && !invalidFirstname && !invalidLastname) {\n      setWaitForResponse(true);\n      setError(null);\n      const {\n        message,\n        user,\n        ok\n      } = await callAPI(\"POST\", \"/signup\", {\n        email: email,\n        firstname: firstname,\n        username: username,\n        password: password,\n        lastname: lastname\n      });\n      setWaitForResponse(false);\n\n      if (user) {\n        dispatch({\n          type: \"setIsAuthenticated\",\n          value: true\n        });\n        dispatch({\n          type: \"setPlayerInfo\",\n          value: user\n        });\n        socket.auth = {\n          playername: user.username,\n          photo: user.photo\n        };\n        socket.connect();\n      } else handleError(ok, message);\n    }\n  };\n\n  useEffect(async () => {\n    const user = await callAPI(\"GET\", \"/\", null);\n    if (user) dispatch({\n      type: \"setIsAuthenticated\",\n      value: true\n    });\n  });\n  if (isAuthenticated) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Xiangqi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          span: 4\n        },\n        sm: {\n          span: 6\n        },\n        xs: {\n          span: 10\n        },\n        className: \"login-component d-flex flex-column  align-items-center\",\n        children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSignUp,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                isInvalid: invalidUsernameMess !== \"\",\n                onChange: handleUsernameChange,\n                value: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidUsernameMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                isInvalid: invalidFirstname !== \"\",\n                onChange: handleFirstnameChange,\n                value: firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidFirstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                isInvalid: invalidLastname !== \"\",\n                onChange: handleLastnameChange,\n                value: lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidLastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                isInvalid: invalidEmailMess !== \"\",\n                onChange: handleEmailChange,\n                value: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidEmailMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                isInvalid: invalidPasswordMess !== \"\",\n                onChange: handlePasswordChange,\n                value: password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidPasswordMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: waitForResponse ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this) : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"seperator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"seperator-text\",\n            children: \"or connect with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"google\",\n            href: \"http://localhost:8080/auth/google\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), \" Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"facebook\",\n            href: \"http://localhost:8080/auth/facebook\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-facebook \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), \" Facebook\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"github\",\n            href: \"http://localhost:8080/auth/github\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-github \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), \" Github\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"BTeVRbJxeEA1ZN91qLr+pN79TIM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Signup/Signup.jsx"],"names":["React","useState","useEffect","useContext","Container","Form","InputGroup","Button","Spinner","Row","Col","useDispatch","useSelector","Redirect","SocketContext","callAPI","Signup","dispatch","isAuthenticated","state","appState","socket","invalidUsernameMess","setInvalidUsernameMess","invalidEmailMess","setInvalidEmailMess","invalidPasswordMess","setInvalidPasswordMess","waitForResponse","setWaitForResponse","error","setError","username","setUsername","password","setPassword","email","setEmail","firstname","setFirstname","invalidFirstname","setInvalidFirstname","invalidLastname","setInvalidLastname","lastname","setLastname","handleUsernameChange","event","value","target","test","length","handlePasswordChange","handleEmailChange","handleFirstnameChange","handleLastnameChange","handleMissingField","count","handleError","ok","message","handleSignUp","preventDefault","missingField","user","type","auth","playername","photo","connect","span","float","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { SocketContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const socket = useContext(SocketContext);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\r\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^_a-z0-9]/i.test(value) || value.length < 3 || value.length > 20) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/^ _a-z/i.test(value))\r\n      setInvalidFirstname(\"Firstname can only contain letter, space and _\");\r\n    else setInvalidFirstname(\"\");\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/^ _a-z/i.test(value))\r\n      setInvalidLastname(\"Lastname can only contain letter, space and _\");\r\n    else setInvalidLastname(\"\");\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!firstname) {\r\n      count += 1;\r\n      setInvalidFirstname(\"Please fill out this field\");\r\n    }\r\n    if (!lastname) {\r\n      count += 1;\r\n      setInvalidLastname(\"Please fill out this field\");\r\n    }\r\n    if (!email) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Email/.test(message)) {\r\n      setInvalidEmailMess(message);\r\n    } else if (/User/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n  };\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault();\r\n    const missingField = handleMissingField();\r\n    if (\r\n      !missingField &&\r\n      !invalidEmailMess &&\r\n      !invalidPasswordMess &&\r\n      !invalidUsernameMess &&\r\n      !invalidFirstname &&\r\n      !invalidLastname\r\n    ) {\r\n      setWaitForResponse(true);\r\n      setError(null);\r\n      const { message, user, ok } = await callAPI(\"POST\", \"/signup\", {\r\n        email: email,\r\n        firstname: firstname,\r\n        username: username,\r\n        password: password,\r\n        lastname: lastname,\r\n      });\r\n      setWaitForResponse(false);\r\n      if (user) {\r\n        dispatch({ type: \"setIsAuthenticated\", value: true });\r\n        dispatch({ type: \"setPlayerInfo\", value: user });\r\n        socket.auth = {\r\n          playername: user.username,\r\n          photo: user.photo,\r\n        };\r\n        socket.connect();\r\n      } else handleError(ok, message);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const user = await callAPI(\"GET\", \"/\", null);\r\n    if (user) dispatch({ type: \"setIsAuthenticated\", value: true });\r\n  });\r\n\r\n  if (isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 4 }}\r\n          sm={{ span: 6 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          {error ? <p className=\"error-message\">{error}</p> : null}\r\n          <Form onSubmit={handleSignUp} method=\"POST\">\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label style={{ float: \"left\" }}>Username</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  isInvalid={invalidUsernameMess !== \"\"}\r\n                  onChange={handleUsernameChange}\r\n                  value={username}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidUsernameMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"firstname\">\r\n              <Form.Label style={{ float: \"left\" }}>Firstname</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  isInvalid={invalidFirstname !== \"\"}\r\n                  onChange={handleFirstnameChange}\r\n                  value={firstname}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidFirstname}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"lastname\">\r\n              <Form.Label style={{ float: \"left\" }}>Lastname</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  isInvalid={invalidLastname !== \"\"}\r\n                  onChange={handleLastnameChange}\r\n                  value={lastname}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidLastname}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label style={{ float: \"left\" }}>Email</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  isInvalid={invalidEmailMess !== \"\"}\r\n                  onChange={handleEmailChange}\r\n                  value={email}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidEmailMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label style={{ float: \"left\" }}>Password</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  isInvalid={invalidPasswordMess !== \"\"}\r\n                  onChange={handlePasswordChange}\r\n                  value={password}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidPasswordMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">\r\n              {waitForResponse ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n          </Form>\r\n          <p className=\"seperator\">\r\n            <span></span>\r\n            <span className=\"seperator-text\">or connect with</span>\r\n            <span></span>\r\n          </p>\r\n          <div className=\"social-login\">\r\n            <a className=\"google\" href=\"http://localhost:8080/auth/google\">\r\n              <i className=\"fab fa-google\"></i> Google\r\n            </a>\r\n            <a className=\"facebook\" href=\"http://localhost:8080/auth/facebook\">\r\n              <i className=\"fab fa-facebook \"></i> Facebook\r\n            </a>\r\n            <a className=\"github\" href=\"http://localhost:8080/auth/github\">\r\n              <i className=\"fab fa-github \"></i> Github\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}