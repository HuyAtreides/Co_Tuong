{"ast":null,"code":"class Piece {\n  constructor(width, row, col, name, side) {\n    this.width = width;\n    this.position = [row, col];\n    this.name = name;\n    this.side = side;\n    this.translate = `translate(${width * col}, ${width * row})`;\n  }\n\n  move(x, y) {\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\n    this.translate = translate;\n  }\n\n  checkValidMove(moveRow, moveCol) {\n    const valid = this.moves.some(move => {\n      return move[0] === Math.abs(moveRow) && move[1] === Math.abs(moveCol);\n    });\n    return valid;\n  }\n\n  setPosition(capture, newRow, newCol) {\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\n    const translate = `translate(${translateX}, ${translateY})`;\n    this.position = [newRow, newCol];\n    this.translate = translate;\n    return [capture, newRow, newCol];\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    this.translate = `translate(${curCol * this.width}, ${curRow * this.width})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n      if (!board[newRow][newCol].side) {\n        return this.setPosition(false, newRow, newCol);\n      } else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\n        return this.setPosition(true, newRow, newCol);\n      }\n    }\n  }\n\n}\n\nexport default Piece;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/piece.js"],"names":["Piece","constructor","width","row","col","name","side","position","translate","move","x","y","checkValidMove","moveRow","moveCol","valid","moves","some","Math","abs","setPosition","capture","newRow","newCol","translateX","translateY","setNewPosition","board","floor","curRow","curCol"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACVC,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AACvC,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKK,QAAL,GAAgB,CAACJ,GAAD,EAAMC,GAAN,CAAhB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,SAAL,GAAkB,aAAYN,KAAK,GAAGE,GAAI,KAAIF,KAAK,GAAGC,GAAI,GAA1D;AACD;;AAEDM,EAAAA,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACT,UAAMH,SAAS,GAAI,aAAYE,CAAC,GAAG,KAAKR,KAAL,GAAa,CAAE,KAAIS,CAAC,GAAG,KAAKT,KAAL,GAAa,CAAE,GAAzE;AACA,SAAKM,SAAL,GAAiBA,SAAjB;AACD;;AAEDI,EAAAA,cAAc,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC/B,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAiBR,IAAD,IAAU;AACtC,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAYS,IAAI,CAACC,GAAL,CAASN,OAAT,CAAZ,IAAiCJ,IAAI,CAAC,CAAD,CAAJ,KAAYS,IAAI,CAACC,GAAL,CAASL,OAAT,CAApD;AACD,KAFa,CAAd;AAGA,WAAOC,KAAP;AACD;;AAEDK,EAAAA,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACnC,UAAM,CAACC,UAAD,EAAaC,UAAb,IAA2B,CAACF,MAAM,GAAG,KAAKrB,KAAf,EAAsBoB,MAAM,GAAG,KAAKpB,KAApC,CAAjC;AACA,UAAMM,SAAS,GAAI,aAAYgB,UAAW,KAAIC,UAAW,GAAzD;AACA,SAAKlB,QAAL,GAAgB,CAACe,MAAD,EAASC,MAAT,CAAhB;AACA,SAAKf,SAAL,GAAiBA,SAAjB;AACA,WAAO,CAACa,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CAAP;AACD;;AAEDG,EAAAA,cAAc,CAAChB,CAAD,EAAIC,CAAJ,EAAOgB,KAAP,EAAc;AAC1B,UAAMJ,MAAM,GAAGL,IAAI,CAACU,KAAL,CAAWlB,CAAC,GAAG,KAAKR,KAApB,CAAf;AACA,UAAMoB,MAAM,GAAGJ,IAAI,CAACU,KAAL,CAAWjB,CAAC,GAAG,KAAKT,KAApB,CAAf;AACA,UAAM,CAAC2B,MAAD,EAASC,MAAT,IAAmB,KAAKvB,QAA9B;AACA,SAAKC,SAAL,GAAkB,aAAYsB,MAAM,GAAG,KAAK5B,KAAM,KAChD2B,MAAM,GAAG,KAAK3B,KACf,GAFD;;AAGA,QAAIqB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BD,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,UAAI,CAACK,KAAK,CAACL,MAAD,CAAL,CAAcC,MAAd,EAAsBjB,IAA3B,EAAiC;AAC/B,eAAO,KAAKc,WAAL,CAAiB,KAAjB,EAAwBE,MAAxB,EAAgCC,MAAhC,CAAP;AACD,OAFD,MAEO,IAAII,KAAK,CAACL,MAAD,CAAL,CAAcC,MAAd,EAAsBjB,IAAtB,KAA+BqB,KAAK,CAACE,MAAD,CAAL,CAAcC,MAAd,EAAsBxB,IAAzD,EAA+D;AACpE,eAAO,KAAKc,WAAL,CAAiB,IAAjB,EAAuBE,MAAvB,EAA+BC,MAA/B,CAAP;AACD;AACF;AACF;;AA3CS;;AA8CZ,eAAevB,KAAf","sourcesContent":["class Piece {\r\n  constructor(width, row, col, name, side) {\r\n    this.width = width;\r\n    this.position = [row, col];\r\n    this.name = name;\r\n    this.side = side;\r\n    this.translate = `translate(${width * col}, ${width * row})`;\r\n  }\r\n\r\n  move(x, y) {\r\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\r\n    this.translate = translate;\r\n  }\r\n\r\n  checkValidMove(moveRow, moveCol) {\r\n    const valid = this.moves.some((move) => {\r\n      return move[0] === Math.abs(moveRow) && move[1] === Math.abs(moveCol);\r\n    });\r\n    return valid;\r\n  }\r\n\r\n  setPosition(capture, newRow, newCol) {\r\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\r\n    const translate = `translate(${translateX}, ${translateY})`;\r\n    this.position = [newRow, newCol];\r\n    this.translate = translate;\r\n    return [capture, newRow, newCol];\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    this.translate = `translate(${curCol * this.width}, ${\r\n      curRow * this.width\r\n    })`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n      if (!board[newRow][newCol].side) {\r\n        return this.setPosition(false, newRow, newCol);\r\n      } else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\r\n        return this.setPosition(true, newRow, newCol);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n"]},"metadata":{},"sourceType":"module"}