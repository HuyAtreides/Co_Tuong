{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\n  _s();\n\n  const store = useStore();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const foundMatch = store.getState().gameState.foundMatch;\n    const opponentInfo = store.getState().gameState.opponentInfo;\n    const result = store.getState().gameState.gameResult;\n    if (result === undefined) return;\n\n    if (foundMatch && location.pathname !== \"/\" && !result) {\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: `${opponentInfo.playername} Won - `,\n          reason: \"Game Abandoned\",\n          className: \"game-message\"\n        }\n      });\n      setMoveTimer(null, true, dispatch);\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n    }\n  }, [location]);\n};\n\n_s(useHandleRoutingWhilePlaying, \"XMDJTrj9RLnbTHAe8ap50SiID+k=\", false, function () {\n  return [useStore, useLocation, useDispatch];\n});\n\nexport default useHandleRoutingWhilePlaying;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/useHandleRoutingWhilePlaying.js"],"names":["useEffect","useDispatch","useStore","useLocation","useHandleRoutingWhilePlaying","socket","setMoveTimer","store","location","dispatch","foundMatch","getState","gameState","opponentInfo","result","gameResult","undefined","pathname","type","value","winner","playername","reason","className","emit"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,4BAA4B,GAAG,CAACC,MAAD,EAASC,YAAT,KAA0B;AAAA;;AAC7D,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAGH,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BF,UAA9C;AACA,UAAMG,YAAY,GAAGN,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BC,YAAhD;AACA,UAAMC,MAAM,GAAGP,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BG,UAA1C;AACA,QAAID,MAAM,KAAKE,SAAf,EAA0B;;AAC1B,QAAIN,UAAU,IAAIF,QAAQ,CAACS,QAAT,KAAsB,GAApC,IAA2C,CAACH,MAAhD,EAAwD;AACtDL,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAV,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAG,GAAEP,YAAY,CAACQ,UAAW,SAF9B;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE;AAJN;AAFA,OAAD,CAAR;AASAjB,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,EAAaG,QAAb,CAAZ;AACAJ,MAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACD;AACF,GAnBQ,EAmBN,CAAChB,QAAD,CAnBM,CAAT;AAoBD,CAzBD;;GAAMJ,4B;UACUF,Q,EACGC,W,EACAF,W;;;AAwBnB,eAAeG,4BAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\r\n  const store = useStore();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const foundMatch = store.getState().gameState.foundMatch;\r\n    const opponentInfo = store.getState().gameState.opponentInfo;\r\n    const result = store.getState().gameState.gameResult;\r\n    if (result === undefined) return;\r\n    if (foundMatch && location.pathname !== \"/\" && !result) {\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponentInfo.playername} Won - `,\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [location]);\r\n};\r\n\r\nexport default useHandleRoutingWhilePlaying;\r\n"]},"metadata":{},"sourceType":"module"}