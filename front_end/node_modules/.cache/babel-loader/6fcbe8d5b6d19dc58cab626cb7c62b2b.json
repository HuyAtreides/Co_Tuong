{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Timer\\\\OpponentTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./Timer.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OpponentTimer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const timeLeftToMove = useSelector(state => state.gameState.opponentTimeLeftToMove);\n  const gameResult = useSelector(state => state.gameState.gameResult);\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const turnToMove = useSelector(state => state.boardState.turnToMove);\n  const minute = Math.floor(timeLeftToMove / 60);\n  const second = timeLeftToMove % 60;\n  useEffect(() => {\n    if (timeLeftToMove === 0) {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Won\"\n      });\n      dispatch({\n        type: \"setSendGameResult\",\n        value: [\"Lose\", \"Game Abandoned\"]\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Phan Gia Huy Won - \",\n          reason: \"Game Abandoned\",\n          className: \"game-message\",\n          ref: listItemRef\n        }\n      });\n    }\n  }, [timeLeftToMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `clock ${!turnToMove && !gameResult && foundMatch ? \"turn-to-move\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OpponentTimer, \"eZfucWQi1JzKWjDxa2md7bIQrrM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OpponentTimer;\nexport default OpponentTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpponentTimer\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Timer/OpponentTimer.jsx"],"names":["React","useEffect","useSelector","useDispatch","OpponentTimer","dispatch","timeLeftToMove","state","gameState","opponentTimeLeftToMove","gameResult","foundMatch","turnToMove","boardState","minute","Math","floor","second","listItemRef","createRef","type","value","winner","reason","className","ref"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,cAAc,GAAGJ,WAAW,CAC/BK,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,sBADK,CAAlC;AAGA,QAAMC,UAAU,GAAGR,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBE,UAA5B,CAA9B;AACA,QAAMC,UAAU,GAAGT,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBG,UAA5B,CAA9B;AACA,QAAMC,UAAU,GAAGV,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACM,UAAN,CAAiBD,UAA7B,CAA9B;AACA,QAAME,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWV,cAAc,GAAG,EAA5B,CAAf;AACA,QAAMW,MAAM,GAAGX,cAAc,GAAG,EAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,cAAc,KAAK,CAAvB,EAA0B;AACxB,YAAMY,WAAW,gBAAGlB,KAAK,CAACmB,SAAN,EAApB;AACAd,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAhB,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,gBAAT;AAFA,OAAD,CAAR;AAIAhB,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAE,qBAFH;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE,cAJN;AAKLC,UAAAA,GAAG,EAAEP;AALA;AAFA,OAAD,CAAR;AAUD;AACF,GAnBQ,EAmBN,CAACZ,cAAD,CAnBM,CAAT;AAqBA,sBACE;AACE,IAAA,SAAS,EAAG,SACV,CAACM,UAAD,IAAe,CAACF,UAAhB,IAA8BC,UAA9B,GAA2C,cAA3C,GAA4D,EAC7D,EAHH;AAAA,2BAKE;AAAA,gBACG,CAACG,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAA9B,IACC,GADD,IAEEG,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAF/B;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7CD;;GAAMb,a;UACaD,W,EACMD,W,EAGJA,W,EACAA,W,EACAA,W;;;KAPfE,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst OpponentTimer = () => {\r\n  const dispatch = useDispatch();\r\n  const timeLeftToMove = useSelector(\r\n    (state) => state.gameState.opponentTimeLeftToMove\r\n  );\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const minute = Math.floor(timeLeftToMove / 60);\r\n  const second = timeLeftToMove % 60;\r\n\r\n  useEffect(() => {\r\n    if (timeLeftToMove === 0) {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setGameResult\", value: \"Won\" });\r\n      dispatch({\r\n        type: \"setSendGameResult\",\r\n        value: [\"Lose\", \"Game Abandoned\"],\r\n      });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Phan Gia Huy Won - \",\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    }\r\n  }, [timeLeftToMove]);\r\n\r\n  return (\r\n    <div\r\n      className={`clock ${\r\n        !turnToMove && !gameResult && foundMatch ? \"turn-to-move\" : \"\"\r\n      }`}\r\n    >\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpponentTimer;\r\n"]},"metadata":{},"sourceType":"module"}