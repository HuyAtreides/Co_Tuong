{"ast":null,"code":"import horseRules from \"./move_rules/horseRules.js\";\nimport Piece from \"./piece.js\";\n\nclass Horse extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = horseRules;\n  }\n\n  isBlocked(newRow, newCol, board) {\n    const [curRow, curCol] = this.position;\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\n\n    if (Math.abs(moveRow) === 2) {\n      console.log(board[curRow + moveRow / 2][curCol]);\n      return board[curRow + moveRow / 2][curCol] !== 0;\n    } else {\n      console.log(board[curRow][curCol + moveCol / 2]);\n      return board[curRow][curCol + moveCol / 2] !== 0;\n    }\n  }\n\n}\n\nexport default Horse;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/horse.js"],"names":["horseRules","Piece","Horse","constructor","width","row","col","name","moves","isBlocked","newRow","newCol","board","curRow","curCol","position","moveRow","moveCol","Math","abs","console","log"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAApB,CAA0B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaR,UAAb;AACD;;AAEDS,EAAAA,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAC/B,UAAM,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,UAAM,CAACC,OAAD,EAAUC,OAAV,IAAqB,CAACP,MAAM,GAAGG,MAAV,EAAkBF,MAAM,GAAGG,MAA3B,CAA3B;;AACA,QAAII,IAAI,CAACC,GAAL,CAASH,OAAT,MAAsB,CAA1B,EAA6B;AAC3BI,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACC,MAAM,GAAGG,OAAO,GAAG,CAApB,CAAL,CAA4BF,MAA5B,CAAZ;AACA,aAAOF,KAAK,CAACC,MAAM,GAAGG,OAAO,GAAG,CAApB,CAAL,CAA4BF,MAA5B,MAAwC,CAA/C;AACD,KAHD,MAGO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACC,MAAD,CAAL,CAAcC,MAAM,GAAGG,OAAO,GAAG,CAAjC,CAAZ;AACA,aAAOL,KAAK,CAACC,MAAD,CAAL,CAAcC,MAAM,GAAGG,OAAO,GAAG,CAAjC,MAAwC,CAA/C;AACD;AACF;;AAhBuB;;AAmB1B,eAAef,KAAf","sourcesContent":["import horseRules from \"./move_rules/horseRules.js\";\r\nimport Piece from \"./piece.js\";\r\n\r\nclass Horse extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = horseRules;\r\n  }\r\n\r\n  isBlocked(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    if (Math.abs(moveRow) === 2) {\r\n      console.log(board[curRow + moveRow / 2][curCol]);\r\n      return board[curRow + moveRow / 2][curCol] !== 0;\r\n    } else {\r\n      console.log(board[curRow][curCol + moveCol / 2]);\r\n      return board[curRow][curCol + moveCol / 2] !== 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Horse;\r\n"]},"metadata":{},"sourceType":"module"}