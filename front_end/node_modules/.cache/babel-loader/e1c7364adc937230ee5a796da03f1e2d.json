{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport \"./Game.scss\";\nimport { Row } from \"react-bootstrap\";\nimport GameController from \"./GameController/GameController.jsx\";\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport GameBar from \"./GameBar/GameBar.jsx\";\nimport { SocketContext, SetTimerContext } from \"../../App/context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const socket = useContext(SocketContext);\n  const setTimer = useContext(SetTimerContext);\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const test = useRef();\n  test.current = foundMatch;\n  const store = useStore().getState();\n\n  const handleToggle = () => {\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\n  };\n\n  useEffect(() => {\n    return () => {\n      if (test.current) {\n        console.log(\"nani ?\");\n        const listItemRef = /*#__PURE__*/React.createRef();\n        dispatch({\n          type: \"setGameResult\",\n          value: \"Lose\"\n        });\n        dispatch({\n          type: \"setMessage\",\n          value: {\n            type: \"game result message\",\n            winner: \"Opponent Won - \",\n            reason: \"Game Abandoned\",\n            className: \"game-message\",\n            ref: listItemRef\n          }\n        });\n        setTimer(null, true, dispatch);\n        socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    md: {\n      cols: 1\n    },\n    className: \"mt-5 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(GamePlayArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !foundMatch ? /*#__PURE__*/_jsxDEV(GameController, {\n      timeSelectorDisplay: timeSelectorDisplay,\n      handleToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"Fn3yv6IRax95LZDYdRvYPqhgDjc=\", false, function () {\n  return [useDispatch, useSelector, useStore];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Game.jsx"],"names":["React","useState","useEffect","useContext","useRef","Row","GameController","GamePlayArea","useSelector","useDispatch","useStore","GameBar","SocketContext","SetTimerContext","Game","dispatch","socket","setTimer","timeSelectorDisplay","setTimeSelectorDisplay","foundMatch","state","gameState","test","current","store","getState","handleToggle","console","log","listItemRef","createRef","type","value","winner","reason","className","ref","emit","cols"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,aAAP;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,sBAA/C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGb,UAAU,CAACS,aAAD,CAAzB;AACA,QAAMK,QAAQ,GAAGd,UAAU,CAACU,eAAD,CAA3B;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDlB,QAAQ,CAAC,MAAD,CAA9D;AACA,QAAMmB,UAAU,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBF,UAA5B,CAA9B;AACA,QAAMG,IAAI,GAAGnB,MAAM,EAAnB;AACAmB,EAAAA,IAAI,CAACC,OAAL,GAAeJ,UAAf;AACA,QAAMK,KAAK,GAAGf,QAAQ,GAAGgB,QAAX,EAAd;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,sBAAsB,CAACD,mBAAmB,KAAK,MAAxB,GAAiC,MAAjC,GAA0C,MAA3C,CAAtB;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIqB,IAAI,CAACC,OAAT,EAAkB;AAChBI,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,cAAMC,WAAW,gBAAG9B,KAAK,CAAC+B,SAAN,EAApB;AACAhB,QAAAA,QAAQ,CAAC;AAAEiB,UAAAA,IAAI,EAAE,eAAR;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAAD,CAAR;AACAlB,QAAAA,QAAQ,CAAC;AACPiB,UAAAA,IAAI,EAAE,YADC;AAEPC,UAAAA,KAAK,EAAE;AACLD,YAAAA,IAAI,EAAE,qBADD;AAELE,YAAAA,MAAM,EAAE,iBAFH;AAGLC,YAAAA,MAAM,EAAE,gBAHH;AAILC,YAAAA,SAAS,EAAE,cAJN;AAKLC,YAAAA,GAAG,EAAEP;AALA;AAFA,SAAD,CAAR;AAUAb,QAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAaF,QAAb,CAAR;AACAC,QAAAA,MAAM,CAACsB,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACD;AACF,KAlBD;AAmBD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACnB,UAAD,gBACC,QAAC,cAAD;AACE,MAAA,mBAAmB,EAAEF,mBADvB;AAEE,MAAA,YAAY,EAAES;AAFhB;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhDD;;GAAMb,I;UACaL,W,EAIED,W,EAGLE,Q;;;KARVI,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport GameBar from \"./GameBar/GameBar.jsx\";\r\nimport { SocketContext, SetTimerContext } from \"../../App/context.js\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setTimer = useContext(SetTimerContext);\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const test = useRef();\r\n  test.current = foundMatch;\r\n  const store = useStore().getState();\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (test.current) {\r\n        console.log(\"nani ?\");\r\n        const listItemRef = React.createRef();\r\n        dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            type: \"game result message\",\r\n            winner: \"Opponent Won - \",\r\n            reason: \"Game Abandoned\",\r\n            className: \"game-message\",\r\n            ref: listItemRef,\r\n          },\r\n        });\r\n        setTimer(null, true, dispatch);\r\n        socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea />\r\n      {!foundMatch ? (\r\n        <GameController\r\n          timeSelectorDisplay={timeSelectorDisplay}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ) : (\r\n        <GameBar />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}