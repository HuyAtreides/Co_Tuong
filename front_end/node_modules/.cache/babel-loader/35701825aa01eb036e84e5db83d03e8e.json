{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Container, Row, Col, InputGroup, Spinner, Button } from \"react-bootstrap\";\nimport NavBar from \"../Main/NavBar/NavBar.jsx\";\nimport \"./Settings.scss\";\nimport callAPI from \"../App/callAPI.js\";\nimport useValidateInput from \"../Signup/useValidateInput.js\";\nimport ProfileHeader from \"../Home/ProfileHeader/ProfileHeader.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = ({\n  setWaitForResponse\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const [buttonText, setButtonText] = useState(\"Save\");\n  const [uploadErr, setUploadErr] = useState(null);\n  const [waitForServer, setWaitForServer] = useState(false);\n  const validateInput = useValidateInput(false);\n\n  const getChanges = () => {\n    const changes = {};\n    if (playerInfo.username !== validateInput.username) changes[\"username\"] = validateInput.username;\n\n    if (playerInfo.email.value !== validateInput.email) {\n      changes[\"email\"] = {\n        value: validateInput.email,\n        verified: false\n      };\n    }\n\n    if (playerInfo.name.lastname !== validateInput.lastname) {\n      changes[\"name.lastname\"] = validateInput.lastname;\n    }\n\n    if (playerInfo.name.firstname !== validateInput.firstname) {\n      changes[\"name.firstname\"] = validateInput.firstname;\n    }\n\n    if (validateInput.password) changes[\"password\"] = validateInput.password;\n    return changes;\n  };\n\n  const handleSaveChange = async event => {\n    try {\n      event.preventDefault();\n      if (waitForServer) return;\n      setUploadErr(\"\");\n      const {\n        password,\n        confirmPassword\n      } = validateInput;\n\n      if (password && password !== confirmPassword) {\n        validateInput.setConfirmPasswordMess(\"Password doesn't match\");\n        return;\n      }\n\n      const changes = getChanges();\n      setWaitForServer(true);\n      const {\n        user,\n        message\n      } = await callAPI(\"POST\", \"api/signup/settings\", {\n        changes: changes,\n        username: validateInput.username,\n        email: validateInput.email,\n        user: playerInfo.username\n      });\n      setWaitForServer(false);\n      if (user) dispatch({\n        type: \"setPlayerInfo\",\n        value: user\n      });else if (message) setUploadErr(message);\n    } catch (err) {\n      setUploadErr(err.message);\n    }\n  };\n\n  useEffect(() => {\n    if (playerInfo) {\n      validateInput.setUsername(playerInfo.username);\n      validateInput.setEmail(playerInfo.email.value);\n      validateInput.setLastname(playerInfo.name.lastname);\n      validateInput.setFirstname(playerInfo.name.firstname);\n    }\n  }, []);\n  if (!playerInfo) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      setWaitForResponse: setWaitForResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"home-row mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-pic-err\",\n        style: {\n          display: uploadErr || validateInput.error ? \"block\" : \" none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\",\n          onClick: () => {\n            setUploadErr(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), uploadErr && validateInput.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 11\n        },\n        md: {\n          span: 7\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n          setError: setUploadErr,\n          setting: true,\n          playerInfo: playerInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-3 mb-3 settings-form\",\n          method: \"POST\",\n          onSubmit: handleSaveChange,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: validateInput.username,\n                  onChange: validateInput.handleUsernameChange,\n                  isInvalid: validateInput.invalidUsernameMess !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidUsernameMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: validateInput.email,\n                  onChange: validateInput.handleEmailChange,\n                  isInvalid: validateInput.invalidEmailMess !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidEmailMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: validateInput.firstname,\n                onChange: validateInput.handleFirstnameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: validateInput.lastname,\n                onChange: validateInput.handleLastnameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                className: \"password-group\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: validateInput.showPassword ? \"text\" : \"password\",\n                  value: validateInput.password,\n                  onChange: validateInput.handlePasswordChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidPasswordMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"toggle-password\",\n                  type: \"button\",\n                  style: {\n                    display: validateInput.invalidPasswordMess ? \"none\" : \"inline\"\n                  },\n                  onClick: () => {\n                    validateInput.setShowPassword(!validateInput.showPassword);\n                  },\n                  children: validateInput.showPassword ? \"Hide\" : \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: validateInput.confirmPassword,\n                  onChange: validateInput.handleConfirmPasswordChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.confirmPasswordMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"submit-form-button\",\n              children: waitForServer ? /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                variant: \"dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this) : {\n                buttonText\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"Hrdn3avYsgmocxw1Sm2JwUPDri4=\", false, function () {\n  return [useDispatch, useSelector, useValidateInput];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Settings/Settings.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Redirect","Form","Container","Row","Col","InputGroup","Spinner","Button","NavBar","callAPI","useValidateInput","ProfileHeader","Settings","setWaitForResponse","dispatch","playerInfo","state","appState","buttonText","setButtonText","uploadErr","setUploadErr","waitForServer","setWaitForServer","validateInput","getChanges","changes","username","email","value","verified","name","lastname","firstname","password","handleSaveChange","event","preventDefault","confirmPassword","setConfirmPasswordMess","user","message","type","err","setUsername","setEmail","setLastname","setFirstname","display","error","span","handleUsernameChange","invalidUsernameMess","handleEmailChange","invalidEmailMess","handleFirstnameChange","handleLastnameChange","showPassword","handlePasswordChange","invalidPasswordMess","setShowPassword","handleConfirmPasswordChange","confirmPasswordMess"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport NavBar from \"../Main/NavBar/NavBar.jsx\";\r\nimport \"./Settings.scss\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport useValidateInput from \"../Signup/useValidateInput.js\";\r\nimport ProfileHeader from \"../Home/ProfileHeader/ProfileHeader.jsx\";\r\n\r\nconst Settings = ({ setWaitForResponse }) => {\r\n  const dispatch = useDispatch();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const [buttonText, setButtonText] = useState(\"Save\");\r\n  const [uploadErr, setUploadErr] = useState(null);\r\n  const [waitForServer, setWaitForServer] = useState(false);\r\n  const validateInput = useValidateInput(false);\r\n\r\n  const getChanges = () => {\r\n    const changes = {};\r\n    if (playerInfo.username !== validateInput.username)\r\n      changes[\"username\"] = validateInput.username;\r\n    if (playerInfo.email.value !== validateInput.email) {\r\n      changes[\"email\"] = { value: validateInput.email, verified: false };\r\n    }\r\n    if (playerInfo.name.lastname !== validateInput.lastname) {\r\n      changes[\"name.lastname\"] = validateInput.lastname;\r\n    }\r\n    if (playerInfo.name.firstname !== validateInput.firstname) {\r\n      changes[\"name.firstname\"] = validateInput.firstname;\r\n    }\r\n    if (validateInput.password) changes[\"password\"] = validateInput.password;\r\n    return changes;\r\n  };\r\n\r\n  const handleSaveChange = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      if (waitForServer) return;\r\n      setUploadErr(\"\");\r\n      const { password, confirmPassword } = validateInput;\r\n      if (password && password !== confirmPassword) {\r\n        validateInput.setConfirmPasswordMess(\"Password doesn't match\");\r\n        return;\r\n      }\r\n      const changes = getChanges();\r\n      setWaitForServer(true);\r\n      const { user, message } = await callAPI(\"POST\", \"api/signup/settings\", {\r\n        changes: changes,\r\n        username: validateInput.username,\r\n        email: validateInput.email,\r\n        user: playerInfo.username,\r\n      });\r\n      setWaitForServer(false);\r\n      if (user) dispatch({ type: \"setPlayerInfo\", value: user });\r\n      else if (message) setUploadErr(message);\r\n    } catch (err) {\r\n      setUploadErr(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playerInfo) {\r\n      validateInput.setUsername(playerInfo.username);\r\n      validateInput.setEmail(playerInfo.email.value);\r\n      validateInput.setLastname(playerInfo.name.lastname);\r\n      validateInput.setFirstname(playerInfo.name.firstname);\r\n    }\r\n  }, []);\r\n\r\n  if (!playerInfo) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container fluid className=\"settings-container\">\r\n      <NavBar setWaitForResponse={setWaitForResponse} />\r\n      <Row className=\"home-row mt-3\">\r\n        <p\r\n          className=\"upload-pic-err\"\r\n          style={{\r\n            display: uploadErr || validateInput.error ? \"block\" : \" none\",\r\n          }}\r\n        >\r\n          <i\r\n            className=\"fas fa-times\"\r\n            onClick={() => {\r\n              setUploadErr(null);\r\n            }}\r\n          ></i>\r\n          {uploadErr && validateInput.error}\r\n        </p>\r\n        <Col xs={{ span: 11 }} md={{ span: 7 }}>\r\n          <ProfileHeader\r\n            setError={setUploadErr}\r\n            setting={true}\r\n            playerInfo={playerInfo}\r\n          />\r\n          <Form\r\n            className=\"mt-3 mb-3 settings-form\"\r\n            method=\"POST\"\r\n            onSubmit={handleSaveChange}\r\n          >\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Username\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={validateInput.username}\r\n                    onChange={validateInput.handleUsernameChange}\r\n                    isInvalid={validateInput.invalidUsernameMess !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Email\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={validateInput.email}\r\n                    onChange={validateInput.handleEmailChange}\r\n                    isInvalid={validateInput.invalidEmailMess !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidEmailMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Firstname\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={validateInput.firstname}\r\n                  onChange={validateInput.handleFirstnameChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Lastname\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={validateInput.lastname}\r\n                  onChange={validateInput.handleLastnameChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Password\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation className=\"password-group\">\r\n                  <Form.Control\r\n                    type={validateInput.showPassword ? \"text\" : \"password\"}\r\n                    value={validateInput.password}\r\n                    onChange={validateInput.handlePasswordChange}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                  <button\r\n                    className=\"toggle-password\"\r\n                    type=\"button\"\r\n                    style={{\r\n                      display: validateInput.invalidPasswordMess\r\n                        ? \"none\"\r\n                        : \"inline\",\r\n                    }}\r\n                    onClick={() => {\r\n                      validateInput.setShowPassword(\r\n                        !validateInput.showPassword\r\n                      );\r\n                    }}\r\n                  >\r\n                    {validateInput.showPassword ? \"Hide\" : \"Show\"}\r\n                  </button>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4\">\r\n              <Form.Label column sm={2}>\r\n                Confirm Password\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={validateInput.confirmPassword}\r\n                    onChange={validateInput.handleConfirmPasswordChange}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.confirmPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Col>\r\n              <Button type=\"submit\" className=\"submit-form-button\">\r\n                {waitForServer ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  { buttonText }\r\n                )}\r\n              </Button>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}