{"ast":null,"code":"import Advisor from \"./advisor.js\";\nimport generalRules from \"./move_rules/generalRules.js\";\n\nclass General extends Advisor {\n  constructor(width, row, col, name, choosenSide) {\n    super(width, row, col, name, choosenSide);\n    this.moves = generalRules;\n  }\n\n  canCaptureGeneral(tmpBoard) {\n    let [curRow, curCol] = this.position;\n    const tmp = curRow < 3 ? 1 : -1;\n\n    do {\n      curRow += tmp;\n      if (curRow < 0 || curRow > 9) console.log(curRow);\n\n      if (tmpBoard[curRow][curCol]) {\n        if (tmpBoard[curRow][curCol].name.split(\"-\")[0] === \"general\") return true;\n        return false;\n      }\n    } while (curRow !== 0 || curRow !== 9);\n\n    return false;\n  }\n\n  countPiecesBetween(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n    let count = 0;\n\n    if (newRow === curRow) {\n      do {\n        curCol += curCol > newCol ? -1 : 1;\n        if (board[curRow][curCol]) count++;\n      } while (curCol !== newCol);\n    } else {\n      do {\n        curRow += curRow > newRow ? -1 : 1;\n        if (board[curRow][curCol]) count++;\n      } while (curRow !== newRow);\n    }\n\n    return count;\n  }\n\n}\n\nexport default General;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/general.js"],"names":["Advisor","generalRules","General","constructor","width","row","col","name","choosenSide","moves","canCaptureGeneral","tmpBoard","curRow","curCol","position","tmp","console","log","split","countPiecesBetween","newRow","newCol","board","count"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAN,SAAsBF,OAAtB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,WAAxB,EAAqC;AAC9C,UAAMJ,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,WAA7B;AACA,SAAKC,KAAL,GAAaR,YAAb;AACD;;AAEDS,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AAC1B,QAAI,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,UAAMC,GAAG,GAAGH,MAAM,GAAG,CAAT,GAAa,CAAb,GAAiB,CAAC,CAA9B;;AACA,OAAG;AACDA,MAAAA,MAAM,IAAIG,GAAV;AACA,UAAIH,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,CAA3B,EAA8BI,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AAC9B,UAAID,QAAQ,CAACC,MAAD,CAAR,CAAiBC,MAAjB,CAAJ,EAA8B;AAC5B,YAAIF,QAAQ,CAACC,MAAD,CAAR,CAAiBC,MAAjB,EAAyBN,IAAzB,CAA8BW,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,MAAgD,SAApD,EACE,OAAO,IAAP;AACF,eAAO,KAAP;AACD;AACF,KARD,QAQSN,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CARpC;;AASA,WAAO,KAAP;AACD;;AAEDO,EAAAA,kBAAkB,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACxC,QAAI,CAACV,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,QAAIS,KAAK,GAAG,CAAZ;;AACA,QAAIH,MAAM,KAAKR,MAAf,EAAuB;AACrB,SAAG;AACDC,QAAAA,MAAM,IAAIA,MAAM,GAAGQ,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,YAAIC,KAAK,CAACV,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BU,KAAK;AACjC,OAHD,QAGSV,MAAM,KAAKQ,MAHpB;AAID,KALD,MAKO;AACL,SAAG;AACDT,QAAAA,MAAM,IAAIA,MAAM,GAAGQ,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,YAAIE,KAAK,CAACV,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BU,KAAK;AACjC,OAHD,QAGSX,MAAM,KAAKQ,MAHpB;AAID;;AACD,WAAOG,KAAP;AACD;;AApC2B;;AAuC9B,eAAerB,OAAf","sourcesContent":["import Advisor from \"./advisor.js\";\r\nimport generalRules from \"./move_rules/generalRules.js\";\r\n\r\nclass General extends Advisor {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = generalRules;\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    let [curRow, curCol] = this.position;\r\n    const tmp = curRow < 3 ? 1 : -1;\r\n    do {\r\n      curRow += tmp;\r\n      if (curRow < 0 || curRow > 9) console.log(curRow);\r\n      if (tmpBoard[curRow][curCol]) {\r\n        if (tmpBoard[curRow][curCol].name.split(\"-\")[0] === \"general\")\r\n          return true;\r\n        return false;\r\n      }\r\n    } while (curRow !== 0 || curRow !== 9);\r\n    return false;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (newRow === curRow) {\r\n      do {\r\n        curCol += curCol > newCol ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curCol !== newCol);\r\n    } else {\r\n      do {\r\n        curRow += curRow > newRow ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curRow !== newRow);\r\n    }\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default General;\r\n"]},"metadata":{},"sourceType":"module"}