{"ast":null,"code":"const gameReducer = (state = {\n  findingMatch: false,\n  foundMatch: false,\n  time: 10,\n  opponentTimeLeftToMove: 10 * 60,\n  playerTimeLeftToMove: 10 * 60,\n  pause: false,\n  receiveDrawOffer: false,\n  sendDrawOffer: false,\n  messages: [],\n  gameResult: null,\n  sendGameResult: false,\n  messageToSend: null\n}, action) => {\n  const newState = Object.assign({}, state);\n  const {\n    type,\n    value\n  } = action;\n\n  switch (type) {\n    case \"setSendGameResult\":\n      newState.sendGameResult = value;\n      return newState;\n\n    case \"setGameResult\":\n      newState.gameResult = value;\n      return newState;\n\n    case \"setFindingMatch\":\n      newState.findingMatch = value;\n      return newState;\n\n    case \"setFoundMatch\":\n      newState.foundMatch = value;\n      return newState;\n\n    case \"setTime\":\n      newState.time = value;\n      newState.playerTimeLeftToMove = value * 60;\n      newState.opponentTimeLeftToMove = value * 60;\n      return newState;\n\n    case \"setPlayerTimeLeftToMove\":\n      if (value !== null) newState.playerTimeLeftToMove = newState.time * 60;else newState.playerTimeLeftToMove -= 1;\n      return newState;\n\n    case \"setOpponentTimeLeftToMove\":\n      if (value !== null) newState.opponentTimeLeftToMove = newState.time * 60;else newState.opponentTimeLeftToMove -= 1;\n      return newState;\n\n    case \"setPause\":\n      newState.pause = value;\n      return newState;\n\n    case \"setReceiveDrawOffer\":\n      newState.receiveDrawOffer = value;\n      return newState;\n\n    case \"setSendDrawOffer\":\n      newState.sendDrawOffer = value;\n      return newState;\n\n    case \"setMessageToSend\":\n      newState.messageToSend = value;\n      return newState;\n\n    case \"setMessage\":\n      const newMessages = [...newState.messages];\n      newMessages.push(value);\n      newState.messages = newMessages;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/reducer/gameReducer.js"],"names":["gameReducer","state","findingMatch","foundMatch","time","opponentTimeLeftToMove","playerTimeLeftToMove","pause","receiveDrawOffer","sendDrawOffer","messages","gameResult","sendGameResult","messageToSend","action","newState","Object","assign","type","value","newMessages","push"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAClBC,KAAK,GAAG;AACNC,EAAAA,YAAY,EAAE,KADR;AAENC,EAAAA,UAAU,EAAE,KAFN;AAGNC,EAAAA,IAAI,EAAE,EAHA;AAINC,EAAAA,sBAAsB,EAAE,KAAK,EAJvB;AAKNC,EAAAA,oBAAoB,EAAE,KAAK,EALrB;AAMNC,EAAAA,KAAK,EAAE,KAND;AAONC,EAAAA,gBAAgB,EAAE,KAPZ;AAQNC,EAAAA,aAAa,EAAE,KART;AASNC,EAAAA,QAAQ,EAAE,EATJ;AAUNC,EAAAA,UAAU,EAAE,IAVN;AAWNC,EAAAA,cAAc,EAAE,KAXV;AAYNC,EAAAA,aAAa,EAAE;AAZT,CADU,EAelBC,MAfkB,KAgBf;AACH,QAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,KAAlB,CAAjB;AACA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,MAAxB;;AACA,UAAQI,IAAR;AACE,SAAK,mBAAL;AACEH,MAAAA,QAAQ,CAACH,cAAT,GAA0BO,KAA1B;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACJ,UAAT,GAAsBQ,KAAtB;AACA,aAAOJ,QAAP;;AACF,SAAK,iBAAL;AACEA,MAAAA,QAAQ,CAACb,YAAT,GAAwBiB,KAAxB;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACZ,UAAT,GAAsBgB,KAAtB;AACA,aAAOJ,QAAP;;AACF,SAAK,SAAL;AACEA,MAAAA,QAAQ,CAACX,IAAT,GAAgBe,KAAhB;AACAJ,MAAAA,QAAQ,CAACT,oBAAT,GAAgCa,KAAK,GAAG,EAAxC;AACAJ,MAAAA,QAAQ,CAACV,sBAAT,GAAkCc,KAAK,GAAG,EAA1C;AACA,aAAOJ,QAAP;;AACF,SAAK,yBAAL;AACE,UAAII,KAAK,KAAK,IAAd,EAAoBJ,QAAQ,CAACT,oBAAT,GAAgCS,QAAQ,CAACX,IAAT,GAAgB,EAAhD,CAApB,KACKW,QAAQ,CAACT,oBAAT,IAAiC,CAAjC;AACL,aAAOS,QAAP;;AACF,SAAK,2BAAL;AACE,UAAII,KAAK,KAAK,IAAd,EAAoBJ,QAAQ,CAACV,sBAAT,GAAkCU,QAAQ,CAACX,IAAT,GAAgB,EAAlD,CAApB,KACKW,QAAQ,CAACV,sBAAT,IAAmC,CAAnC;AACL,aAAOU,QAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,QAAQ,CAACR,KAAT,GAAiBY,KAAjB;AACA,aAAOJ,QAAP;;AACF,SAAK,qBAAL;AACEA,MAAAA,QAAQ,CAACP,gBAAT,GAA4BW,KAA5B;AACA,aAAOJ,QAAP;;AACF,SAAK,kBAAL;AACEA,MAAAA,QAAQ,CAACN,aAAT,GAAyBU,KAAzB;AACA,aAAOJ,QAAP;;AACF,SAAK,kBAAL;AACEA,MAAAA,QAAQ,CAACF,aAAT,GAAyBM,KAAzB;AACA,aAAOJ,QAAP;;AACF,SAAK,YAAL;AACE,YAAMK,WAAW,GAAG,CAAC,GAAGL,QAAQ,CAACL,QAAb,CAApB;AACAU,MAAAA,WAAW,CAACC,IAAZ,CAAiBF,KAAjB;AACAJ,MAAAA,QAAQ,CAACL,QAAT,GAAoBU,WAApB;AACA,aAAOL,QAAP;;AACF;AACE,aAAOd,KAAP;AA5CJ;AA8CD,CAjED;;AAmEA,eAAeD,WAAf","sourcesContent":["const gameReducer = (\r\n  state = {\r\n    findingMatch: false,\r\n    foundMatch: false,\r\n    time: 10,\r\n    opponentTimeLeftToMove: 10 * 60,\r\n    playerTimeLeftToMove: 10 * 60,\r\n    pause: false,\r\n    receiveDrawOffer: false,\r\n    sendDrawOffer: false,\r\n    messages: [],\r\n    gameResult: null,\r\n    sendGameResult: false,\r\n    messageToSend: null,\r\n  },\r\n  action\r\n) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setSendGameResult\":\r\n      newState.sendGameResult = value;\r\n      return newState;\r\n    case \"setGameResult\":\r\n      newState.gameResult = value;\r\n      return newState;\r\n    case \"setFindingMatch\":\r\n      newState.findingMatch = value;\r\n      return newState;\r\n    case \"setFoundMatch\":\r\n      newState.foundMatch = value;\r\n      return newState;\r\n    case \"setTime\":\r\n      newState.time = value;\r\n      newState.playerTimeLeftToMove = value * 60;\r\n      newState.opponentTimeLeftToMove = value * 60;\r\n      return newState;\r\n    case \"setPlayerTimeLeftToMove\":\r\n      if (value !== null) newState.playerTimeLeftToMove = newState.time * 60;\r\n      else newState.playerTimeLeftToMove -= 1;\r\n      return newState;\r\n    case \"setOpponentTimeLeftToMove\":\r\n      if (value !== null) newState.opponentTimeLeftToMove = newState.time * 60;\r\n      else newState.opponentTimeLeftToMove -= 1;\r\n      return newState;\r\n    case \"setPause\":\r\n      newState.pause = value;\r\n      return newState;\r\n    case \"setReceiveDrawOffer\":\r\n      newState.receiveDrawOffer = value;\r\n      return newState;\r\n    case \"setSendDrawOffer\":\r\n      newState.sendDrawOffer = value;\r\n      return newState;\r\n    case \"setMessageToSend\":\r\n      newState.messageToSend = value;\r\n      return newState;\r\n    case \"setMessage\":\r\n      const newMessages = [...newState.messages];\r\n      newMessages.push(value);\r\n      newState.messages = newMessages;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n"]},"metadata":{},"sourceType":"module"}