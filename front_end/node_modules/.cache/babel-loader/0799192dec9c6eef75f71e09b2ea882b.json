{"ast":null,"code":"import _slicedToArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect}from\"react\";import\"./Pause.scss\";import{useSelector,useDispatch,useStore}from\"react-redux\";import{SocketContext,SetMoveTimerContext}from\"../../../../App/context.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Timer=function Timer(props){var dispatch=useDispatch();var socket=useContext(SocketContext);var setMoveTimer=useContext(SetMoveTimerContext);var time=useSelector(function(state){return state.gameState.pauseTime;});var minute=Math.floor(time/60);var second=time%60;var turnToMove=useSelector(function(state){return state.boardState.turnToMove;});useEffect(function(){if(time===0){if(/Paused/.test(props.pause)){socket.emit(\"startTimer\",true);dispatch({type:\"setPauseTime\",value:\"timeout\"});dispatch({type:\"setPause\",value:\"Timeout\"});}else{socket.emit(\"startTimer\",false);dispatch({type:\"setPauseTime\",value:\"restart\"});dispatch({type:\"setPause\",value:null});setMoveTimer(turnToMove,false,dispatch);socket.emit(\"startGame\");}}socket.on(\"pauseOver\",function(){var listItemRef=/*#__PURE__*/React.createRef();dispatch({type:\"setPause\",value:\"Timeout\"});dispatch({type:\"setPauseTime\",value:\"timeout\"});socket.emit(\"starTimer\",true);dispatch({type:\"setMessage\",value:{from:\"\",message:\"Pause Timeout\",className:\"game-message\",ref:listItemRef}});});socket.on(\"gameStarted\",function(){socket.emit(\"startTimer\",false);dispatch({type:\"setPause\",value:null});dispatch({type:\"setPauseTime\",value:\"restart\"});setMoveTimer(turnToMove,false,dispatch);});return function(){socket.removeAllListeners(\"pauseOver\");socket.removeAllListeners(\"gameStarted\");};},[time]);return/*#__PURE__*/_jsxs(\"p\",{className:\"pause-timer\",children:[/Paused/.test(props.pause)?\"Resume In\":\"Game Will Start In\",\":\",\" \",/*#__PURE__*/_jsx(\"span\",{children:(minute<10?\"0\"+minute:minute)+\":\"+(second<10?\"0\"+second:second)})]});};var Pause=function Pause(){var dispatch=useDispatch();var pause=useSelector(function(state){return state.gameState.pause;});var _useSelector=useSelector(function(state){return state.boardState.boardSize;}),_useSelector2=_slicedToArray(_useSelector,2),boardWidth=_useSelector2[0],boardHeight=_useSelector2[1];var store=useStore();var socket=useContext(SocketContext);useEffect(function(){if(pause){if(/Paused/.test(pause)){socket.removeAllListeners(\"oneSecondPass\");socket.emit(\"startTimer\",true);socket.on(\"oneSecondPass\",function(){dispatch({type:\"setPauseTime\",value:null});});}else if(/Resumed/.test(pause)){socket.emit(\"startTimer\",true);dispatch({type:\"setPauseTime\",value:\"timeout\"});}}var handleOpponentPauseOrResumeGame=function handleOpponentPauseOrResumeGame(pause){var opponentInfo=store.getState().gameState.opponentInfo;var listItemRef=/*#__PURE__*/React.createRef();var message={from:\"\".concat(opponentInfo.playername),message:\"\".concat(pause?\"Paused\":\"Resumed\",\" Game\"),className:\"game-message\",ref:listItemRef};dispatch({type:\"setMessage\",value:message});dispatch({type:\"setPause\",value:\"\".concat(opponentInfo.playername,\" \").concat(pause?\"Paused\":\"Resumed\",\" Game\")});};socket.on(\"opponentPauseGame\",function(){handleOpponentPauseOrResumeGame(true);});socket.on(\"opponentResumeGame\",function(){handleOpponentPauseOrResumeGame(false);});return function(){socket.removeAllListeners(\"opponentPauseGame\");socket.removeAllListeners(\"opponentResumeGame\");};},[pause]);if(!pause)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"pause\",style:{width:\"\".concat(boardWidth,\"px\"),height:\"\".concat(boardHeight,\"px\")},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"pause-announce\",children:pause}),/*#__PURE__*/_jsx(Timer,{pause:pause})]})});};export default/*#__PURE__*/React.memo(Pause);","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/GamePlayArea/Pause/Pause.jsx"],"names":["React","useContext","useEffect","useSelector","useDispatch","useStore","SocketContext","SetMoveTimerContext","Timer","props","dispatch","socket","setMoveTimer","time","state","gameState","pauseTime","minute","Math","floor","second","turnToMove","boardState","test","pause","emit","type","value","on","listItemRef","createRef","from","message","className","ref","removeAllListeners","Pause","boardSize","boardWidth","boardHeight","store","handleOpponentPauseOrResumeGame","opponentInfo","getState","playername","width","height","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport \"./Pause.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const time = useSelector((state) => state.gameState.pauseTime);\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      if (/Paused/.test(props.pause)) {\r\n        socket.emit(\"startTimer\", true);\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n      } else {\r\n        socket.emit(\"startTimer\", false);\r\n        dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n        dispatch({ type: \"setPause\", value: null });\r\n        setMoveTimer(turnToMove, false, dispatch);\r\n        socket.emit(\"startGame\");\r\n      }\r\n    }\r\n\r\n    socket.on(\"pauseOver\", () => {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n      dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n      socket.emit(\"starTimer\", true);\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          from: \"\",\r\n          message: \"Pause Timeout\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    });\r\n\r\n    socket.on(\"gameStarted\", () => {\r\n      socket.emit(\"startTimer\", false);\r\n      dispatch({ type: \"setPause\", value: null });\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      setMoveTimer(turnToMove, false, dispatch);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"pauseOver\");\r\n      socket.removeAllListeners(\"gameStarted\");\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <p className=\"pause-timer\">\r\n      {/Paused/.test(props.pause) ? \"Resume In\" : \"Game Will Start In\"}:{\" \"}\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Pause = () => {\r\n  const dispatch = useDispatch();\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const store = useStore();\r\n  const socket = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    if (pause) {\r\n      if (/Paused/.test(pause)) {\r\n        socket.removeAllListeners(\"oneSecondPass\");\r\n        socket.emit(\"startTimer\", true);\r\n        socket.on(\"oneSecondPass\", () => {\r\n          dispatch({ type: \"setPauseTime\", value: null });\r\n        });\r\n      } else if (/Resumed/.test(pause)) {\r\n        socket.emit(\"startTimer\", true);\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n      }\r\n    }\r\n\r\n    const handleOpponentPauseOrResumeGame = (pause) => {\r\n      const opponentInfo = store.getState().gameState.opponentInfo;\r\n      const listItemRef = React.createRef();\r\n      const message = {\r\n        from: `${opponentInfo.playername}`,\r\n        message: `${pause ? \"Paused\" : \"Resumed\"} Game`,\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({\r\n        type: \"setPause\",\r\n        value: `${opponentInfo.playername} ${\r\n          pause ? \"Paused\" : \"Resumed\"\r\n        } Game`,\r\n      });\r\n    };\r\n\r\n    socket.on(\"opponentPauseGame\", () => {\r\n      handleOpponentPauseOrResumeGame(true);\r\n    });\r\n\r\n    socket.on(\"opponentResumeGame\", () => {\r\n      handleOpponentPauseOrResumeGame(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentPauseGame\");\r\n      socket.removeAllListeners(\"opponentResumeGame\");\r\n    };\r\n  }, [pause]);\r\n\r\n  if (!pause) return null;\r\n  return (\r\n    <div\r\n      className=\"pause\"\r\n      style={{\r\n        width: `${boardWidth}px`,\r\n        height: `${boardHeight}px`,\r\n      }}\r\n    >\r\n      <div>\r\n        <p className=\"pause-announce\">{pause}</p>\r\n        <Timer pause={pause} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pause);\r\n"]},"metadata":{},"sourceType":"module"}