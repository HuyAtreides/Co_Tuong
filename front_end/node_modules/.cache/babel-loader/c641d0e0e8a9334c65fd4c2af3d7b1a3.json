{"ast":null,"code":"import Piece from \"./piece.js\";\nimport cannonRules from \"./move_rules/cannonRules.js\";\n\nclass Cannon extends Piece {\n  constructor(width, row, col, name, side) {\n    super(width, row, col, name, side);\n    this.moves = cannonRules;\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    this.translate = `translate(${curCol * this.width}, ${curRow * this.width})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\n        if (!board[newRow][newCol].side) return this.setPostion(false, newRow, newCol);else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\n          if (this.canCapture(newRow, newCol, board)) {\n            return this.setPostion(true, newRow, newCol);\n          }\n        }\n      }\n    }\n  }\n\n  canCapture(newRow, newCol, board) {\n    const [curRow, curCol] = this.position;\n    let count = 0;\n\n    if (newRow === curRow) {\n      while (curCol !== newCol) {\n        if (board[curRow][curCol]) count++;\n        curCol += curCol > newCol ? -1 : 1;\n      }\n    } else {\n      while (curRow !== newRow) {\n        if (board[curRow][curCol]) count++;\n        curRow += curRow > newRow ? -1 : 1;\n      }\n    }\n\n    return count === 1;\n  }\n\n}\n\nexport default Cannon;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/cannon.js"],"names":["Piece","cannonRules","Cannon","constructor","width","row","col","name","side","moves","setNewPosition","x","y","board","newCol","Math","floor","newRow","curRow","curCol","position","translate","checkValidMove","setPostion","canCapture","count"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,MAAN,SAAqBF,KAArB,CAA2B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AACvC,UAAMJ,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,IAA7B;AACA,SAAKC,KAAL,GAAaR,WAAb;AACD;;AAEDS,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAc;AAC1B,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,KAAKP,KAApB,CAAf;AACA,UAAMa,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,KAAKR,KAApB,CAAf;AACA,UAAM,CAACc,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,SAAKC,SAAL,GAAkB,aAAYF,MAAM,GAAG,KAAKf,KAAM,KAChDc,MAAM,GAAG,KAAKd,KACf,GAFD;;AAGA,QAAIU,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BG,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,UAAI,KAAKK,cAAL,CAAoBL,MAAM,GAAGC,MAA7B,EAAqCJ,MAAM,GAAGK,MAA9C,CAAJ,EAA2D;AACzD,YAAI,CAACN,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBN,IAA3B,EACE,OAAO,KAAKe,UAAL,CAAgB,KAAhB,EAAuBN,MAAvB,EAA+BH,MAA/B,CAAP,CADF,KAEK,IAAID,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBN,IAAtB,KAA+BK,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBX,IAAzD,EAA+D;AAClE,cAAI,KAAKgB,UAAL,CAAgBP,MAAhB,EAAwBH,MAAxB,EAAgCD,KAAhC,CAAJ,EAA4C;AAC1C,mBAAO,KAAKU,UAAL,CAAgB,IAAhB,EAAsBN,MAAtB,EAA8BH,MAA9B,CAAP;AACD;AACF;AACF;AACF;AACF;;AAEDU,EAAAA,UAAU,CAACP,MAAD,EAASH,MAAT,EAAiBD,KAAjB,EAAwB;AAChC,UAAM,CAACK,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,QAAIK,KAAK,GAAG,CAAZ;;AACA,QAAIR,MAAM,KAAKC,MAAf,EAAuB;AACrB,aAAOC,MAAM,KAAKL,MAAlB,EAA0B;AACxB,YAAID,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BM,KAAK;AAChCN,QAAAA,MAAM,IAAIA,MAAM,GAAGL,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACD;AACF,KALD,MAKO;AACL,aAAOI,MAAM,KAAKD,MAAlB,EAA0B;AACxB,YAAIJ,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BM,KAAK;AAChCP,QAAAA,MAAM,IAAIA,MAAM,GAAGD,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACD;AACF;;AACD,WAAOQ,KAAK,KAAK,CAAjB;AACD;;AAzCwB;;AA4C3B,eAAevB,MAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport cannonRules from \"./move_rules/cannonRules.js\";\r\n\r\nclass Cannon extends Piece {\r\n  constructor(width, row, col, name, side) {\r\n    super(width, row, col, name, side);\r\n    this.moves = cannonRules;\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    this.translate = `translate(${curCol * this.width}, ${\r\n      curRow * this.width\r\n    })`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\r\n        if (!board[newRow][newCol].side)\r\n          return this.setPostion(false, newRow, newCol);\r\n        else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\r\n          if (this.canCapture(newRow, newCol, board)) {\r\n            return this.setPostion(true, newRow, newCol);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  canCapture(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (newRow === curRow) {\r\n      while (curCol !== newCol) {\r\n        if (board[curRow][curCol]) count++;\r\n        curCol += curCol > newCol ? -1 : 1;\r\n      }\r\n    } else {\r\n      while (curRow !== newRow) {\r\n        if (board[curRow][curCol]) count++;\r\n        curRow += curRow > newRow ? -1 : 1;\r\n      }\r\n    }\r\n    return count === 1;\r\n  }\r\n}\r\n\r\nexport default Cannon;\r\n"]},"metadata":{},"sourceType":"module"}