{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Timer\\\\Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport \"./Timer.scss\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useStore();\n  const minute = Math.floor(props.timeLeftToMove / 60);\n  const second = props.timeLeftToMove % 60;\n  const socket = useContext(SocketContext);\n  const setMoveTimer = useContext(SetMoveTimerContext);\n  const turnToMove = useSelector(state => state.boardState.turnToMove);\n  useEffect(() => {\n    if (props.timeLeftToMove <= 0 && turnToMove) {\n      const opponent = store.getState().gameState.opponentInfo;\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: `${opponent.playername} Won - `,\n          reason: \"Game Abandoned\",\n          className: \"game-message\"\n        }\n      });\n      setMoveTimer(null, true, dispatch);\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n    }\n  }, [turnToMove, props.timeLeftToMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"NIi44TnO9Pms/lSdgOS4h18j6xY=\", false, function () {\n  return [useDispatch, useStore, useSelector];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Timer/Timer.jsx"],"names":["React","useEffect","useContext","useDispatch","useSelector","useStore","SocketContext","SetMoveTimerContext","Timer","props","dispatch","store","minute","Math","floor","timeLeftToMove","second","socket","setMoveTimer","turnToMove","state","boardState","opponent","getState","gameState","opponentInfo","type","value","winner","playername","reason","className","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAO,cAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,yBAAnD;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,cAAN,GAAuB,EAAlC,CAAf;AACA,QAAMC,MAAM,GAAGP,KAAK,CAACM,cAAN,GAAuB,EAAtC;AACA,QAAME,MAAM,GAAGf,UAAU,CAACI,aAAD,CAAzB;AACA,QAAMY,YAAY,GAAGhB,UAAU,CAACK,mBAAD,CAA/B;AACA,QAAMY,UAAU,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,UAA7B,CAA9B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAK,CAACM,cAAN,IAAwB,CAAxB,IAA6BI,UAAjC,EAA6C;AAC3C,YAAMG,QAAQ,GAAGX,KAAK,CAACY,QAAN,GAAiBC,SAAjB,CAA2BC,YAA5C;AACAf,MAAAA,QAAQ,CAAC;AAAEgB,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAjB,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAG,GAAEN,QAAQ,CAACO,UAAW,SAF1B;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE;AAJN;AAFA,OAAD,CAAR;AASAb,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,EAAaR,QAAb,CAAZ;AACAO,MAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACD;AACF,GAhBQ,EAgBN,CAACb,UAAD,EAAaV,KAAK,CAACM,cAAnB,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQN,KAAK,CAACU,UAAN,GAAmB,cAAnB,GAAoC,EAAG,EAAhE;AAAA,2BACE;AAAA,gBACG,CAACP,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAA9B,IACC,GADD,IAEEI,MAAM,GAAG,EAAT,GAAc,MAAMA,MAApB,GAA6BA,MAF/B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCD;;GAAMR,K;UACaL,W,EACHE,Q,EAKKD,W;;;KAPfI,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const store = useStore();\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n\r\n  useEffect(() => {\r\n    if (props.timeLeftToMove <= 0 && turnToMove) {\r\n      const opponent = store.getState().gameState.opponentInfo;\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponent.playername} Won - `,\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [turnToMove, props.timeLeftToMove]);\r\n\r\n  return (\r\n    <div className={`clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`}>\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}