{"ast":null,"code":"import React from\"react\";import{io}from\"socket.io-client\";var socket=io(\"/play\",{autoConnect:false});var SocketContext=/*#__PURE__*/React.createContext();var SetMoveTimerContext=/*#__PURE__*/React.createContext();var AuthenticateUserContext=/*#__PURE__*/React.createContext();var authenticateUser=function authenticateUser(dispatch,user,opponentID){if(socket.guest)socket.disconnect();socket.guest=user.guest;dispatch({type:\"resetBoardState\",value:520});dispatch({type:\"resetGameState\"});dispatch({type:\"setIsAuthenticated\",value:!user.guest?true:\"guest\"});dispatch({type:\"setPlayerInfo\",value:user});if(user.lang)dispatch({type:\"setLang\",value:user.lang});socket.auth={player:{playername:user.username,guest:user.guest,photo:user.photo},opponentID:opponentID};console.log(opponentID);socket.connect();};var setMoveTimer=function setMoveTimer(playerTurn,gameFinish,dispatch){socket.removeAllListeners(\"oneSecondPass\");if(gameFinish){dispatch({type:\"setPause\",value:null});dispatch({type:\"setPauseTime\",value:\"restart\"});dispatch({type:\"setOpponentTimeLeftToMove\",value:\"restart\"});dispatch({type:\"setPlayerTimeLeftToMove\",value:\"restart\"});dispatch({type:\"setTurnToMove\",value:false});return;}if(playerTurn)dispatch({type:\"setOpponentTimeLeftToMove\",value:\"restart\"});else dispatch({type:\"setPlayerTimeLeftToMove\",value:\"restart\"});socket.emit(\"startTimer\",true);socket.on(\"oneSecondPass\",function(){if(playerTurn)dispatch({type:\"setPlayerTimeLeftToMove\",value:null});else dispatch({type:\"setOpponentTimeLeftToMove\",value:null});});};export{SocketContext,SetMoveTimerContext,setMoveTimer,socket,AuthenticateUserContext,authenticateUser};","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/context.js"],"names":["React","io","socket","autoConnect","SocketContext","createContext","SetMoveTimerContext","AuthenticateUserContext","authenticateUser","dispatch","user","opponentID","guest","disconnect","type","value","lang","auth","player","playername","username","photo","console","log","connect","setMoveTimer","playerTurn","gameFinish","removeAllListeners","emit","on"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"/play\", { autoConnect: false });\r\nconst SocketContext = React.createContext();\r\nconst SetMoveTimerContext = React.createContext();\r\nconst AuthenticateUserContext = React.createContext();\r\n\r\nconst authenticateUser = (dispatch, user, opponentID) => {\r\n  if (socket.guest) socket.disconnect();\r\n  socket.guest = user.guest;\r\n\r\n  dispatch({ type: \"resetBoardState\", value: 520 });\r\n  dispatch({ type: \"resetGameState\" });\r\n  dispatch({ type: \"setIsAuthenticated\", value: !user.guest ? true : \"guest\" });\r\n  dispatch({ type: \"setPlayerInfo\", value: user });\r\n\r\n  if (user.lang) dispatch({ type: \"setLang\", value: user.lang });\r\n  socket.auth = {\r\n    player: {\r\n      playername: user.username,\r\n      guest: user.guest,\r\n      photo: user.photo,\r\n    },\r\n    opponentID: opponentID,\r\n  };\r\n  console.log(opponentID);\r\n  socket.connect();\r\n};\r\n\r\nconst setMoveTimer = (playerTurn, gameFinish, dispatch) => {\r\n  socket.removeAllListeners(\"oneSecondPass\");\r\n  if (gameFinish) {\r\n    dispatch({ type: \"setPause\", value: null });\r\n    dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setTurnToMove\", value: false });\r\n    return;\r\n  }\r\n  if (playerTurn)\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n  else dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n  socket.emit(\"startTimer\", true);\r\n  socket.on(\"oneSecondPass\", () => {\r\n    if (playerTurn) dispatch({ type: \"setPlayerTimeLeftToMove\", value: null });\r\n    else dispatch({ type: \"setOpponentTimeLeftToMove\", value: null });\r\n  });\r\n};\r\n\r\nexport {\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n  setMoveTimer,\r\n  socket,\r\n  AuthenticateUserContext,\r\n  authenticateUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}