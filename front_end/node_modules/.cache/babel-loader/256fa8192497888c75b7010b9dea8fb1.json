{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport useFetchData from \"../App/useFetchData.js\";\nimport { Form, Container, Row, Col, InputGroup, Spinner, Button } from \"react-bootstrap\";\nimport NavBar from \"../Main/NavBar/NavBar.jsx\";\nimport \"./Settings.scss\";\nimport callAPI from \"../App/callAPI.js\";\nimport useValidateInput from \"../Signup/useValidateInput.js\";\nimport ProfileHeader from \"../Home/ProfileHeader/ProfileHeader.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const [buttonText, setButtonText] = useState(\"Save\");\n  const [uploadErr, setUploadErr] = useState(null);\n  const [waitForServer, setWaitForServer] = useState(false);\n  const validateInput = useValidateInput(false, true);\n  const [waitForResponse, setWaitForResponse] = useFetchData();\n\n  const getChanges = () => {\n    const changes = {};\n    const {\n      username,\n      email,\n      lastname,\n      firstname\n    } = validateInput;\n    if (playerInfo.username !== username) changes[\"username\"] = username;\n\n    if (playerInfo.email.value !== email) {\n      changes[\"email\"] = {\n        value: email,\n        verified: false\n      };\n    }\n\n    changes[\"name.lastname\"] = lastname;\n    changes[\"name.firstname\"] = firstname;\n    if (validateInput.password) changes[\"password\"] = validateInput.password;\n    return changes;\n  };\n\n  const handleSaveChange = async event => {\n    try {\n      event.preventDefault();\n      if (waitForServer) return;\n      setUploadErr(\"\");\n      validateInput.setError(null);\n      const {\n        password,\n        confirmPassword\n      } = validateInput;\n      const missingField = validateInput.handleMissingField(!playerInfo.email.value);\n\n      if (password !== confirmPassword) {\n        validateInput.setConfirmPasswordMess(\"Password doesn't match\");\n        return;\n      }\n\n      if (!missingField && !validateInput.invalidEmailMess && !validateInput.invalidPasswordMess && !validateInput.invalidUsernameMess && !validateInput.confirmPasswordMess) {\n        const changes = getChanges();\n        setWaitForServer(true);\n        const {\n          user,\n          message,\n          ok\n        } = await callAPI(\"POST\", \"api/signup/settings\", {\n          changes: changes,\n          currentPassword: validateInput.currentPassword,\n          user: playerInfo.username\n        });\n        setWaitForServer(false);\n\n        if (user) {\n          dispatch({\n            type: \"setPlayerInfo\",\n            value: user\n          });\n          setButtonText(\"Your settings have been saved.\");\n          setTimeout(() => {\n            setButtonText(\"Save\");\n          }, 1000);\n        } else if (message) validateInput.handleError(ok, message);\n      }\n    } catch (err) {\n      setWaitForServer(false);\n      setUploadErr(err.message);\n    }\n  };\n\n  useEffect(() => {\n    if (playerInfo) {\n      const {\n        username,\n        email,\n        name\n      } = playerInfo;\n      validateInput.setUsername(username ? username : \"\");\n      validateInput.setEmail(email.value ? email.value : \"\");\n      validateInput.setLastname(name.lastname ? name.lastname : \"\");\n      validateInput.setFirstname(name.firstname ? name.firstname : \"\");\n    }\n  }, []);\n  if (!playerInfo) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 27\n  }, this);\n  if (waitForResponse) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"secondary\",\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      setWaitForResponse: setWaitForResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"home-row mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-pic-err\",\n        style: {\n          display: uploadErr || validateInput.error ? \"block\" : \" none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\",\n          onClick: () => {\n            validateInput.setError(null);\n            setUploadErr(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), uploadErr ? uploadErr : validateInput.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 11\n        },\n        md: {\n          span: 7\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n          setError: setUploadErr,\n          setting: true,\n          playerInfo: playerInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-3 mb-3 settings-form\",\n          method: \"POST\",\n          onSubmit: handleSaveChange,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: validateInput.username,\n                  onChange: validateInput.handleUsernameChange,\n                  isInvalid: validateInput.invalidUsernameMess !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidUsernameMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  value: validateInput.email,\n                  onChange: validateInput.handleEmailChange,\n                  isInvalid: validateInput.invalidEmailMess !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidEmailMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: validateInput.firstname,\n                onChange: validateInput.handleFirstnameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: validateInput.lastname,\n                onChange: validateInput.handleLastnameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: validateInput.currentPassword,\n                  onChange: validateInput.handleCurrentPasswordChange,\n                  isInvalid: validateInput.invalidCurrentPassword !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidCurrentPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                className: \"password-group\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: validateInput.showPassword ? \"text\" : \"password\",\n                  value: validateInput.password,\n                  isInvalid: validateInput.invalidPasswordMess !== \"\",\n                  onChange: validateInput.handlePasswordChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.invalidPasswordMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"toggle-password\",\n                  type: \"button\",\n                  style: {\n                    display: validateInput.invalidPasswordMess ? \"none\" : \"inline\"\n                  },\n                  onClick: () => {\n                    validateInput.setShowPassword(!validateInput.showPassword);\n                  },\n                  children: validateInput.showPassword ? \"Hide\" : \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-4 form-group-row\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                hasValidation: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: validateInput.confirmPassword,\n                  onChange: validateInput.handleConfirmPasswordChange,\n                  isInvalid: validateInput.confirmPasswordMess !== \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: validateInput.confirmPasswordMess\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"submit-form-button\",\n              children: waitForServer ? /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                variant: \"dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this) : buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"oFkKP606cnOzlbOaw2Smlus4ZQA=\", false, function () {\n  return [useDispatch, useSelector, useValidateInput, useFetchData];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Settings/Settings.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Redirect","useFetchData","Form","Container","Row","Col","InputGroup","Spinner","Button","NavBar","callAPI","useValidateInput","ProfileHeader","Settings","dispatch","playerInfo","state","appState","buttonText","setButtonText","uploadErr","setUploadErr","waitForServer","setWaitForServer","validateInput","waitForResponse","setWaitForResponse","getChanges","changes","username","email","lastname","firstname","value","verified","password","handleSaveChange","event","preventDefault","setError","confirmPassword","missingField","handleMissingField","setConfirmPasswordMess","invalidEmailMess","invalidPasswordMess","invalidUsernameMess","confirmPasswordMess","user","message","ok","currentPassword","type","setTimeout","handleError","err","name","setUsername","setEmail","setLastname","setFirstname","display","error","span","handleUsernameChange","handleEmailChange","handleFirstnameChange","handleLastnameChange","handleCurrentPasswordChange","invalidCurrentPassword","showPassword","handlePasswordChange","setShowPassword","handleConfirmPasswordChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useFetchData from \"../App/useFetchData.js\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport NavBar from \"../Main/NavBar/NavBar.jsx\";\r\nimport \"./Settings.scss\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport useValidateInput from \"../Signup/useValidateInput.js\";\r\nimport ProfileHeader from \"../Home/ProfileHeader/ProfileHeader.jsx\";\r\n\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const [buttonText, setButtonText] = useState(\"Save\");\r\n  const [uploadErr, setUploadErr] = useState(null);\r\n  const [waitForServer, setWaitForServer] = useState(false);\r\n  const validateInput = useValidateInput(false, true);\r\n  const [waitForResponse, setWaitForResponse] = useFetchData();\r\n\r\n  const getChanges = () => {\r\n    const changes = {};\r\n    const { username, email, lastname, firstname } = validateInput;\r\n    if (playerInfo.username !== username) changes[\"username\"] = username;\r\n    if (playerInfo.email.value !== email) {\r\n      changes[\"email\"] = { value: email, verified: false };\r\n    }\r\n    changes[\"name.lastname\"] = lastname;\r\n    changes[\"name.firstname\"] = firstname;\r\n    if (validateInput.password) changes[\"password\"] = validateInput.password;\r\n    return changes;\r\n  };\r\n\r\n  const handleSaveChange = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      if (waitForServer) return;\r\n      setUploadErr(\"\");\r\n      validateInput.setError(null);\r\n      const { password, confirmPassword } = validateInput;\r\n      const missingField = validateInput.handleMissingField(\r\n        !playerInfo.email.value\r\n      );\r\n      if (password !== confirmPassword) {\r\n        validateInput.setConfirmPasswordMess(\"Password doesn't match\");\r\n        return;\r\n      }\r\n      if (\r\n        !missingField &&\r\n        !validateInput.invalidEmailMess &&\r\n        !validateInput.invalidPasswordMess &&\r\n        !validateInput.invalidUsernameMess &&\r\n        !validateInput.confirmPasswordMess\r\n      ) {\r\n        const changes = getChanges();\r\n        setWaitForServer(true);\r\n        const { user, message, ok } = await callAPI(\r\n          \"POST\",\r\n          \"api/signup/settings\",\r\n          {\r\n            changes: changes,\r\n            currentPassword: validateInput.currentPassword,\r\n            user: playerInfo.username,\r\n          }\r\n        );\r\n        setWaitForServer(false);\r\n        if (user) {\r\n          dispatch({ type: \"setPlayerInfo\", value: user });\r\n          setButtonText(\"Your settings have been saved.\");\r\n          setTimeout(() => {\r\n            setButtonText(\"Save\");\r\n          }, 1000);\r\n        } else if (message) validateInput.handleError(ok, message);\r\n      }\r\n    } catch (err) {\r\n      setWaitForServer(false);\r\n      setUploadErr(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playerInfo) {\r\n      const { username, email, name } = playerInfo;\r\n      validateInput.setUsername(username ? username : \"\");\r\n      validateInput.setEmail(email.value ? email.value : \"\");\r\n      validateInput.setLastname(name.lastname ? name.lastname : \"\");\r\n      validateInput.setFirstname(name.firstname ? name.firstname : \"\");\r\n    }\r\n  }, []);\r\n\r\n  if (!playerInfo) return <Redirect to=\"/\" />;\r\n\r\n  if (waitForResponse)\r\n    return (\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" />\r\n    );\r\n\r\n  return (\r\n    <Container fluid className=\"settings-container\">\r\n      <NavBar setWaitForResponse={setWaitForResponse} />\r\n      <Row className=\"home-row mt-3\">\r\n        <p\r\n          className=\"upload-pic-err\"\r\n          style={{\r\n            display: uploadErr || validateInput.error ? \"block\" : \" none\",\r\n          }}\r\n        >\r\n          <i\r\n            className=\"fas fa-times\"\r\n            onClick={() => {\r\n              validateInput.setError(null);\r\n              setUploadErr(null);\r\n            }}\r\n          ></i>\r\n          {uploadErr ? uploadErr : validateInput.error}\r\n        </p>\r\n        <Col xs={{ span: 11 }} md={{ span: 7 }}>\r\n          <ProfileHeader\r\n            setError={setUploadErr}\r\n            setting={true}\r\n            playerInfo={playerInfo}\r\n          />\r\n          <Form\r\n            className=\"mt-3 mb-3 settings-form\"\r\n            method=\"POST\"\r\n            onSubmit={handleSaveChange}\r\n          >\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Username\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={validateInput.username}\r\n                    onChange={validateInput.handleUsernameChange}\r\n                    isInvalid={validateInput.invalidUsernameMess !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Email\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={validateInput.email}\r\n                    onChange={validateInput.handleEmailChange}\r\n                    isInvalid={validateInput.invalidEmailMess !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidEmailMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Firstname\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={validateInput.firstname}\r\n                  onChange={validateInput.handleFirstnameChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Lastname\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={validateInput.lastname}\r\n                  onChange={validateInput.handleLastnameChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Current Password\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={validateInput.currentPassword}\r\n                    onChange={validateInput.handleCurrentPasswordChange}\r\n                    isInvalid={validateInput.invalidCurrentPassword !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidCurrentPassword}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                New Password\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation className=\"password-group\">\r\n                  <Form.Control\r\n                    type={validateInput.showPassword ? \"text\" : \"password\"}\r\n                    value={validateInput.password}\r\n                    isInvalid={validateInput.invalidPasswordMess !== \"\"}\r\n                    onChange={validateInput.handlePasswordChange}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                  <button\r\n                    className=\"toggle-password\"\r\n                    type=\"button\"\r\n                    style={{\r\n                      display: validateInput.invalidPasswordMess\r\n                        ? \"none\"\r\n                        : \"inline\",\r\n                    }}\r\n                    onClick={() => {\r\n                      validateInput.setShowPassword(\r\n                        !validateInput.showPassword\r\n                      );\r\n                    }}\r\n                  >\r\n                    {validateInput.showPassword ? \"Hide\" : \"Show\"}\r\n                  </button>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mt-4 form-group-row\">\r\n              <Form.Label column sm={2}>\r\n                Confirm New Password\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={validateInput.confirmPassword}\r\n                    onChange={validateInput.handleConfirmPasswordChange}\r\n                    isInvalid={validateInput.confirmPasswordMess !== \"\"}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {validateInput.confirmPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Col className=\"mt-4\">\r\n              <Button type=\"submit\" className=\"submit-form-button\">\r\n                {waitForServer ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  buttonText\r\n                )}\r\n              </Button>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}