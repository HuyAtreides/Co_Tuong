{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\NavBar\\\\Invites\\\\Invites.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { SocketContext } from \"../../../App/context.js\";\nimport renderInvites from \"./renderInvites.js\";\nimport \"./Invites.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Invites = () => {\n  _s();\n\n  const [invites, setInvites] = useState({});\n  const socket = useContext(SocketContext);\n\n  const handleAccept = event => {\n    const playername = event.currentTarget.getAttribute(\"playername\");\n  };\n\n  const handleDecline = event => {\n    const playername = event.currentTarget.getAttribute(\"playername\");\n  };\n\n  useEffect(() => {\n    socket.on(\"receiveInvite\", (sender, senderSocketID, time) => {\n      if (Object.values(invites).length === 5) socket.emit(\"receiveTooManyInvites\", senderSocketID);else setInvites(prevState => {\n        const newState = Object.assign({}, prevState);\n        sender.socketID = senderSocketID;\n        sender.time = time;\n        newState[sender.playername] = sender;\n        return newState;\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"invites-list\",\n    children: renderInvites(invites, handleAccept, handleDecline)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Invites, \"mDj9XX0tKqUJ825N4aU/WIAWL84=\");\n\n_c = Invites;\nexport default Invites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invites\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/NavBar/Invites/Invites.jsx"],"names":["React","useEffect","useContext","useState","SocketContext","renderInvites","Invites","invites","setInvites","socket","handleAccept","event","playername","currentTarget","getAttribute","handleDecline","on","sender","senderSocketID","time","Object","values","length","emit","prevState","newState","assign","socketID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMM,MAAM,GAAGP,UAAU,CAACE,aAAD,CAAzB;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,CAAoBC,YAApB,CAAiC,YAAjC,CAAnB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIJ,KAAD,IAAW;AAC/B,UAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,CAAoBC,YAApB,CAAiC,YAAjC,CAAnB;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACO,EAAP,CAAU,eAAV,EAA2B,CAACC,MAAD,EAASC,cAAT,EAAyBC,IAAzB,KAAkC;AAC3D,UAAIC,MAAM,CAACC,MAAP,CAAcd,OAAd,EAAuBe,MAAvB,KAAkC,CAAtC,EACEb,MAAM,CAACc,IAAP,CAAY,uBAAZ,EAAqCL,cAArC,EADF,KAGEV,UAAU,CAAEgB,SAAD,IAAe;AACxB,cAAMC,QAAQ,GAAGL,MAAM,CAACM,MAAP,CAAc,EAAd,EAAkBF,SAAlB,CAAjB;AACAP,QAAAA,MAAM,CAACU,QAAP,GAAkBT,cAAlB;AACAD,QAAAA,MAAM,CAACE,IAAP,GAAcA,IAAd;AACAM,QAAAA,QAAQ,CAACR,MAAM,CAACL,UAAR,CAAR,GAA8BK,MAA9B;AACA,eAAOQ,QAAP;AACD,OANS,CAAV;AAOH,KAXD;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,cACGpB,aAAa,CAACE,OAAD,EAAUG,YAAV,EAAwBK,aAAxB;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMT,O;;KAAAA,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { SocketContext } from \"../../../App/context.js\";\r\nimport renderInvites from \"./renderInvites.js\";\r\nimport \"./Invites.scss\";\r\n\r\nconst Invites = () => {\r\n  const [invites, setInvites] = useState({});\r\n  const socket = useContext(SocketContext);\r\n\r\n  const handleAccept = (event) => {\r\n    const playername = event.currentTarget.getAttribute(\"playername\");\r\n  };\r\n\r\n  const handleDecline = (event) => {\r\n    const playername = event.currentTarget.getAttribute(\"playername\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receiveInvite\", (sender, senderSocketID, time) => {\r\n      if (Object.values(invites).length === 5)\r\n        socket.emit(\"receiveTooManyInvites\", senderSocketID);\r\n      else\r\n        setInvites((prevState) => {\r\n          const newState = Object.assign({}, prevState);\r\n          sender.socketID = senderSocketID;\r\n          sender.time = time;\r\n          newState[sender.playername] = sender;\r\n          return newState;\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"invites-list\">\r\n      {renderInvites(invites, handleAccept, handleDecline)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Invites;\r\n"]},"metadata":{},"sourceType":"module"}