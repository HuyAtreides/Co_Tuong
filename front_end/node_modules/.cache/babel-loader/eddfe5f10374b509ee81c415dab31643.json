{"ast":null,"code":"import React from\"react\";import{io}from\"socket.io-client\";var socket=io(\"http://localhost:8080/play\",{autoConnect:false});var SocketContext=/*#__PURE__*/React.createContext();var SetMoveTimerContext=/*#__PURE__*/React.createContext();var AuthenticateUserContext=/*#__PURE__*/React.createContext();var authenticateUser=function authenticateUser(dispatch,user,sessionID){if(socket.connected)socket.disconnect();dispatch({type:\"setPlayerInfo\",value:user});dispatch({type:\"setIsAuthenticated\",value:sessionID?true:\"guest\"});socket.auth={player:{playername:user.username,guest:user.guest,photo:user.photo},sessionID:sessionID};socket.connect();};var setMoveTimer=function setMoveTimer(playerTurn,gameFinish,dispatch){socket.removeAllListeners(\"oneSecondPass\");if(gameFinish){socket.emit(\"setTimer\",false);dispatch({type:\"setPause\",value:null});dispatch({type:\"setPauseTime\",value:\"restart\"});dispatch({type:\"setOpponentTimeLeftToMove\",value:\"restart\"});dispatch({type:\"setPlayerTimeLeftToMove\",value:\"restart\"});dispatch({type:\"setTurnToMove\",value:false});return;}if(playerTurn)dispatch({type:\"setOpponentTimeLeftToMove\",value:\"restart\"});else dispatch({type:\"setPlayerTimeLeftToMove\",value:\"restart\"});socket.emit(\"startTimer\",true);socket.on(\"oneSecondPass\",function(){if(playerTurn)dispatch({type:\"setPlayerTimeLeftToMove\",value:null});else dispatch({type:\"setOpponentTimeLeftToMove\",value:null});});};export{SocketContext,SetMoveTimerContext,setMoveTimer,socket,AuthenticateUserContext,authenticateUser};","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/context.js"],"names":["React","io","socket","autoConnect","SocketContext","createContext","SetMoveTimerContext","AuthenticateUserContext","authenticateUser","dispatch","user","sessionID","connected","disconnect","type","value","auth","player","playername","username","guest","photo","connect","setMoveTimer","playerTurn","gameFinish","removeAllListeners","emit","on"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,EAAT,KAAmB,kBAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAGD,EAAE,CAAC,4BAAD,CAA+B,CAAEE,WAAW,CAAE,KAAf,CAA/B,CAAjB,CACA,GAAMC,CAAAA,aAAa,cAAGJ,KAAK,CAACK,aAAN,EAAtB,CACA,GAAMC,CAAAA,mBAAmB,cAAGN,KAAK,CAACK,aAAN,EAA5B,CACA,GAAME,CAAAA,uBAAuB,cAAGP,KAAK,CAACK,aAAN,EAAhC,CAEA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAWC,IAAX,CAAiBC,SAAjB,CAA+B,CACtD,GAAIT,MAAM,CAACU,SAAX,CAAsBV,MAAM,CAACW,UAAP,GACtBJ,QAAQ,CAAC,CAAEK,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAEL,IAAhC,CAAD,CAAR,CACAD,QAAQ,CAAC,CAAEK,IAAI,CAAE,oBAAR,CAA8BC,KAAK,CAAEJ,SAAS,CAAG,IAAH,CAAU,OAAxD,CAAD,CAAR,CACAT,MAAM,CAACc,IAAP,CAAc,CACZC,MAAM,CAAE,CACNC,UAAU,CAAER,IAAI,CAACS,QADX,CAENC,KAAK,CAAEV,IAAI,CAACU,KAFN,CAGNC,KAAK,CAAEX,IAAI,CAACW,KAHN,CADI,CAMZV,SAAS,CAAEA,SANC,CAAd,CAQAT,MAAM,CAACoB,OAAP,GACD,CAbD,CAeA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAaC,UAAb,CAAyBhB,QAAzB,CAAsC,CACzDP,MAAM,CAACwB,kBAAP,CAA0B,eAA1B,EACA,GAAID,UAAJ,CAAgB,CACdvB,MAAM,CAACyB,IAAP,CAAY,UAAZ,CAAwB,KAAxB,EACAlB,QAAQ,CAAC,CAAEK,IAAI,CAAE,UAAR,CAAoBC,KAAK,CAAE,IAA3B,CAAD,CAAR,CACAN,QAAQ,CAAC,CAAEK,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,SAA/B,CAAD,CAAR,CACAN,QAAQ,CAAC,CAAEK,IAAI,CAAE,2BAAR,CAAqCC,KAAK,CAAE,SAA5C,CAAD,CAAR,CACAN,QAAQ,CAAC,CAAEK,IAAI,CAAE,yBAAR,CAAmCC,KAAK,CAAE,SAA1C,CAAD,CAAR,CACAN,QAAQ,CAAC,CAAEK,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,KAAhC,CAAD,CAAR,CACA,OACD,CACD,GAAIS,UAAJ,CACEf,QAAQ,CAAC,CAAEK,IAAI,CAAE,2BAAR,CAAqCC,KAAK,CAAE,SAA5C,CAAD,CAAR,CADF,IAEKN,CAAAA,QAAQ,CAAC,CAAEK,IAAI,CAAE,yBAAR,CAAmCC,KAAK,CAAE,SAA1C,CAAD,CAAR,CACLb,MAAM,CAACyB,IAAP,CAAY,YAAZ,CAA0B,IAA1B,EACAzB,MAAM,CAAC0B,EAAP,CAAU,eAAV,CAA2B,UAAM,CAC/B,GAAIJ,UAAJ,CAAgBf,QAAQ,CAAC,CAAEK,IAAI,CAAE,yBAAR,CAAmCC,KAAK,CAAE,IAA1C,CAAD,CAAR,CAAhB,IACKN,CAAAA,QAAQ,CAAC,CAAEK,IAAI,CAAE,2BAAR,CAAqCC,KAAK,CAAE,IAA5C,CAAD,CAAR,CACN,CAHD,EAID,CAnBD,CAqBA,OACEX,aADF,CAEEE,mBAFF,CAGEiB,YAHF,CAIErB,MAJF,CAKEK,uBALF,CAMEC,gBANF","sourcesContent":["import React from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:8080/play\", { autoConnect: false });\r\nconst SocketContext = React.createContext();\r\nconst SetMoveTimerContext = React.createContext();\r\nconst AuthenticateUserContext = React.createContext();\r\n\r\nconst authenticateUser = (dispatch, user, sessionID) => {\r\n  if (socket.connected) socket.disconnect();\r\n  dispatch({ type: \"setPlayerInfo\", value: user });\r\n  dispatch({ type: \"setIsAuthenticated\", value: sessionID ? true : \"guest\" });\r\n  socket.auth = {\r\n    player: {\r\n      playername: user.username,\r\n      guest: user.guest,\r\n      photo: user.photo,\r\n    },\r\n    sessionID: sessionID,\r\n  };\r\n  socket.connect();\r\n};\r\n\r\nconst setMoveTimer = (playerTurn, gameFinish, dispatch) => {\r\n  socket.removeAllListeners(\"oneSecondPass\");\r\n  if (gameFinish) {\r\n    socket.emit(\"setTimer\", false);\r\n    dispatch({ type: \"setPause\", value: null });\r\n    dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n    dispatch({ type: \"setTurnToMove\", value: false });\r\n    return;\r\n  }\r\n  if (playerTurn)\r\n    dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n  else dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n  socket.emit(\"startTimer\", true);\r\n  socket.on(\"oneSecondPass\", () => {\r\n    if (playerTurn) dispatch({ type: \"setPlayerTimeLeftToMove\", value: null });\r\n    else dispatch({ type: \"setOpponentTimeLeftToMove\", value: null });\r\n  });\r\n};\r\n\r\nexport {\r\n  SocketContext,\r\n  SetMoveTimerContext,\r\n  setMoveTimer,\r\n  socket,\r\n  AuthenticateUserContext,\r\n  authenticateUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}