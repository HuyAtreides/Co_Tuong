{"ast":null,"code":"import Piece from \"./piece.js\";\nimport elephantRules from \"./move_rules/elephantRules.js\";\n\nclass Elephant extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = elephantRules;\n  }\n\n  isBlocked(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n    let count;\n\n    do {\n      curCol += curCol > newCol ? -1 : 1;\n      curRow += curRow > newRow ? -1 : 1;\n      if (board[curRow][curCol]) count++;\n    } while (curCol !== newCol && curRow !== newRow);\n\n    console.log(count);\n    return count;\n  }\n\n}\n\nexport default Elephant;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/elephant.js"],"names":["Piece","elephantRules","Elephant","constructor","width","row","col","name","moves","isBlocked","newRow","newCol","board","curRow","curCol","position","count","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,QAAN,SAAuBF,KAAvB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaP,aAAb;AACD;;AAEDQ,EAAAA,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAC/B,QAAI,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,QAAIC,KAAJ;;AACA,OAAG;AACDF,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACAE,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,UAAIE,KAAK,CAACC,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BE,KAAK;AACjC,KAJD,QAISF,MAAM,KAAKH,MAAX,IAAqBE,MAAM,KAAKH,MAJzC;;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOA,KAAP;AACD;;AAhB0B;;AAmB7B,eAAed,QAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport elephantRules from \"./move_rules/elephantRules.js\";\r\n\r\nclass Elephant extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = elephantRules;\r\n  }\r\n\r\n  isBlocked(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol && curRow !== newRow);\r\n    console.log(count);\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default Elephant;\r\n"]},"metadata":{},"sourceType":"module"}