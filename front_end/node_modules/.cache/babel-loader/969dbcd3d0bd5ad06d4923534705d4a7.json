{"ast":null,"code":"import _regeneratorRuntime from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import callAPI from\"./callAPI\";import{authenticateUser}from\"./context.js\";import{useDispatch,useSelector}from\"react-redux\";var useFetchData=function useFetchData(){var dispatch=useDispatch();var isAuthenticated=useSelector(function(state){return state.appState.isAuthenticated;});var _useState=useState(true),_useState2=_slicedToArray(_useState,2),waitForResponse=_useState2[0],setWaitForResponse=_useState2[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$callAPI,user,message,opponentID;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(isAuthenticated){_context.next=12;break;}_context.next=4;return callAPI(\"GET\",\"api/user\",null);case 4:_yield$callAPI=_context.sent;user=_yield$callAPI.user;message=_yield$callAPI.message;opponentID=_yield$callAPI.opponentID;if(user){authenticateUser(dispatch,user,opponentID);}else if(message)dispatch({type:\"setLoginError\",value:message});setWaitForResponse(false);_context.next=13;break;case 12:setWaitForResponse(false);case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);dispatch({type:\"setLoginError\",value:_context.t0.message});case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);})),[isAuthenticated]);return[waitForResponse,setWaitForResponse];};export default useFetchData;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/useFetchData.js"],"names":["useEffect","useState","callAPI","authenticateUser","useDispatch","useSelector","useFetchData","dispatch","isAuthenticated","state","appState","waitForResponse","setWaitForResponse","user","message","opponentID","type","value"],"mappings":"0dAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,gBAAT,KAAiC,cAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,GAAMI,CAAAA,eAAe,CAAGH,WAAW,CACjC,SAACI,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeF,eAA1B,EADiC,CAAnC,CAFyB,cAKqBP,QAAQ,CAAC,IAAD,CAL7B,wCAKlBU,eALkB,eAKDC,kBALC,eAOzBZ,SAAS,sEAAC,iMAEDQ,eAFC,gDAGwCN,CAAAA,OAAO,CACjD,KADiD,CAEjD,UAFiD,CAGjD,IAHiD,CAH/C,qCAGIW,IAHJ,gBAGIA,IAHJ,CAGUC,OAHV,gBAGUA,OAHV,CAGmBC,UAHnB,gBAGmBA,UAHnB,CASJ,GAAIF,IAAJ,CAAU,CACRV,gBAAgB,CAACI,QAAD,CAAWM,IAAX,CAAiBE,UAAjB,CAAhB,CACD,CAFD,IAEO,IAAID,OAAJ,CAAaP,QAAQ,CAAC,CAAES,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAEH,OAAhC,CAAD,CAAR,CACpBF,kBAAkB,CAAC,KAAD,CAAlB,CAZI,+BAaCA,kBAAkB,CAAC,KAAD,CAAlB,CAbD,yFAeNL,QAAQ,CAAC,CAAES,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,YAAIH,OAApC,CAAD,CAAR,CAfM,qEAAD,GAiBN,CAACN,eAAD,CAjBM,CAAT,CAmBA,MAAO,CAACG,eAAD,CAAkBC,kBAAlB,CAAP,CACD,CA3BD,CA6BA,cAAeN,CAAAA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport callAPI from \"./callAPI\";\r\nimport { authenticateUser } from \"./context.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useFetchData = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const [waitForResponse, setWaitForResponse] = useState(true);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (!isAuthenticated) {\r\n        const { user, message, opponentID } = await callAPI(\r\n          \"GET\",\r\n          \"api/user\",\r\n          null\r\n        );\r\n\r\n        if (user) {\r\n          authenticateUser(dispatch, user, opponentID);\r\n        } else if (message) dispatch({ type: \"setLoginError\", value: message });\r\n        setWaitForResponse(false);\r\n      } else setWaitForResponse(false);\r\n    } catch (err) {\r\n      dispatch({ type: \"setLoginError\", value: err.message });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  return [waitForResponse, setWaitForResponse];\r\n};\r\n\r\nexport default useFetchData;\r\n"]},"metadata":{},"sourceType":"module"}