{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Game.scss\";\nimport { Row } from \"react-bootstrap\";\nimport GameController from \"./GameController/GameController.jsx\";\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\n  const [time, setTime] = useState(10);\n  const [timeLeftToMove, setTimeLeftToMove] = useState(10); // const turnToMove = useSelector((state) => state.boardState.turnToMove);\n\n  const handleToggle = () => {\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\n  };\n\n  const handleSelectTime = event => {\n    const selectedTime = event.currentTarget.getAttribute(\"value\");\n    setTime(selectedTime);\n    setTimeLeftToMove(+selectedTime);\n    handleToggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    md: {\n      cols: 1\n    },\n    className: \"mt-5 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(GamePlayArea, {\n      timeLeftToMove: timeLeftToMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameController, {\n      time: time,\n      handleSelectTime: handleSelectTime,\n      timeSelectorDisplay: timeSelectorDisplay,\n      handleToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"YXNU3oI6ZA5zXe4XaeQ/M/zLAR8=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Game.jsx"],"names":["React","useState","Row","GameController","GamePlayArea","useSelector","Game","props","timeSelectorDisplay","setTimeSelectorDisplay","time","setTime","timeLeftToMove","setTimeLeftToMove","handleToggle","handleSelectTime","event","selectedTime","currentTarget","getAttribute","cols"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,MAAD,CAA9D;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD,CAHsB,CAItB;;AACA,QAAMa,YAAY,GAAG,MAAM;AACzBL,IAAAA,sBAAsB,CAACD,mBAAmB,KAAK,MAAxB,GAAiC,MAAjC,GAA0C,MAA3C,CAAtB;AACD,GAFD;;AAIA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,CAAoBC,YAApB,CAAiC,OAAjC,CAArB;AACAR,IAAAA,OAAO,CAACM,YAAD,CAAP;AACAJ,IAAAA,iBAAiB,CAAC,CAACI,YAAF,CAAjB;AACAH,IAAAA,YAAY;AACb,GALD;;AAOA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,cAAc,EAAER;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,gBAAgB,EAAEK,gBAFpB;AAGE,MAAA,mBAAmB,EAAEP,mBAHvB;AAIE,MAAA,YAAY,EAAEM;AAJhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BD;;GAAMR,I;;KAAAA,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Game = (props) => {\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const [time, setTime] = useState(10);\r\n  const [timeLeftToMove, setTimeLeftToMove] = useState(10);\r\n  // const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  const handleSelectTime = (event) => {\r\n    const selectedTime = event.currentTarget.getAttribute(\"value\");\r\n    setTime(selectedTime);\r\n    setTimeLeftToMove(+selectedTime);\r\n    handleToggle();\r\n  };\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea timeLeftToMove={timeLeftToMove} />\r\n      <GameController\r\n        time={time}\r\n        handleSelectTime={handleSelectTime}\r\n        timeSelectorDisplay={timeSelectorDisplay}\r\n        handleToggle={handleToggle}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}