{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./Game.scss\";\nimport { Row } from \"react-bootstrap\";\nimport GameController from \"./GameController/GameController.jsx\";\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\"); // const [time, setTime] = useState(10);\n  // const [timeLeftToMove, setTimeLeftToMove] = useState(10 * 60);\n\n  const handleToggle = () => {\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\n  }; // const timerRef = useRef();\n  // const setTimer = (startTimer) => {\n  //   if (startTimer) {\n  //     timerRef.current = setInterval(() => {\n  //       setTimeLeftToMove((prevTime) => prevTime - 1);\n  //     }, 1000);\n  //   } else {\n  //     // clearInterval(timerRef.current);\n  //     setTimeLeftToMove(time * 60);\n  //   }\n  // };\n  // const handleSelectTime = (event) => {\n  //   const selectedTime = +event.currentTarget.getAttribute(\"value\");\n  //   setTime(selectedTime);\n  //   setTimeLeftToMove(selectedTime * 60);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    md: {\n      cols: 1\n    },\n    className: \"mt-5 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(GamePlayArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameController, {\n      timeSelectorDisplay: timeSelectorDisplay,\n      handleToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"xgRxVjvpLlXeWbgFQznSd7Ah2vQ=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Game.jsx"],"names":["React","useState","useRef","Row","GameController","GamePlayArea","useSelector","Game","props","timeSelectorDisplay","setTimeSelectorDisplay","handleToggle","cols"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,aAAP;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDT,QAAQ,CAAC,MAAD,CAA9D,CADsB,CAEtB;AACA;;AACA,QAAMU,YAAY,GAAG,MAAM;AACzBD,IAAAA,sBAAsB,CAACD,mBAAmB,KAAK,MAAxB,GAAiC,MAAjC,GAA0C,MAA3C,CAAtB;AACD,GAFD,CAJsB,CAOtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,mBAAmB,EAAEH,mBADvB;AAEE,MAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCD;;GAAMJ,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Game = (props) => {\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  // const [time, setTime] = useState(10);\r\n  // const [timeLeftToMove, setTimeLeftToMove] = useState(10 * 60);\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n  // const timerRef = useRef();\r\n\r\n  // const setTimer = (startTimer) => {\r\n  //   if (startTimer) {\r\n  //     timerRef.current = setInterval(() => {\r\n  //       setTimeLeftToMove((prevTime) => prevTime - 1);\r\n  //     }, 1000);\r\n  //   } else {\r\n  //     // clearInterval(timerRef.current);\r\n  //     setTimeLeftToMove(time * 60);\r\n  //   }\r\n  // };\r\n\r\n  // const handleSelectTime = (event) => {\r\n  //   const selectedTime = +event.currentTarget.getAttribute(\"value\");\r\n  //   setTime(selectedTime);\r\n  //   setTimeLeftToMove(selectedTime * 60);\r\n\r\n  // };\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea />\r\n      <GameController\r\n        timeSelectorDisplay={timeSelectorDisplay}\r\n        handleToggle={handleToggle}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}