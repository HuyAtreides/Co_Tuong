{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useValidateInput = () => {\n  _s();\n\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n\n  const handleUsernameChange = event => {\n    const value = event.target.value;\n\n    if (/[^_a-z0-9-]/i.test(value) || value.length < 3 || value.length > 20) {\n      setInvalidUsernameMess(\"Username must be between 3-20 characters long and use only Latin letters and numbers\");\n    } else setInvalidUsernameMess(\"\");\n\n    setUsername(value);\n  };\n\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n\n    if (value.length < 6) {\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\n    } else setInvalidPasswordMess(\"\");\n\n    setPassword(value);\n  };\n\n  const handleEmailChange = event => {\n    const value = event.target.value;\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value)) setInvalidEmailMess(\"Invalid email address\");else setInvalidEmailMess(\"\");\n    setEmail(value);\n  };\n\n  const handleFirstnameChange = event => {\n    const value = event.target.value;\n    setInvalidFirstname(\"\");\n    setFirstname(value);\n  };\n\n  const handleLastnameChange = event => {\n    const value = event.target.value;\n    if (/[^a-zA-ZÁáÀàẢảÃãẠạĂăẮắẰằẲẳẴẵẶặÂâẤấẦầẨẩẪẫẬậĐđÉéÈèẺẻẼẽẸẹÊêẾếỀềỂểỄễỆệÍíÌìỈỉĨĩỊịÓóÒòỎỏÕõỌọÔôỐốỒồỔổỖỗỘộƠơỚớỜờỞởỠỡỢợÚúÙùỦủŨũỤụƯưỨứỪừỬửỮữỰựÝýỲỳỶỷỸỹỴỵ]/.test(value[0])) setInvalidLastname(\"First character must be a latin letter\");else setInvalidLastname(\"\");\n    setLastname(value);\n  };\n\n  const handleMissingField = () => {\n    let count = 0;\n\n    if (!username) {\n      count += 1;\n      setInvalidUsernameMess(\"Please fill out this field\");\n    }\n\n    if (!password) {\n      count += 1;\n      setInvalidPasswordMess(\"Please fill out this field\");\n    }\n\n    if (!firstname) {\n      count += 1;\n      setInvalidFirstname(\"Please fill out this field\");\n    }\n\n    if (!lastname) {\n      count += 1;\n      setInvalidLastname(\"Please fill out this field\");\n    }\n\n    if (!email) {\n      count += 1;\n      setInvalidEmailMess(\"Please fill out this field\");\n    }\n\n    return count !== 0;\n  };\n\n  const handleError = (ok, message) => {\n    if (!ok) {\n      setError(message);\n    } else if (/Email/.test(message)) {\n      setInvalidEmailMess(message);\n    } else if (/User/.test(message)) {\n      setInvalidUsernameMess(message);\n    } else setError(message);\n  };\n\n  return {\n    handleEmailChange,\n    handleError,\n    handleFirstnameChange,\n    handleLastnameChange,\n    handleMissingField,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password,\n    lastname,\n    firstname,\n    invalidEmailMess,\n    invalidFirstname,\n    invalidLastname,\n    invalidPasswordMess,\n    invalidUsernameMess,\n    error\n  };\n};\n\n_s(useValidateInput, \"7b1wdAWAXCqbwAih2kC3fnNjEWo=\");\n\nexport default useValidateInput;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Signup/useValidateInput.js"],"names":["useState","useValidateInput","invalidUsernameMess","setInvalidUsernameMess","invalidEmailMess","setInvalidEmailMess","invalidPasswordMess","setInvalidPasswordMess","error","setError","username","setUsername","password","setPassword","email","setEmail","firstname","setFirstname","invalidFirstname","setInvalidFirstname","invalidLastname","setInvalidLastname","lastname","setLastname","handleUsernameChange","event","value","target","test","length","handlePasswordChange","handleEmailChange","handleFirstnameChange","handleLastnameChange","handleMissingField","count","handleError","ok","message"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useValidateInput = () => {\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\r\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^_a-z0-9-]/i.test(value) || value.length < 3 || value.length > 20) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setInvalidFirstname(\"\");\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (\r\n      /[^a-zA-ZÁáÀàẢảÃãẠạĂăẮắẰằẲẳẴẵẶặÂâẤấẦầẨẩẪẫẬậĐđÉéÈèẺẻẼẽẸẹÊêẾếỀềỂểỄễỆệÍíÌìỈỉĨĩỊịÓóÒòỎỏÕõỌọÔôỐốỒồỔổỖỗỘộƠơỚớỜờỞởỠỡỢợÚúÙùỦủŨũỤụƯưỨứỪừỬửỮữỰựÝýỲỳỶỷỸỹỴỵ]/.test(\r\n        value[0]\r\n      )\r\n    )\r\n      setInvalidLastname(\"First character must be a latin letter\");\r\n    else setInvalidLastname(\"\");\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!firstname) {\r\n      count += 1;\r\n      setInvalidFirstname(\"Please fill out this field\");\r\n    }\r\n    if (!lastname) {\r\n      count += 1;\r\n      setInvalidLastname(\"Please fill out this field\");\r\n    }\r\n    if (!email) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Email/.test(message)) {\r\n      setInvalidEmailMess(message);\r\n    } else if (/User/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n  };\r\n\r\n  return {\r\n    handleEmailChange,\r\n    handleError,\r\n    handleFirstnameChange,\r\n    handleLastnameChange,\r\n    handleMissingField,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    username,\r\n    password,\r\n    lastname,\r\n    firstname,\r\n    invalidEmailMess,\r\n    invalidFirstname,\r\n    invalidLastname,\r\n    invalidPasswordMess,\r\n    invalidUsernameMess,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useValidateInput;\r\n"]},"metadata":{},"sourceType":"module"}