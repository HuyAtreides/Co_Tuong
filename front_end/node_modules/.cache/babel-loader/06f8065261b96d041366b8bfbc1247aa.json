{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Form, InputGroup, Button, Spinner } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Xiangqi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"login-component\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Xius+RyVkKjVOKh2xpz3nOm3Gu4=\");\n\n_c = Login;\nexport default Login; // {/* <Form>\n//         <Form.Group controlId=\"username-or-email\">\n//           <InputGroup hasValidation>\n//             <Form.Control\n//               type=\"text\"\n//               required\n//               isInvalid={false}\n//               placeholder=\"Username or Email\"\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               Please choose a username.\n//             </Form.Control.Feedback>\n//           </InputGroup>\n//         </Form.Group>\n//         <Form.Group controlId=\"password\">\n//           <InputGroup hasValidation>\n//             <Form.Control\n//               type=\"password\"\n//               required\n//               isInvalid={false}\n//               placeholder=\"Password\"\n//             />\n//             <Form.Control.Feedback type=\"invalid\">\n//               Please choose a username.\n//             </Form.Control.Feedback>\n//           </InputGroup>\n//         </Form.Group>\n//         <Button type=\"submit\">\n//           {/* <Spinner animation=\"border\" variant=\"dark\" /> */}\n//           Log In\n//         </Button>\n//         <Button className=\"log-in-as-guest\">Log In As Guest</Button>\n//       </Form> */}\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Login/Login.jsx"],"names":["React","useState","Container","Form","InputGroup","Button","Spinner","Redirect","Login","props","login","setLogin","invalidMessage","setInvalidMessage","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,OAA9C,QAA6D,iBAA7D;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEa,UAAAA,IAAI,EAAE;AAAR;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAZD;;GAAMN,K;;KAAAA,K;AAcN,eAAeA,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Form, InputGroup, Button, Spinner } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = (props) => {\r\n  const [login, setLogin] = useState(false);\r\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"login-component\">\r\n        <Col xs={{ span: 4 }}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// {/* <Form>\r\n//         <Form.Group controlId=\"username-or-email\">\r\n//           <InputGroup hasValidation>\r\n//             <Form.Control\r\n//               type=\"text\"\r\n//               required\r\n//               isInvalid={false}\r\n//               placeholder=\"Username or Email\"\r\n//             />\r\n//             <Form.Control.Feedback type=\"invalid\">\r\n//               Please choose a username.\r\n//             </Form.Control.Feedback>\r\n//           </InputGroup>\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"password\">\r\n//           <InputGroup hasValidation>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               required\r\n//               isInvalid={false}\r\n//               placeholder=\"Password\"\r\n//             />\r\n//             <Form.Control.Feedback type=\"invalid\">\r\n//               Please choose a username.\r\n//             </Form.Control.Feedback>\r\n//           </InputGroup>\r\n//         </Form.Group>\r\n//         <Button type=\"submit\">\r\n//           {/* <Spinner animation=\"border\" variant=\"dark\" /> */}\r\n//           Log In\r\n//         </Button>\r\n//         <Button className=\"log-in-as-guest\">Log In As Guest</Button>\r\n//       </Form> */}\r\n"]},"metadata":{},"sourceType":"module"}