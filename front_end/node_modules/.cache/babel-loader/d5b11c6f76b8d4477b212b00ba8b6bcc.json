{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useValidateInput = (isSignIn, settings, lang) => {\n  _s();\n\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [confirmPasswordMess, setConfirmPasswordMess] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [invalidCurrentPassword, setInvalidCurrentPassword] = useState(\"\");\n\n  const handleCurrentPasswordChange = event => {\n    const value = event.currentTarget.value;\n    setInvalidCurrentPassword(\"\");\n    setCurrentPassword(value);\n  };\n\n  const handleConfirmPasswordChange = event => {\n    const value = event.currentTarget.value;\n\n    if (value !== password) {\n      setConfirmPasswordMess(\"Password doesn't match\");\n    } else setConfirmPasswordMess(\"\");\n\n    setConfirmPassword(value);\n  };\n\n  const handleUsernameChange = event => {\n    const value = event.target.value;\n\n    if (!isSignIn && value && (/[^_a-z0-9-]/i.test(value) || value.length < 3 || value.length > 20)) {\n      setInvalidUsernameMess(\"Username must be between 3-20 characters long and use only Latin letters and numbers\");\n    } else setInvalidUsernameMess(\"\");\n\n    setUsername(value);\n  };\n\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n\n    if (!isSignIn && value && value.length < 6) {\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\n    } else setInvalidPasswordMess(\"\");\n\n    setInvalidCurrentPassword(\"\");\n    setConfirmPasswordMess(\"\");\n    setPassword(value);\n  };\n\n  const handleEmailChange = event => {\n    const value = event.target.value;\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value)) setInvalidEmailMess(\"Invalid email address\");else setInvalidEmailMess(\"\");\n    setEmail(value);\n  };\n\n  const handleFirstnameChange = event => {\n    const value = event.target.value;\n    setFirstname(value);\n  };\n\n  const handleLastnameChange = event => {\n    const value = event.target.value;\n    setLastname(value);\n  };\n\n  const handleMissingField = dontHaveEmail => {\n    let count = 0;\n\n    if (!username) {\n      count += 1;\n      setInvalidUsernameMess(\"Please fill out this field\");\n    }\n\n    if (!password && !settings) {\n      count += 1;\n      setInvalidPasswordMess(\"Please fill out this field\");\n    }\n\n    if (!currentPassword && settings && password) {\n      count += 1;\n      setInvalidCurrentPassword(\"Please fill out this field\");\n    }\n\n    if (!email && !isSignIn && !dontHaveEmail) {\n      count += 1;\n      setInvalidEmailMess(\"Please fill out this field\");\n    }\n\n    return count !== 0;\n  };\n\n  const handleError = (ok, message) => {\n    if (!ok) {\n      setError(message);\n    } else if (/Email/.test(message) && !isSignIn) {\n      setInvalidEmailMess(message);\n    } else if (/User/.test(message)) {\n      setInvalidUsernameMess(message);\n    } else if (/Password/.test(message)) {\n      if (settings) setInvalidCurrentPassword(message);else setInvalidPasswordMess(message);\n    } else setError(message);\n  };\n\n  return {\n    handleEmailChange,\n    handleError,\n    setError,\n    handleFirstnameChange,\n    handleLastnameChange,\n    handleMissingField,\n    handleUsernameChange,\n    handlePasswordChange,\n    confirmPassword,\n    setConfirmPassword,\n    handleConfirmPasswordChange,\n    confirmPasswordMess,\n    setConfirmPasswordMess,\n    showPassword,\n    setShowPassword,\n    username,\n    setUsername,\n    setEmail,\n    setLastname,\n    setFirstname,\n    email,\n    password,\n    lastname,\n    firstname,\n    invalidEmailMess,\n    invalidPasswordMess,\n    invalidUsernameMess,\n    error,\n    handleCurrentPasswordChange,\n    currentPassword,\n    invalidCurrentPassword\n  };\n};\n\n_s(useValidateInput, \"h2iTO9oLQaFSawURtwZdr5xmo5Q=\");\n\nexport default useValidateInput;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Signup/useValidateInput.js"],"names":["useState","useValidateInput","isSignIn","settings","lang","invalidUsernameMess","setInvalidUsernameMess","invalidEmailMess","setInvalidEmailMess","invalidPasswordMess","setInvalidPasswordMess","error","setError","username","setUsername","password","setPassword","email","setEmail","firstname","setFirstname","lastname","setLastname","confirmPassword","setConfirmPassword","confirmPasswordMess","setConfirmPasswordMess","showPassword","setShowPassword","currentPassword","setCurrentPassword","invalidCurrentPassword","setInvalidCurrentPassword","handleCurrentPasswordChange","event","value","currentTarget","handleConfirmPasswordChange","handleUsernameChange","target","test","length","handlePasswordChange","handleEmailChange","handleFirstnameChange","handleLastnameChange","handleMissingField","dontHaveEmail","count","handleError","ok","message"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useValidateInput = (isSignIn, settings, lang) => {\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordMess, setConfirmPasswordMess] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [invalidCurrentPassword, setInvalidCurrentPassword] = useState(\"\");\r\n\r\n  const handleCurrentPasswordChange = (event) => {\r\n    const value = event.currentTarget.value;\r\n    setInvalidCurrentPassword(\"\");\r\n    setCurrentPassword(value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (event) => {\r\n    const value = event.currentTarget.value;\r\n    if (value !== password) {\r\n      setConfirmPasswordMess(\"Password doesn't match\");\r\n    } else setConfirmPasswordMess(\"\");\r\n    setConfirmPassword(value);\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (\r\n      !isSignIn &&\r\n      value &&\r\n      (/[^_a-z0-9-]/i.test(value) || value.length < 3 || value.length > 20)\r\n    ) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!isSignIn && value && value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setInvalidCurrentPassword(\"\");\r\n    setConfirmPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = (dontHaveEmail) => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password && !settings) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!currentPassword && settings && password) {\r\n      count += 1;\r\n      setInvalidCurrentPassword(\"Please fill out this field\");\r\n    }\r\n\r\n    if (!email && !isSignIn && !dontHaveEmail) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Email/.test(message) && !isSignIn) {\r\n      setInvalidEmailMess(message);\r\n    } else if (/User/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else if (/Password/.test(message)) {\r\n      if (settings) setInvalidCurrentPassword(message);\r\n      else setInvalidPasswordMess(message);\r\n    } else setError(message);\r\n  };\r\n\r\n  return {\r\n    handleEmailChange,\r\n    handleError,\r\n    setError,\r\n    handleFirstnameChange,\r\n    handleLastnameChange,\r\n    handleMissingField,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    confirmPassword,\r\n    setConfirmPassword,\r\n    handleConfirmPasswordChange,\r\n    confirmPasswordMess,\r\n    setConfirmPasswordMess,\r\n    showPassword,\r\n    setShowPassword,\r\n    username,\r\n    setUsername,\r\n    setEmail,\r\n    setLastname,\r\n    setFirstname,\r\n    email,\r\n    password,\r\n    lastname,\r\n    firstname,\r\n    invalidEmailMess,\r\n    invalidPasswordMess,\r\n    invalidUsernameMess,\r\n    error,\r\n    handleCurrentPasswordChange,\r\n    currentPassword,\r\n    invalidCurrentPassword,\r\n  };\r\n};\r\n\r\nexport default useValidateInput;\r\n"]},"metadata":{},"sourceType":"module"}