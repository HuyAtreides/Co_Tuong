{"ast":null,"code":"import Piece from \"./piece.js\";\nimport chariotRules from \"./move_rules/chariotRules.js\";\n\nclass Chariot extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = chariotRules;\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    this.translate = `translate(${curCol * this.width}, ${curRow * this.width})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\n        if (!board[newRow][newCol].side) return this.setPosition(false, newRow, newCol);else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\n          if (!this.isBlocked(newRow, newCol, board)) return this.setPosition(true, newRow, newCol);\n        }\n      }\n    }\n  }\n\n  canCapture(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n\n    if (newRow === curRow) {\n      do {\n        curCol += curCol > newCol ? -1 : 1;\n        if (board[curRow][curCol]) return true;\n      } while (curCol !== newCol);\n    } else {\n      do {\n        curRow += curRow > newRow ? -1 : 1;\n        if (board[curRow][curCol]) return true;\n      } while (curRow !== newRow);\n    }\n  }\n\n}\n\nexport default Chariot;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/chariot.js"],"names":["Piece","chariotRules","Chariot","constructor","width","row","col","name","moves","setNewPosition","x","y","board","newCol","Math","floor","newRow","curRow","curCol","position","translate","checkValidMove","side","setPosition","isBlocked","canCapture"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAN,SAAsBF,KAAtB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaP,YAAb;AACD;;AAEDQ,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAc;AAC1B,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,KAAKN,KAApB,CAAf;AACA,UAAMY,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,KAAKP,KAApB,CAAf;AACA,UAAM,CAACa,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,SAAKC,SAAL,GAAkB,aAAYF,MAAM,GAAG,KAAKd,KAAM,KAChDa,MAAM,GAAG,KAAKb,KACf,GAFD;;AAGA,QAAIS,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BG,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,UAAI,KAAKK,cAAL,CAAoBL,MAAM,GAAGC,MAA7B,EAAqCJ,MAAM,GAAGK,MAA9C,CAAJ,EAA2D;AACzD,YAAI,CAACN,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAA3B,EACE,OAAO,KAAKC,WAAL,CAAiB,KAAjB,EAAwBP,MAAxB,EAAgCH,MAAhC,CAAP,CADF,KAEK,IAAID,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAAtB,KAA+BV,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBI,IAAzD,EAA+D;AAClE,cAAI,CAAC,KAAKE,SAAL,CAAeR,MAAf,EAAuBH,MAAvB,EAA+BD,KAA/B,CAAL,EACE,OAAO,KAAKW,WAAL,CAAiB,IAAjB,EAAuBP,MAAvB,EAA+BH,MAA/B,CAAP;AACH;AACF;AACF;AACF;;AAEDY,EAAAA,UAAU,CAACT,MAAD,EAASH,MAAT,EAAiBD,KAAjB,EAAwB;AAChC,QAAI,CAACK,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;;AACA,QAAIH,MAAM,KAAKC,MAAf,EAAuB;AACrB,SAAG;AACDC,QAAAA,MAAM,IAAIA,MAAM,GAAGL,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,YAAID,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2B,OAAO,IAAP;AAC5B,OAHD,QAGSA,MAAM,KAAKL,MAHpB;AAID,KALD,MAKO;AACL,SAAG;AACDI,QAAAA,MAAM,IAAIA,MAAM,GAAGD,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,YAAIJ,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2B,OAAO,IAAP;AAC5B,OAHD,QAGSD,MAAM,KAAKD,MAHpB;AAID;AACF;;AAtCyB;;AAyC5B,eAAed,OAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport chariotRules from \"./move_rules/chariotRules.js\";\r\n\r\nclass Chariot extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = chariotRules;\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    this.translate = `translate(${curCol * this.width}, ${\r\n      curRow * this.width\r\n    })`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\r\n        if (!board[newRow][newCol].side)\r\n          return this.setPosition(false, newRow, newCol);\r\n        else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\r\n          if (!this.isBlocked(newRow, newCol, board))\r\n            return this.setPosition(true, newRow, newCol);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  canCapture(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    if (newRow === curRow) {\r\n      do {\r\n        curCol += curCol > newCol ? -1 : 1;\r\n        if (board[curRow][curCol]) return true;\r\n      } while (curCol !== newCol);\r\n    } else {\r\n      do {\r\n        curRow += curRow > newRow ? -1 : 1;\r\n        if (board[curRow][curCol]) return true;\r\n      } while (curRow !== newRow);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Chariot;\r\n"]},"metadata":{},"sourceType":"module"}