{"ast":null,"code":"const callAPI = async (method, endPoint, data, isFile) => {\n  try {\n    let response;\n\n    if (method === \"POST\") {\n      const init = {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: isFile ? {} : {\n          \"Content-Type\": \"application/json\"\n        },\n        body: isFile ? data : JSON.stringify(data)\n      };\n      response = await fetch(`http://localhost:8080/api/${endPoint}`, init);\n    } else response = await fetch(`http://localhost:8080/api/${endPoint}`, {\n      credentials: \"include\"\n    });\n\n    const responseData = await response.json();\n    responseData.ok = response.ok;\n    return responseData;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport default callAPI;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/callAPI.js"],"names":["callAPI","method","endPoint","data","isFile","response","init","credentials","headers","body","JSON","stringify","fetch","responseData","json","ok","err","Error","message"],"mappings":"AAAA,MAAMA,OAAO,GAAG,OAAOC,MAAP,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,MAA/B,KAA0C;AACxD,MAAI;AACF,QAAIC,QAAJ;;AACA,QAAIJ,MAAM,KAAK,MAAf,EAAuB;AACrB,YAAMK,IAAI,GAAG;AACXL,QAAAA,MAAM,EAAE,MADG;AAEXM,QAAAA,WAAW,EAAE,SAFF;AAGXC,QAAAA,OAAO,EAAEJ,MAAM,GAAG,EAAH,GAAQ;AACrB,0BAAgB;AADK,SAHZ;AAMXK,QAAAA,IAAI,EAAEL,MAAM,GAAGD,IAAH,GAAUO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANX,OAAb;AAQAE,MAAAA,QAAQ,GAAG,MAAMO,KAAK,CAAE,6BAA4BV,QAAS,EAAvC,EAA0CI,IAA1C,CAAtB;AACD,KAVD,MAWED,QAAQ,GAAG,MAAMO,KAAK,CAAE,6BAA4BV,QAAS,EAAvC,EAA0C;AAC9DK,MAAAA,WAAW,EAAE;AADiD,KAA1C,CAAtB;;AAGF,UAAMM,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACAD,IAAAA,YAAY,CAACE,EAAb,GAAkBV,QAAQ,CAACU,EAA3B;AACA,WAAOF,YAAP;AACD,GAnBD,CAmBE,OAAOG,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAG,CAACE,OAAd,CAAN;AACD;AACF,CAvBD;;AAyBA,eAAelB,OAAf","sourcesContent":["const callAPI = async (method, endPoint, data, isFile) => {\r\n  try {\r\n    let response;\r\n    if (method === \"POST\") {\r\n      const init = {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: isFile ? {} : {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: isFile ? data : JSON.stringify(data),\r\n      };\r\n      response = await fetch(`http://localhost:8080/api/${endPoint}`, init);\r\n    } else\r\n      response = await fetch(`http://localhost:8080/api/${endPoint}`, {\r\n        credentials: \"include\",\r\n      });\r\n    const responseData = await response.json();\r\n    responseData.ok = response.ok;\r\n    return responseData;\r\n  } catch (err) {\r\n    throw new Error(err.message);\r\n  }\r\n};\r\n\r\nexport default callAPI;\r\n"]},"metadata":{},"sourceType":"module"}