{"ast":null,"code":"const defaultState = {\n  findingMatch: false,\n  foundMatch: false,\n  time: 10,\n  opponentTimeLeftToMove: 10 * 60,\n  playerTimeLeftToMove: 10 * 60,\n  pause: false,\n  receiveDrawOffer: false,\n  messages: [],\n  gameResult: null,\n  sendGameResult: false,\n  gameResultDisplay: \"flex\"\n};\n\nconst gameReducer = (state = defaultState, action) => {\n  const newState = Object.assign({}, state);\n  const {\n    type,\n    value\n  } = action;\n\n  switch (type) {\n    case \"setSendGameResult\":\n      newState.sendGameResult = value;\n      return newState;\n\n    case \"setGameResult\":\n      newState.gameResult = value;\n      return newState;\n\n    case \"setFindingMatch\":\n      newState.findingMatch = value;\n      return newState;\n\n    case \"setFoundMatch\":\n      newState.foundMatch = value;\n      return newState;\n\n    case \"setTime\":\n      newState.time = value;\n      newState.playerTimeLeftToMove = value * 60;\n      newState.opponentTimeLeftToMove = value * 60;\n      return newState;\n\n    case \"setPlayerTimeLeftToMove\":\n      if (value === \"restart\") newState.playerTimeLeftToMove = newState.time * 60;else newState.playerTimeLeftToMove = newState.time * 60 - (value < 1 ? 1 : value);\n      return newState;\n\n    case \"setOpponentTimeLeftToMove\":\n      if (value === \"restart\") newState.opponentTimeLeftToMove = newState.time * 60;else newState.opponentTimeLeftToMove = newState.time * 60 - (value < 1 ? 1 : value);\n      return newState;\n\n    case \"setPause\":\n      newState.pause = value;\n      return newState;\n\n    case \"setReceiveDrawOffer\":\n      newState.receiveDrawOffer = value;\n      return newState;\n\n    case \"setMessage\":\n      const newMessages = [...newState.messages];\n      newMessages.push(value);\n      newState.messages = newMessages;\n      return newState;\n\n    case \"setGameResultDisplay\":\n      newState.gameResultDisplay = value;\n      return newState;\n\n    case \"resetGameState\":\n      return defaultState;\n\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/reducer/gameReducer.js"],"names":["defaultState","findingMatch","foundMatch","time","opponentTimeLeftToMove","playerTimeLeftToMove","pause","receiveDrawOffer","messages","gameResult","sendGameResult","gameResultDisplay","gameReducer","state","action","newState","Object","assign","type","value","newMessages","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,sBAAsB,EAAE,KAAK,EAJV;AAKnBC,EAAAA,oBAAoB,EAAE,KAAK,EALR;AAMnBC,EAAAA,KAAK,EAAE,KANY;AAOnBC,EAAAA,gBAAgB,EAAE,KAPC;AAQnBC,EAAAA,QAAQ,EAAE,EARS;AASnBC,EAAAA,UAAU,EAAE,IATO;AAUnBC,EAAAA,cAAc,EAAE,KAVG;AAWnBC,EAAAA,iBAAiB,EAAE;AAXA,CAArB;;AAcA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AACpD,QAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAjB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,MAAxB;;AACA,UAAQI,IAAR;AACE,SAAK,mBAAL;AACEH,MAAAA,QAAQ,CAACL,cAAT,GAA0BS,KAA1B;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACN,UAAT,GAAsBU,KAAtB;AACA,aAAOJ,QAAP;;AACF,SAAK,iBAAL;AACEA,MAAAA,QAAQ,CAACd,YAAT,GAAwBkB,KAAxB;AACA,aAAOJ,QAAP;;AACF,SAAK,eAAL;AACEA,MAAAA,QAAQ,CAACb,UAAT,GAAsBiB,KAAtB;AACA,aAAOJ,QAAP;;AACF,SAAK,SAAL;AACEA,MAAAA,QAAQ,CAACZ,IAAT,GAAgBgB,KAAhB;AACAJ,MAAAA,QAAQ,CAACV,oBAAT,GAAgCc,KAAK,GAAG,EAAxC;AACAJ,MAAAA,QAAQ,CAACX,sBAAT,GAAkCe,KAAK,GAAG,EAA1C;AACA,aAAOJ,QAAP;;AACF,SAAK,yBAAL;AACE,UAAII,KAAK,KAAK,SAAd,EACEJ,QAAQ,CAACV,oBAAT,GAAgCU,QAAQ,CAACZ,IAAT,GAAgB,EAAhD,CADF,KAGEY,QAAQ,CAACV,oBAAT,GACEU,QAAQ,CAACZ,IAAT,GAAgB,EAAhB,IAAsBgB,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAtC,CADF;AAEF,aAAOJ,QAAP;;AACF,SAAK,2BAAL;AACE,UAAII,KAAK,KAAK,SAAd,EACEJ,QAAQ,CAACX,sBAAT,GAAkCW,QAAQ,CAACZ,IAAT,GAAgB,EAAlD,CADF,KAGEY,QAAQ,CAACX,sBAAT,GACEW,QAAQ,CAACZ,IAAT,GAAgB,EAAhB,IAAsBgB,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAtC,CADF;AAEF,aAAOJ,QAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,QAAQ,CAACT,KAAT,GAAiBa,KAAjB;AACA,aAAOJ,QAAP;;AACF,SAAK,qBAAL;AACEA,MAAAA,QAAQ,CAACR,gBAAT,GAA4BY,KAA5B;AACA,aAAOJ,QAAP;;AACF,SAAK,YAAL;AACE,YAAMK,WAAW,GAAG,CAAC,GAAGL,QAAQ,CAACP,QAAb,CAApB;AACAY,MAAAA,WAAW,CAACC,IAAZ,CAAiBF,KAAjB;AACAJ,MAAAA,QAAQ,CAACP,QAAT,GAAoBY,WAApB;AACA,aAAOL,QAAP;;AACF,SAAK,sBAAL;AACEA,MAAAA,QAAQ,CAACJ,iBAAT,GAA6BQ,KAA7B;AACA,aAAOJ,QAAP;;AACF,SAAK,gBAAL;AACE,aAAOf,YAAP;;AACF;AACE,aAAOa,KAAP;AAjDJ;AAmDD,CAtDD;;AAwDA,eAAeD,WAAf","sourcesContent":["const defaultState = {\r\n  findingMatch: false,\r\n  foundMatch: false,\r\n  time: 10,\r\n  opponentTimeLeftToMove: 10 * 60,\r\n  playerTimeLeftToMove: 10 * 60,\r\n  pause: false,\r\n  receiveDrawOffer: false,\r\n  messages: [],\r\n  gameResult: null,\r\n  sendGameResult: false,\r\n  gameResultDisplay: \"flex\",\r\n};\r\n\r\nconst gameReducer = (state = defaultState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setSendGameResult\":\r\n      newState.sendGameResult = value;\r\n      return newState;\r\n    case \"setGameResult\":\r\n      newState.gameResult = value;\r\n      return newState;\r\n    case \"setFindingMatch\":\r\n      newState.findingMatch = value;\r\n      return newState;\r\n    case \"setFoundMatch\":\r\n      newState.foundMatch = value;\r\n      return newState;\r\n    case \"setTime\":\r\n      newState.time = value;\r\n      newState.playerTimeLeftToMove = value * 60;\r\n      newState.opponentTimeLeftToMove = value * 60;\r\n      return newState;\r\n    case \"setPlayerTimeLeftToMove\":\r\n      if (value === \"restart\")\r\n        newState.playerTimeLeftToMove = newState.time * 60;\r\n      else\r\n        newState.playerTimeLeftToMove =\r\n          newState.time * 60 - (value < 1 ? 1 : value);\r\n      return newState;\r\n    case \"setOpponentTimeLeftToMove\":\r\n      if (value === \"restart\")\r\n        newState.opponentTimeLeftToMove = newState.time * 60;\r\n      else\r\n        newState.opponentTimeLeftToMove =\r\n          newState.time * 60 - (value < 1 ? 1 : value);\r\n      return newState;\r\n    case \"setPause\":\r\n      newState.pause = value;\r\n      return newState;\r\n    case \"setReceiveDrawOffer\":\r\n      newState.receiveDrawOffer = value;\r\n      return newState;\r\n    case \"setMessage\":\r\n      const newMessages = [...newState.messages];\r\n      newMessages.push(value);\r\n      newState.messages = newMessages;\r\n      return newState;\r\n    case \"setGameResultDisplay\":\r\n      newState.gameResultDisplay = value;\r\n      return newState;\r\n    case \"resetGameState\":\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n"]},"metadata":{},"sourceType":"module"}