{"ast":null,"code":"import _toConsumableArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React,{useEffect,useRef,useContext,useState}from\"react\";import Piece from\"./Piece/Piece.jsx\";import\"./Board.scss\";import{useSelector,useDispatch,useStore}from\"react-redux\";import getSVGLocation from\"./getSVGLocation.js\";import{SocketContext,SetMoveTimerContext}from\"../../../App/context.js\";import PieceClass from\"../../../../pieces/piece.js\";import MoveHint from\"./MoveHint/MoveHint.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Board(){var dispatch=useDispatch();var store=useStore();var lang=useSelector(function(state){return state.appState.lang;});var board=useSelector(function(state){return state.boardState.board;});var targetDisplay=useSelector(function(state){return state.boardState.targetDisplay;});var boardSize=useSelector(function(state){return state.boardState.boardSize;});var currentPiece=useSelector(function(state){return state.boardState.currentPiece;});var getClicked=useSelector(function(state){return state.boardState.getClicked;});var draggable=useSelector(function(state){return state.boardState.draggable;});var _useState=useState(\"none\"),_useState2=_slicedToArray(_useState,2),warningDisplay=_useState2[0],setWarningDisplay=_useState2[1];var _useState3=useState(\"translate(0, 0)\"),_useState4=_slicedToArray(_useState3,2),warningTranslate=_useState4[0],setWarningTranslate=_useState4[1];var side=useSelector(function(state){return state.boardState.side;});var _useState5=useState(board),_useState6=_slicedToArray(_useState5,2),tmpBoard=_useState6[0],setTmpBoard=_useState6[1];var svgRef=useRef();var targetTranslate=useSelector(function(state){return state.boardState.targetTranslate;});var turnToMove=useSelector(function(state){return state.boardState.turnToMove;});var socket=useContext(SocketContext);var setMoveTimer=useContext(SetMoveTimerContext);var opponentInfo=useSelector(function(state){return state.gameState.opponentInfo;});var handleMouseDown=function handleMouseDown(event){var elementId=event.currentTarget.id;var row=+elementId[1],col=+elementId[2];var translate=board[row][col].translate;if(!currentPiece||board[row][col].side===currentPiece.side){if(currentPiece){var _currentPiece$positio=_slicedToArray(currentPiece.position,2),curRow=_currentPiece$positio[0],curCol=_currentPiece$positio[1];if(row!==curRow||curCol!==col){currentPiece.showMoveHints(\"off\",board);dispatch({type:\"setGetClicked\",value:false});}}board[row][col].showMoveHints(\"on\",board);dispatch({type:\"setBoard\",value:_toConsumableArray(board)});dispatch({type:\"setTargetDisplay\",value:\"inline\"});dispatch({type:\"setDraggable\",value:true});dispatch({type:\"setTargetTranslate\",value:translate});dispatch({type:\"setCurrentPiece\",value:board[row][col]});}};var updateBoard=function updateBoard(moveResult,_ref){var _ref2=_slicedToArray(_ref,2),curRow=_ref2[0],curCol=_ref2[1];if(moveResult&&!/translate/.test(moveResult)){var _moveResult=_slicedToArray(moveResult,3),capture=_moveResult[0],newRow=_moveResult[1],newCol=_moveResult[2];if(capture){dispatch({type:\"setCapturedPieces\",value:board[newRow][newCol]});}board[curRow][curCol]=0;board[newRow][newCol]=currentPiece;}else if(moveResult){setTimeout(function(){setWarningDisplay(\"none\");},400);setWarningDisplay(\"inline\");setWarningTranslate(moveResult);}};var handleOpponentMove=function handleOpponentMove(_ref3,_ref4){var _ref5=_slicedToArray(_ref3,2),curRow=_ref5[0],curCol=_ref5[1];var _ref6=_slicedToArray(_ref4,2),newRow=_ref6[0],newCol=_ref6[1];if(board[curRow][curCol]&&board[curRow][curCol].side===side[0]){tmpBoard=(_readOnlyError(\"tmpBoard\"),_toConsumableArray(board));tmpBoard[newRow][newCol]=tmpBoard[curRow][curCol];tmpBoard[curRow][curCol]=0;setTmpBoard(tmpBoard);board[curRow][curCol].animateMove([newRow,newCol],board,dispatch);dispatch({type:\"setTurnToMove\",value:true});socket.emit(\"finishMove\");}};var updateCurrentPiece=function updateCurrentPiece(moveResult){if(moveResult&&!/translate/.test(moveResult)||getClicked){currentPiece.showMoveHints(\"off\",board);dispatch({type:\"setTargetDisplay\",value:\"none\"});dispatch({type:\"setCurrentPiece\",value:null});dispatch({type:\"setGetClicked\",value:false});}else{dispatch({type:\"setGetClicked\",value:true});}};var handleMouseUp=function handleMouseUp(event){if(currentPiece){var moveResult=null;var svg=svgRef.current;var _getSVGLocation=getSVGLocation(+event.clientX,+event.clientY,svg),_getSVGLocation2=_slicedToArray(_getSVGLocation,2),x=_getSVGLocation2[0],y=_getSVGLocation2[1];var newCol=Math.floor(x/currentPiece.width);var newRow=Math.floor(y/currentPiece.width);var _currentPiece$positio2=_slicedToArray(currentPiece.position,2),curRow=_currentPiece$positio2[0],curCol=_currentPiece$positio2[1];var canMove=currentPiece.canMoveToNewPosition(newRow,newCol,board);if(turnToMove&&canMove&&!/translate/.test(canMove))moveResult=currentPiece.setPosition(canMove,newRow,newCol);else if(/translate/.test(canMove))moveResult=canMove;updateBoard(moveResult,[curRow,curCol]);dispatch({type:\"setDraggable\",value:false});updateCurrentPiece(moveResult);dispatch({type:\"setBoard\",value:_toConsumableArray(board)});if(moveResult&&!/translate/.test(moveResult)){dispatch({type:\"setTurnToMove\",value:!turnToMove});socket.emit(\"opponentMove\",moveResult,[curRow,curCol]);}}};var handleMouseMove=function handleMouseMove(event){var svg=svgRef.current;var _getSVGLocation3=getSVGLocation(+event.clientX,+event.clientY,svg),_getSVGLocation4=_slicedToArray(_getSVGLocation3,2),x=_getSVGLocation4[0],y=_getSVGLocation4[1];if(x>=0&&x<boardSize[0]&&y>=0&&y<boardSize[1]&&draggable){currentPiece.move(x,y);dispatch({type:\"setBoard\",value:_toConsumableArray(board)});}};var moveOnClick=function moveOnClick(currentPiece,x,y){var moveResult=null;var _currentPiece$positio3=_slicedToArray(currentPiece.position,2),curRow=_currentPiece$positio3[0],curCol=_currentPiece$positio3[1];var newCol=Math.floor(x/currentPiece.width);var newRow=Math.floor(y/currentPiece.width);var canMove=currentPiece.canMoveToNewPosition(newRow,newCol,board);if(turnToMove&&canMove&&!/translate/.test(canMove))moveResult=currentPiece.setPosition(canMove,newRow,newCol);updateBoard(moveResult,[curRow,curCol]);currentPiece.showMoveHints(\"off\",board);dispatch({type:\"setTargetDisplay\",value:\"none\"});dispatch({type:\"setCurrentPiece\",value:null});dispatch({type:\"setBoard\",value:_toConsumableArray(board)});if(moveResult&&!/translate/.test(moveResult)){dispatch({type:\"setTurnToMove\",value:!turnToMove});socket.emit(\"opponentMove\",moveResult,[curRow,curCol]);socket.emit(\"finishMove\");}};var handleClick=function handleClick(event){if(currentPiece){var svg=svgRef.current;var _getSVGLocation5=getSVGLocation(+event.clientX,+event.clientY,svg),_getSVGLocation6=_slicedToArray(_getSVGLocation5,2),x=_getSVGLocation6[0],y=_getSVGLocation6[1];if(!event.target.id)moveOnClick(currentPiece,x,y);}};var constructNewPiecesWidth=function constructNewPiecesWidth(width){var newBoard=board.map(function(row){var newRow=row.map(function(piece){if(piece){var _piece$position=_slicedToArray(piece.position,2),_row=_piece$position[0],col=_piece$position[1];piece.width=width;piece.translate=\"translate(\".concat(width*col,\", \").concat(width*_row,\")\");return piece;}return 0;});return newRow;});return newBoard;};var handleResize=function handleResize(){var width=document.querySelector(\".board-container\").offsetWidth;dispatch({type:\"setBoardSize\",value:[width,width/(521/577)]});dispatch({type:\"setBoard\",value:constructNewPiecesWidth(width/9)});};useEffect(function(){var width=document.querySelector(\".board-container\").offsetWidth;dispatch({type:\"setBoardSize\",value:[width,width/(521/577)]});dispatch({type:\"setBoard\",value:constructNewPiecesWidth(width/9)});window.ondragstart=function(){return false;};socket.on(\"setTimer\",function(){var turnToMove=store.getState().boardState.turnToMove;setMoveTimer(turnToMove,false,dispatch);});return function(){socket.removeAllListeners(\"setTimer\");};},[]);useEffect(function(){window.onmousemove=handleMouseMove;window.onmouseup=handleMouseUp;window.onresize=handleResize;socket.on(\"move\",function(_ref7,_ref8){var _ref9=_slicedToArray(_ref7,2),curRow=_ref9[0],curCol=_ref9[1];var _ref10=_slicedToArray(_ref8,2),newRow=_ref10[0],newCol=_ref10[1];handleOpponentMove([curRow,curCol],[newRow,newCol]);});return function(){window.onmouseup=null;window.onmousemove=null;window.onresize=null;socket.removeAllListeners(\"move\");};});useEffect(function(){var lostReason=PieceClass.isLost(tmpBoard,side[1]);if(lostReason){var message=lostReason;socket.emit(\"gameFinish\",[\"Won\",lostReason]);if(lang!==\"English\")message=lostReason===\"Checkmate\"?\"Chiếu Bí\":\"Hết Cờ\";dispatch({type:\"setGameResult\",value:\"Lose\"});dispatch({type:\"setMessage\",value:{type:\"game result message\",winner:\"\".concat(opponentInfo.playername,\" \").concat(lang===\"English\"?\"Won\":\"Thắng\",\" - \"),reason:message,className:\"game-message\"}});setMoveTimer(null,true,dispatch);return;}},[tmpBoard]);return/*#__PURE__*/_jsxs(\"svg\",{width:boardSize[0],height:boardSize[1],onClick:handleClick,style:{backgroundImage:'url(\"/images/Board/board.jpg\")'},ref:svgRef,children:[/*#__PURE__*/_jsx(\"image\",{href:\"/images/Target_Icon/target.gif\",width:boardSize[0]/9-3,height:boardSize[0]/9-3,style:{display:targetDisplay},transform:targetTranslate}),/*#__PURE__*/_jsx(MoveHint,{board:board,boardWidth:boardSize[0]}),/*#__PURE__*/_jsx(Piece,{board:board,handleMouseDown:handleMouseDown,side:side,turnToMove:turnToMove}),/*#__PURE__*/_jsx(\"image\",{href:\"/images/Legal_Capture_Icon/legal_capture.png\",transform:warningTranslate,style:{display:warningDisplay,opacity:\"0.6\"},width:boardSize[0]/9-3,height:boardSize[0]/9-3})]});}export default/*#__PURE__*/React.memo(Board);","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Board/Board.jsx"],"names":["React","useEffect","useRef","useContext","useState","Piece","useSelector","useDispatch","useStore","getSVGLocation","SocketContext","SetMoveTimerContext","PieceClass","MoveHint","Board","dispatch","store","lang","state","appState","board","boardState","targetDisplay","boardSize","currentPiece","getClicked","draggable","warningDisplay","setWarningDisplay","warningTranslate","setWarningTranslate","side","tmpBoard","setTmpBoard","svgRef","targetTranslate","turnToMove","socket","setMoveTimer","opponentInfo","gameState","handleMouseDown","event","elementId","currentTarget","id","row","col","translate","position","curRow","curCol","showMoveHints","type","value","updateBoard","moveResult","test","capture","newRow","newCol","setTimeout","handleOpponentMove","animateMove","emit","updateCurrentPiece","handleMouseUp","svg","current","clientX","clientY","x","y","Math","floor","width","canMove","canMoveToNewPosition","setPosition","handleMouseMove","move","moveOnClick","handleClick","target","constructNewPiecesWidth","newBoard","map","piece","handleResize","document","querySelector","offsetWidth","window","ondragstart","on","getState","removeAllListeners","onmousemove","onmouseup","onresize","lostReason","isLost","message","winner","playername","reason","className","backgroundImage","display","opacity","memo"],"mappings":"qeAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,UAAnC,CAA+CC,QAA/C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,MAAO,cAAP,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,QAAnC,KAAmD,aAAnD,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,aAAT,CAAwBC,mBAAxB,KAAmD,yBAAnD,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,wFAEA,QAASC,CAAAA,KAAT,EAAiB,CACf,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,GAAMS,CAAAA,KAAK,CAAGR,QAAQ,EAAtB,CACA,GAAMS,CAAAA,IAAI,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeF,IAA1B,EAAD,CAAxB,CACA,GAAMG,CAAAA,KAAK,CAAGd,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBD,KAA5B,EAAD,CAAzB,CACA,GAAME,CAAAA,aAAa,CAAGhB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBC,aAA5B,EAAD,CAAjC,CACA,GAAMC,CAAAA,SAAS,CAAGjB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBE,SAA5B,EAAD,CAA7B,CACA,GAAMC,CAAAA,YAAY,CAAGlB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBG,YAA5B,EAAD,CAAhC,CACA,GAAMC,CAAAA,UAAU,CAAGnB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBI,UAA5B,EAAD,CAA9B,CACA,GAAMC,CAAAA,SAAS,CAAGpB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBK,SAA5B,EAAD,CAA7B,CATe,cAU6BtB,QAAQ,CAAC,MAAD,CAVrC,wCAURuB,cAVQ,eAUQC,iBAVR,8BAWiCxB,QAAQ,CAAC,iBAAD,CAXzC,yCAWRyB,gBAXQ,eAWUC,mBAXV,eAYf,GAAMC,CAAAA,IAAI,CAAGzB,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBU,IAA5B,EAAD,CAAxB,CAZe,eAaiB3B,QAAQ,CAACgB,KAAD,CAbzB,yCAaRY,QAbQ,eAaEC,WAbF,eAcf,GAAMC,CAAAA,MAAM,CAAGhC,MAAM,EAArB,CACA,GAAMiC,CAAAA,eAAe,CAAG7B,WAAW,CACjC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBc,eAA5B,EADiC,CAAnC,CAGA,GAAMC,CAAAA,UAAU,CAAG9B,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,UAAN,CAAiBe,UAA5B,EAAD,CAA9B,CACA,GAAMC,CAAAA,MAAM,CAAGlC,UAAU,CAACO,aAAD,CAAzB,CACA,GAAM4B,CAAAA,YAAY,CAAGnC,UAAU,CAACQ,mBAAD,CAA/B,CAEA,GAAM4B,CAAAA,YAAY,CAAGjC,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACsB,SAAN,CAAgBD,YAA3B,EAAD,CAAhC,CAEA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,aAAN,CAAoBC,EAAtC,CADiC,GAE1BC,CAAAA,GAF0B,CAEb,CAACH,SAAS,CAAC,CAAD,CAFG,CAErBI,GAFqB,CAEE,CAACJ,SAAS,CAAC,CAAD,CAFZ,CAGjC,GAAMK,CAAAA,SAAS,CAAG5B,KAAK,CAAC0B,GAAD,CAAL,CAAWC,GAAX,EAAgBC,SAAlC,CACA,GAAI,CAACxB,YAAD,EAAiBJ,KAAK,CAAC0B,GAAD,CAAL,CAAWC,GAAX,EAAgBhB,IAAhB,GAAyBP,YAAY,CAACO,IAA3D,CAAiE,CAC/D,GAAIP,YAAJ,CAAkB,0CACSA,YAAY,CAACyB,QADtB,IACTC,MADS,0BACDC,MADC,0BAEhB,GAAIL,GAAG,GAAKI,MAAR,EAAkBC,MAAM,GAAKJ,GAAjC,CAAsC,CACpCvB,YAAY,CAAC4B,aAAb,CAA2B,KAA3B,CAAkChC,KAAlC,EACAL,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,KAAhC,CAAD,CAAR,CACD,CACF,CACDlC,KAAK,CAAC0B,GAAD,CAAL,CAAWC,GAAX,EAAgBK,aAAhB,CAA8B,IAA9B,CAAoChC,KAApC,EACAL,QAAQ,CAAC,CAAEsC,IAAI,CAAE,UAAR,CAAoBC,KAAK,oBAAMlC,KAAN,CAAzB,CAAD,CAAR,CACAL,QAAQ,CAAC,CAAEsC,IAAI,CAAE,kBAAR,CAA4BC,KAAK,CAAE,QAAnC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,IAA/B,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,oBAAR,CAA8BC,KAAK,CAAEN,SAArC,CAAD,CAAR,CACAjC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,iBAAR,CAA2BC,KAAK,CAAElC,KAAK,CAAC0B,GAAD,CAAL,CAAWC,GAAX,CAAlC,CAAD,CAAR,CACD,CACF,CAnBD,CAqBA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,MAAkC,kCAApBN,MAAoB,UAAZC,MAAY,UACpD,GAAIK,UAAU,EAAI,CAAC,YAAYC,IAAZ,CAAiBD,UAAjB,CAAnB,CAAiD,gCACbA,UADa,IACxCE,OADwC,gBAC/BC,MAD+B,gBACvBC,MADuB,gBAE/C,GAAIF,OAAJ,CAAa,CACX3C,QAAQ,CAAC,CAAEsC,IAAI,CAAE,mBAAR,CAA6BC,KAAK,CAAElC,KAAK,CAACuC,MAAD,CAAL,CAAcC,MAAd,CAApC,CAAD,CAAR,CACD,CACDxC,KAAK,CAAC8B,MAAD,CAAL,CAAcC,MAAd,EAAwB,CAAxB,CACA/B,KAAK,CAACuC,MAAD,CAAL,CAAcC,MAAd,EAAwBpC,YAAxB,CACD,CAPD,IAOO,IAAIgC,UAAJ,CAAgB,CACrBK,UAAU,CAAC,UAAM,CACfjC,iBAAiB,CAAC,MAAD,CAAjB,CACD,CAFS,CAEP,GAFO,CAAV,CAGAA,iBAAiB,CAAC,QAAD,CAAjB,CACAE,mBAAmB,CAAC0B,UAAD,CAAnB,CACD,CACF,CAfD,CAiBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,aAAwC,mCAAtCZ,MAAsC,UAA9BC,MAA8B,4CAApBQ,MAAoB,UAAZC,MAAY,UACjE,GAAIxC,KAAK,CAAC8B,MAAD,CAAL,CAAcC,MAAd,GAAyB/B,KAAK,CAAC8B,MAAD,CAAL,CAAcC,MAAd,EAAsBpB,IAAtB,GAA+BA,IAAI,CAAC,CAAD,CAAhE,CAAqE,CACnEC,QAAQ,gDAAOZ,KAAP,EAAR,CACAY,QAAQ,CAAC2B,MAAD,CAAR,CAAiBC,MAAjB,EAA2B5B,QAAQ,CAACkB,MAAD,CAAR,CAAiBC,MAAjB,CAA3B,CACAnB,QAAQ,CAACkB,MAAD,CAAR,CAAiBC,MAAjB,EAA2B,CAA3B,CACAlB,WAAW,CAACD,QAAD,CAAX,CACAZ,KAAK,CAAC8B,MAAD,CAAL,CAAcC,MAAd,EAAsBY,WAAtB,CAAkC,CAACJ,MAAD,CAASC,MAAT,CAAlC,CAAoDxC,KAApD,CAA2DL,QAA3D,EACAA,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,IAAhC,CAAD,CAAR,CACAjB,MAAM,CAAC2B,IAAP,CAAY,YAAZ,EACD,CACF,CAVD,CAYA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACT,UAAD,CAAgB,CACzC,GAAKA,UAAU,EAAI,CAAC,YAAYC,IAAZ,CAAiBD,UAAjB,CAAhB,EAAiD/B,UAArD,CAAiE,CAC/DD,YAAY,CAAC4B,aAAb,CAA2B,KAA3B,CAAkChC,KAAlC,EACAL,QAAQ,CAAC,CAAEsC,IAAI,CAAE,kBAAR,CAA4BC,KAAK,CAAE,MAAnC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,iBAAR,CAA2BC,KAAK,CAAE,IAAlC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,KAAhC,CAAD,CAAR,CACD,CALD,IAKO,CACLvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,IAAhC,CAAD,CAAR,CACD,CACF,CATD,CAWA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACxB,KAAD,CAAW,CAC/B,GAAIlB,YAAJ,CAAkB,CAChB,GAAIgC,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAMW,CAAAA,GAAG,CAAGjC,MAAM,CAACkC,OAAnB,CAFgB,oBAGD3D,cAAc,CAAC,CAACiC,KAAK,CAAC2B,OAAR,CAAiB,CAAC3B,KAAK,CAAC4B,OAAxB,CAAiCH,GAAjC,CAHb,oDAGTI,CAHS,qBAGNC,CAHM,qBAIhB,GAAMZ,CAAAA,MAAM,CAAGa,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAG/C,YAAY,CAACmD,KAA5B,CAAf,CACA,GAAMhB,CAAAA,MAAM,CAAGc,IAAI,CAACC,KAAL,CAAWF,CAAC,CAAGhD,YAAY,CAACmD,KAA5B,CAAf,CALgB,0CAMSnD,YAAY,CAACyB,QANtB,IAMTC,MANS,2BAMDC,MANC,2BAOhB,GAAMyB,CAAAA,OAAO,CAAGpD,YAAY,CAACqD,oBAAb,CAAkClB,MAAlC,CAA0CC,MAA1C,CAAkDxC,KAAlD,CAAhB,CACA,GAAIgB,UAAU,EAAIwC,OAAd,EAAyB,CAAC,YAAYnB,IAAZ,CAAiBmB,OAAjB,CAA9B,CACEpB,UAAU,CAAGhC,YAAY,CAACsD,WAAb,CAAyBF,OAAzB,CAAkCjB,MAAlC,CAA0CC,MAA1C,CAAb,CADF,IAEK,IAAI,YAAYH,IAAZ,CAAiBmB,OAAjB,CAAJ,CAA+BpB,UAAU,CAAGoB,OAAb,CACpCrB,WAAW,CAACC,UAAD,CAAa,CAACN,MAAD,CAASC,MAAT,CAAb,CAAX,CACApC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,KAA/B,CAAD,CAAR,CACAW,kBAAkB,CAACT,UAAD,CAAlB,CACAzC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,UAAR,CAAoBC,KAAK,oBAAMlC,KAAN,CAAzB,CAAD,CAAR,CACA,GAAIoC,UAAU,EAAI,CAAC,YAAYC,IAAZ,CAAiBD,UAAjB,CAAnB,CAAiD,CAC/CzC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,CAAClB,UAAjC,CAAD,CAAR,CACAC,MAAM,CAAC2B,IAAP,CAAY,cAAZ,CAA4BR,UAA5B,CAAwC,CAACN,MAAD,CAASC,MAAT,CAAxC,EACD,CACF,CACF,CArBD,CAuBA,GAAM4B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACrC,KAAD,CAAW,CACjC,GAAMyB,CAAAA,GAAG,CAAGjC,MAAM,CAACkC,OAAnB,CADiC,qBAElB3D,cAAc,CAAC,CAACiC,KAAK,CAAC2B,OAAR,CAAiB,CAAC3B,KAAK,CAAC4B,OAAxB,CAAiCH,GAAjC,CAFI,qDAE1BI,CAF0B,qBAEvBC,CAFuB,qBAGjC,GAAID,CAAC,EAAI,CAAL,EAAUA,CAAC,CAAGhD,SAAS,CAAC,CAAD,CAAvB,EAA8BiD,CAAC,EAAI,CAAnC,EAAwCA,CAAC,CAAGjD,SAAS,CAAC,CAAD,CAArD,EAA4DG,SAAhE,CAA2E,CACzEF,YAAY,CAACwD,IAAb,CAAkBT,CAAlB,CAAqBC,CAArB,EACAzD,QAAQ,CAAC,CAAEsC,IAAI,CAAE,UAAR,CAAoBC,KAAK,oBAAMlC,KAAN,CAAzB,CAAD,CAAR,CACD,CACF,CAPD,CASA,GAAM6D,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACzD,YAAD,CAAe+C,CAAf,CAAkBC,CAAlB,CAAwB,CAC1C,GAAIhB,CAAAA,UAAU,CAAG,IAAjB,CAD0C,0CAEjBhC,YAAY,CAACyB,QAFI,IAEnCC,MAFmC,2BAE3BC,MAF2B,2BAG1C,GAAMS,CAAAA,MAAM,CAAGa,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAG/C,YAAY,CAACmD,KAA5B,CAAf,CACA,GAAMhB,CAAAA,MAAM,CAAGc,IAAI,CAACC,KAAL,CAAWF,CAAC,CAAGhD,YAAY,CAACmD,KAA5B,CAAf,CACA,GAAMC,CAAAA,OAAO,CAAGpD,YAAY,CAACqD,oBAAb,CAAkClB,MAAlC,CAA0CC,MAA1C,CAAkDxC,KAAlD,CAAhB,CACA,GAAIgB,UAAU,EAAIwC,OAAd,EAAyB,CAAC,YAAYnB,IAAZ,CAAiBmB,OAAjB,CAA9B,CACEpB,UAAU,CAAGhC,YAAY,CAACsD,WAAb,CAAyBF,OAAzB,CAAkCjB,MAAlC,CAA0CC,MAA1C,CAAb,CACFL,WAAW,CAACC,UAAD,CAAa,CAACN,MAAD,CAASC,MAAT,CAAb,CAAX,CACA3B,YAAY,CAAC4B,aAAb,CAA2B,KAA3B,CAAkChC,KAAlC,EACAL,QAAQ,CAAC,CAAEsC,IAAI,CAAE,kBAAR,CAA4BC,KAAK,CAAE,MAAnC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,iBAAR,CAA2BC,KAAK,CAAE,IAAlC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,UAAR,CAAoBC,KAAK,oBAAMlC,KAAN,CAAzB,CAAD,CAAR,CACA,GAAIoC,UAAU,EAAI,CAAC,YAAYC,IAAZ,CAAiBD,UAAjB,CAAnB,CAAiD,CAC/CzC,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,CAAClB,UAAjC,CAAD,CAAR,CACAC,MAAM,CAAC2B,IAAP,CAAY,cAAZ,CAA4BR,UAA5B,CAAwC,CAACN,MAAD,CAASC,MAAT,CAAxC,EACAd,MAAM,CAAC2B,IAAP,CAAY,YAAZ,EACD,CACF,CAlBD,CAoBA,GAAMkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACxC,KAAD,CAAW,CAC7B,GAAIlB,YAAJ,CAAkB,CAChB,GAAM2C,CAAAA,GAAG,CAAGjC,MAAM,CAACkC,OAAnB,CADgB,qBAED3D,cAAc,CAAC,CAACiC,KAAK,CAAC2B,OAAR,CAAiB,CAAC3B,KAAK,CAAC4B,OAAxB,CAAiCH,GAAjC,CAFb,qDAETI,CAFS,qBAENC,CAFM,qBAGhB,GAAI,CAAC9B,KAAK,CAACyC,MAAN,CAAatC,EAAlB,CAAsBoC,WAAW,CAACzD,YAAD,CAAe+C,CAAf,CAAkBC,CAAlB,CAAX,CACvB,CACF,CAND,CAQA,GAAMY,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACT,KAAD,CAAW,CACzC,GAAMU,CAAAA,QAAQ,CAAGjE,KAAK,CAACkE,GAAN,CAAU,SAACxC,GAAD,CAAS,CAClC,GAAMa,CAAAA,MAAM,CAAGb,GAAG,CAACwC,GAAJ,CAAQ,SAACC,KAAD,CAAW,CAChC,GAAIA,KAAJ,CAAW,oCACUA,KAAK,CAACtC,QADhB,IACFH,IADE,oBACGC,GADH,oBAETwC,KAAK,CAACZ,KAAN,CAAcA,KAAd,CACAY,KAAK,CAACvC,SAAN,qBAA+B2B,KAAK,CAAG5B,GAAvC,cAA+C4B,KAAK,CAAG7B,IAAvD,MACA,MAAOyC,CAAAA,KAAP,CACD,CACD,MAAO,EAAP,CACD,CARc,CAAf,CASA,MAAO5B,CAAAA,MAAP,CACD,CAXgB,CAAjB,CAYA,MAAO0B,CAAAA,QAAP,CACD,CAdD,CAgBA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMb,CAAAA,KAAK,CAAGc,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,WAAzD,CACA5E,QAAQ,CAAC,CACPsC,IAAI,CAAE,cADC,CAEPC,KAAK,CAAE,CAACqB,KAAD,CAAQA,KAAK,EAAI,IAAM,GAAV,CAAb,CAFA,CAAD,CAAR,CAIA5D,QAAQ,CAAC,CACPsC,IAAI,CAAE,UADC,CAEPC,KAAK,CAAE8B,uBAAuB,CAACT,KAAK,CAAG,CAAT,CAFvB,CAAD,CAAR,CAID,CAVD,CAYA1E,SAAS,CAAC,UAAM,CACd,GAAM0E,CAAAA,KAAK,CAAGc,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,WAAzD,CACA5E,QAAQ,CAAC,CAAEsC,IAAI,CAAE,cAAR,CAAwBC,KAAK,CAAE,CAACqB,KAAD,CAAQA,KAAK,EAAI,IAAM,GAAV,CAAb,CAA/B,CAAD,CAAR,CACA5D,QAAQ,CAAC,CAAEsC,IAAI,CAAE,UAAR,CAAoBC,KAAK,CAAE8B,uBAAuB,CAACT,KAAK,CAAG,CAAT,CAAlD,CAAD,CAAR,CACAiB,MAAM,CAACC,WAAP,CAAqB,iBAAM,MAAN,EAArB,CAEAxD,MAAM,CAACyD,EAAP,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAM1D,CAAAA,UAAU,CAAGpB,KAAK,CAAC+E,QAAN,GAAiB1E,UAAjB,CAA4Be,UAA/C,CACAE,YAAY,CAACF,UAAD,CAAa,KAAb,CAAoBrB,QAApB,CAAZ,CACD,CAHD,EAKA,MAAO,WAAM,CACXsB,MAAM,CAAC2D,kBAAP,CAA0B,UAA1B,EACD,CAFD,CAGD,CAdQ,CAcN,EAdM,CAAT,CAgBA/F,SAAS,CAAC,UAAM,CACd2F,MAAM,CAACK,WAAP,CAAqBlB,eAArB,CACAa,MAAM,CAACM,SAAP,CAAmBhC,aAAnB,CACA0B,MAAM,CAACO,QAAP,CAAkBX,YAAlB,CACAnD,MAAM,CAACyD,EAAP,CAAU,MAAV,CAAkB,qBAAwC,mCAAtC5C,MAAsC,UAA9BC,MAA8B,6CAApBQ,MAAoB,WAAZC,MAAY,WACxDE,kBAAkB,CAAC,CAACZ,MAAD,CAASC,MAAT,CAAD,CAAmB,CAACQ,MAAD,CAASC,MAAT,CAAnB,CAAlB,CACD,CAFD,EAIA,MAAO,WAAM,CACXgC,MAAM,CAACM,SAAP,CAAmB,IAAnB,CACAN,MAAM,CAACK,WAAP,CAAqB,IAArB,CACAL,MAAM,CAACO,QAAP,CAAkB,IAAlB,CACA9D,MAAM,CAAC2D,kBAAP,CAA0B,MAA1B,EACD,CALD,CAMD,CAdQ,CAAT,CAgBA/F,SAAS,CAAC,UAAM,CACd,GAAMmG,CAAAA,UAAU,CAAGxF,UAAU,CAACyF,MAAX,CAAkBrE,QAAlB,CAA4BD,IAAI,CAAC,CAAD,CAAhC,CAAnB,CACA,GAAIqE,UAAJ,CAAgB,CACd,GAAIE,CAAAA,OAAO,CAAGF,UAAd,CACA/D,MAAM,CAAC2B,IAAP,CAAY,YAAZ,CAA0B,CAAC,KAAD,CAAQoC,UAAR,CAA1B,EACA,GAAInF,IAAI,GAAK,SAAb,CACEqF,OAAO,CAAGF,UAAU,GAAK,WAAf,CAA6B,UAA7B,CAA0C,QAApD,CACFrF,QAAQ,CAAC,CAAEsC,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,MAAhC,CAAD,CAAR,CACAvC,QAAQ,CAAC,CACPsC,IAAI,CAAE,YADC,CAEPC,KAAK,CAAE,CACLD,IAAI,CAAE,qBADD,CAELkD,MAAM,WAAKhE,YAAY,CAACiE,UAAlB,aACJvF,IAAI,GAAK,SAAT,CAAqB,KAArB,CAA6B,OADzB,OAFD,CAKLwF,MAAM,CAAEH,OALH,CAMLI,SAAS,CAAE,cANN,CAFA,CAAD,CAAR,CAWApE,YAAY,CAAC,IAAD,CAAO,IAAP,CAAavB,QAAb,CAAZ,CACA,OACD,CACF,CAtBQ,CAsBN,CAACiB,QAAD,CAtBM,CAAT,CAwBA,mBACE,aACE,KAAK,CAAET,SAAS,CAAC,CAAD,CADlB,CAEE,MAAM,CAAEA,SAAS,CAAC,CAAD,CAFnB,CAGE,OAAO,CAAE2D,WAHX,CAIE,KAAK,CAAE,CACLyB,eAAe,CAAE,gCADZ,CAJT,CAOE,GAAG,CAAEzE,MAPP,wBASE,cACE,IAAI,CAAC,gCADP,CAEE,KAAK,CAAEX,SAAS,CAAC,CAAD,CAAT,CAAe,CAAf,CAAmB,CAF5B,CAGE,MAAM,CAAEA,SAAS,CAAC,CAAD,CAAT,CAAe,CAAf,CAAmB,CAH7B,CAIE,KAAK,CAAE,CAAEqF,OAAO,CAAEtF,aAAX,CAJT,CAKE,SAAS,CAAEa,eALb,EATF,cAgBE,KAAC,QAAD,EAAU,KAAK,CAAEf,KAAjB,CAAwB,UAAU,CAAEG,SAAS,CAAC,CAAD,CAA7C,EAhBF,cAiBE,KAAC,KAAD,EACE,KAAK,CAAEH,KADT,CAEE,eAAe,CAAEqB,eAFnB,CAGE,IAAI,CAAEV,IAHR,CAIE,UAAU,CAAEK,UAJd,EAjBF,cAwBE,cACE,IAAI,CAAC,8CADP,CAEE,SAAS,CAAEP,gBAFb,CAGE,KAAK,CAAE,CAAE+E,OAAO,CAAEjF,cAAX,CAA2BkF,OAAO,CAAE,KAApC,CAHT,CAIE,KAAK,CAAEtF,SAAS,CAAC,CAAD,CAAT,CAAe,CAAf,CAAmB,CAJ5B,CAKE,MAAM,CAAEA,SAAS,CAAC,CAAD,CAAT,CAAe,CAAf,CAAmB,CAL7B,EAxBF,GADF,CAkCD,CAED,2BAAevB,KAAK,CAAC8G,IAAN,CAAWhG,KAAX,CAAf","sourcesContent":["import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport Piece from \"./Piece/Piece.jsx\";\r\nimport \"./Board.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport getSVGLocation from \"./getSVGLocation.js\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\nimport PieceClass from \"../../../../pieces/piece.js\";\r\nimport MoveHint from \"./MoveHint/MoveHint.jsx\";\r\n\r\nfunction Board() {\r\n  const dispatch = useDispatch();\r\n  const store = useStore();\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const board = useSelector((state) => state.boardState.board);\r\n  const targetDisplay = useSelector((state) => state.boardState.targetDisplay);\r\n  const boardSize = useSelector((state) => state.boardState.boardSize);\r\n  const currentPiece = useSelector((state) => state.boardState.currentPiece);\r\n  const getClicked = useSelector((state) => state.boardState.getClicked);\r\n  const draggable = useSelector((state) => state.boardState.draggable);\r\n  const [warningDisplay, setWarningDisplay] = useState(\"none\");\r\n  const [warningTranslate, setWarningTranslate] = useState(\"translate(0, 0)\");\r\n  const side = useSelector((state) => state.boardState.side);\r\n  const [tmpBoard, setTmpBoard] = useState(board);\r\n  const svgRef = useRef();\r\n  const targetTranslate = useSelector(\r\n    (state) => state.boardState.targetTranslate\r\n  );\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  const handleMouseDown = (event) => {\r\n    const elementId = event.currentTarget.id;\r\n    const [row, col] = [+elementId[1], +elementId[2]];\r\n    const translate = board[row][col].translate;\r\n    if (!currentPiece || board[row][col].side === currentPiece.side) {\r\n      if (currentPiece) {\r\n        const [curRow, curCol] = currentPiece.position;\r\n        if (row !== curRow || curCol !== col) {\r\n          currentPiece.showMoveHints(\"off\", board);\r\n          dispatch({ type: \"setGetClicked\", value: false });\r\n        }\r\n      }\r\n      board[row][col].showMoveHints(\"on\", board);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n      dispatch({ type: \"setTargetDisplay\", value: \"inline\" });\r\n      dispatch({ type: \"setDraggable\", value: true });\r\n      dispatch({ type: \"setTargetTranslate\", value: translate });\r\n      dispatch({ type: \"setCurrentPiece\", value: board[row][col] });\r\n    }\r\n  };\r\n\r\n  const updateBoard = (moveResult, [curRow, curCol]) => {\r\n    if (moveResult && !/translate/.test(moveResult)) {\r\n      const [capture, newRow, newCol] = moveResult;\r\n      if (capture) {\r\n        dispatch({ type: \"setCapturedPieces\", value: board[newRow][newCol] });\r\n      }\r\n      board[curRow][curCol] = 0;\r\n      board[newRow][newCol] = currentPiece;\r\n    } else if (moveResult) {\r\n      setTimeout(() => {\r\n        setWarningDisplay(\"none\");\r\n      }, 400);\r\n      setWarningDisplay(\"inline\");\r\n      setWarningTranslate(moveResult);\r\n    }\r\n  };\r\n\r\n  const handleOpponentMove = ([curRow, curCol], [newRow, newCol]) => {\r\n    if (board[curRow][curCol] && board[curRow][curCol].side === side[0]) {\r\n      tmpBoard = [...board];\r\n      tmpBoard[newRow][newCol] = tmpBoard[curRow][curCol];\r\n      tmpBoard[curRow][curCol] = 0;\r\n      setTmpBoard(tmpBoard);\r\n      board[curRow][curCol].animateMove([newRow, newCol], board, dispatch);\r\n      dispatch({ type: \"setTurnToMove\", value: true });\r\n      socket.emit(\"finishMove\");\r\n    }\r\n  };\r\n\r\n  const updateCurrentPiece = (moveResult) => {\r\n    if ((moveResult && !/translate/.test(moveResult)) || getClicked) {\r\n      currentPiece.showMoveHints(\"off\", board);\r\n      dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n      dispatch({ type: \"setCurrentPiece\", value: null });\r\n      dispatch({ type: \"setGetClicked\", value: false });\r\n    } else {\r\n      dispatch({ type: \"setGetClicked\", value: true });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (event) => {\r\n    if (currentPiece) {\r\n      let moveResult = null;\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      const newCol = Math.floor(x / currentPiece.width);\r\n      const newRow = Math.floor(y / currentPiece.width);\r\n      const [curRow, curCol] = currentPiece.position;\r\n      const canMove = currentPiece.canMoveToNewPosition(newRow, newCol, board);\r\n      if (turnToMove && canMove && !/translate/.test(canMove))\r\n        moveResult = currentPiece.setPosition(canMove, newRow, newCol);\r\n      else if (/translate/.test(canMove)) moveResult = canMove;\r\n      updateBoard(moveResult, [curRow, curCol]);\r\n      dispatch({ type: \"setDraggable\", value: false });\r\n      updateCurrentPiece(moveResult);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n      if (moveResult && !/translate/.test(moveResult)) {\r\n        dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n        socket.emit(\"opponentMove\", moveResult, [curRow, curCol]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const svg = svgRef.current;\r\n    const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n    if (x >= 0 && x < boardSize[0] && y >= 0 && y < boardSize[1] && draggable) {\r\n      currentPiece.move(x, y);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n    }\r\n  };\r\n\r\n  const moveOnClick = (currentPiece, x, y) => {\r\n    let moveResult = null;\r\n    const [curRow, curCol] = currentPiece.position;\r\n    const newCol = Math.floor(x / currentPiece.width);\r\n    const newRow = Math.floor(y / currentPiece.width);\r\n    const canMove = currentPiece.canMoveToNewPosition(newRow, newCol, board);\r\n    if (turnToMove && canMove && !/translate/.test(canMove))\r\n      moveResult = currentPiece.setPosition(canMove, newRow, newCol);\r\n    updateBoard(moveResult, [curRow, curCol]);\r\n    currentPiece.showMoveHints(\"off\", board);\r\n    dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n    dispatch({ type: \"setCurrentPiece\", value: null });\r\n    dispatch({ type: \"setBoard\", value: [...board] });\r\n    if (moveResult && !/translate/.test(moveResult)) {\r\n      dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n      socket.emit(\"opponentMove\", moveResult, [curRow, curCol]);\r\n      socket.emit(\"finishMove\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    if (currentPiece) {\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      if (!event.target.id) moveOnClick(currentPiece, x, y);\r\n    }\r\n  };\r\n\r\n  const constructNewPiecesWidth = (width) => {\r\n    const newBoard = board.map((row) => {\r\n      const newRow = row.map((piece) => {\r\n        if (piece) {\r\n          const [row, col] = piece.position;\r\n          piece.width = width;\r\n          piece.translate = `translate(${width * col}, ${width * row})`;\r\n          return piece;\r\n        }\r\n        return 0;\r\n      });\r\n      return newRow;\r\n    });\r\n    return newBoard;\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({\r\n      type: \"setBoardSize\",\r\n      value: [width, width / (521 / 577)],\r\n    });\r\n    dispatch({\r\n      type: \"setBoard\",\r\n      value: constructNewPiecesWidth(width / 9),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({ type: \"setBoardSize\", value: [width, width / (521 / 577)] });\r\n    dispatch({ type: \"setBoard\", value: constructNewPiecesWidth(width / 9) });\r\n    window.ondragstart = () => false;\r\n\r\n    socket.on(\"setTimer\", () => {\r\n      const turnToMove = store.getState().boardState.turnToMove;\r\n      setMoveTimer(turnToMove, false, dispatch);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"setTimer\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.onmousemove = handleMouseMove;\r\n    window.onmouseup = handleMouseUp;\r\n    window.onresize = handleResize;\r\n    socket.on(\"move\", ([curRow, curCol], [newRow, newCol]) => {\r\n      handleOpponentMove([curRow, curCol], [newRow, newCol]);\r\n    });\r\n\r\n    return () => {\r\n      window.onmouseup = null;\r\n      window.onmousemove = null;\r\n      window.onresize = null;\r\n      socket.removeAllListeners(\"move\");\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const lostReason = PieceClass.isLost(tmpBoard, side[1]);\r\n    if (lostReason) {\r\n      let message = lostReason;\r\n      socket.emit(\"gameFinish\", [\"Won\", lostReason]);\r\n      if (lang !== \"English\")\r\n        message = lostReason === \"Checkmate\" ? \"Chiếu Bí\" : \"Hết Cờ\";\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponentInfo.playername} ${\r\n            lang === \"English\" ? \"Won\" : \"Thắng\"\r\n          } - `,\r\n          reason: message,\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      return;\r\n    }\r\n  }, [tmpBoard]);\r\n\r\n  return (\r\n    <svg\r\n      width={boardSize[0]}\r\n      height={boardSize[1]}\r\n      onClick={handleClick}\r\n      style={{\r\n        backgroundImage: 'url(\"/images/Board/board.jpg\")',\r\n      }}\r\n      ref={svgRef}\r\n    >\r\n      <image\r\n        href=\"/images/Target_Icon/target.gif\"\r\n        width={boardSize[0] / 9 - 3}\r\n        height={boardSize[0] / 9 - 3}\r\n        style={{ display: targetDisplay }}\r\n        transform={targetTranslate}\r\n      ></image>\r\n      <MoveHint board={board} boardWidth={boardSize[0]} />\r\n      <Piece\r\n        board={board}\r\n        handleMouseDown={handleMouseDown}\r\n        side={side}\r\n        turnToMove={turnToMove}\r\n      />\r\n\r\n      <image\r\n        href=\"/images/Legal_Capture_Icon/legal_capture.png\"\r\n        transform={warningTranslate}\r\n        style={{ display: warningDisplay, opacity: \"0.6\" }}\r\n        width={boardSize[0] / 9 - 3}\r\n        height={boardSize[0] / 9 - 3}\r\n      ></image>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(Board);\r\n"]},"metadata":{},"sourceType":"module"}