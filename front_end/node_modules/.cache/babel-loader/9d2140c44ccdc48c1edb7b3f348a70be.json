{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{Col,Button}from\"react-bootstrap\";import\"./GameController.scss\";import{useDispatch,useSelector}from\"react-redux\";import{SocketContext,SetMoveTimerContext}from\"../../../App/context.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GameController=function GameController(props){var dispatch=useDispatch();var socket=useContext(SocketContext);var setMoveTimer=useContext(SetMoveTimerContext);var findingMatch=useSelector(function(state){return state.gameState.findingMatch;});var time=useSelector(function(state){return state.gameState.time;});var side=useSelector(function(state){return state.boardState.side;});var handlePlay=function handlePlay(){if(findingMatch!==true){socket.emit(\"findMatch\",side,time);dispatch({type:\"setFindingMatch\",value:true});}};var handleSelectTime=function handleSelectTime(event){var selectedTime=+event.currentTarget.getAttribute(\"value\");dispatch({type:\"setTime\",value:selectedTime});props.handleToggle();};var handleSwitchSide=function handleSwitchSide(event){var selectedSide=event.currentTarget.getAttribute(\"value\");if(selectedSide===\"black\")dispatch({type:\"switchSide\",value:[\"red\",\"black\"]});else dispatch({type:\"switchSide\",value:[\"black\",\"red\"]});};useEffect(function(){socket.on(\"timeout\",function(){dispatch({type:\"setFindingMatch\",value:\"No Players are currently online :(\"});});socket.on(\"foundMatch\",function(opponent,firstMove,time){dispatch({type:\"setOpponentInfo\",value:{playername:opponent.playername,photo:opponent.photo}});dispatch({type:\"setTime\",value:time});dispatch({type:\"setTurnToMove\",value:firstMove});dispatch({type:\"setFoundMatch\",value:true});setMoveTimer(firstMove,false,dispatch);});socket.on(\"isInGame\",function(){dispatch({type:\"setFindingMatch\",value:\"Your account is currently in a game. Please try again after the game was finished\"});});return function(){socket.removeAllListeners(\"timeout\");socket.removeAllListeners(\"foundMatch\");};});return/*#__PURE__*/_jsx(Col,{md:{span:4},xs:{span:10},className:\"game-controller mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"select-side-container\",children:[/*#__PURE__*/_jsx(Button,{className:\"red-side\",value:\"red\",onClick:handleSwitchSide,disabled:findingMatch===true,children:\"Red\"}),/*#__PURE__*/_jsx(Button,{className:\"black-side\",value:\"black\",onClick:handleSwitchSide,disabled:findingMatch===true,children:\"Black\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-select-container\",children:[/*#__PURE__*/_jsxs(Button,{className:\"select-timer\",onClick:props.handleToggle,disabled:findingMatch===true,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-clock\"}),\" \",time+\":00\",\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-angle-down\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"time-select-table\",style:{display:props.timeSelectorDisplay},children:[/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"1\",children:\"1 min\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"3\",children:\"3 min\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"5\",children:\"5 min\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"10\",children:\"10 min\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"15\",children:\"15 min\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSelectTime,value:\"30\",children:\"30 min\"})]})]}),/*#__PURE__*/_jsx(Button,{className:\"play \".concat(findingMatch===true?\"finding-opponent\":\"\"),onClick:handlePlay,children:findingMatch===true?\"Finding Opponent...\":findingMatch}),/*#__PURE__*/_jsx(Button,{className:\"play-with-friend\",disabled:findingMatch===true,children:\"Play With Friend\"})]})});};export default GameController;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/GameController/GameController.jsx"],"names":["React","useContext","useEffect","Col","Button","useDispatch","useSelector","SocketContext","SetMoveTimerContext","GameController","props","dispatch","socket","setMoveTimer","findingMatch","state","gameState","time","side","boardState","handlePlay","emit","type","value","handleSelectTime","event","selectedTime","currentTarget","getAttribute","handleToggle","handleSwitchSide","selectedSide","on","opponent","firstMove","playername","photo","removeAllListeners","span","display","timeSelectorDisplay"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport \"./GameController.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst GameController = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const findingMatch = useSelector((state) => state.gameState.findingMatch);\r\n  const time = useSelector((state) => state.gameState.time);\r\n  const side = useSelector((state) => state.boardState.side);\r\n\r\n  const handlePlay = () => {\r\n    if (findingMatch !== true) {\r\n      socket.emit(\"findMatch\", side, time);\r\n      dispatch({ type: \"setFindingMatch\", value: true });\r\n    }\r\n  };\r\n\r\n  const handleSelectTime = (event) => {\r\n    const selectedTime = +event.currentTarget.getAttribute(\"value\");\r\n    dispatch({ type: \"setTime\", value: selectedTime });\r\n    props.handleToggle();\r\n  };\r\n\r\n  const handleSwitchSide = (event) => {\r\n    const selectedSide = event.currentTarget.getAttribute(\"value\");\r\n    if (selectedSide === \"black\")\r\n      dispatch({ type: \"switchSide\", value: [\"red\", \"black\"] });\r\n    else dispatch({ type: \"switchSide\", value: [\"black\", \"red\"] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"timeout\", () => {\r\n      dispatch({\r\n        type: \"setFindingMatch\",\r\n        value: \"No Players are currently online :(\",\r\n      });\r\n    });\r\n\r\n    socket.on(\"foundMatch\", (opponent, firstMove, time) => {\r\n      dispatch({\r\n        type: \"setOpponentInfo\",\r\n        value: {\r\n          playername: opponent.playername,\r\n          photo: opponent.photo,\r\n        },\r\n      });\r\n      dispatch({ type: \"setTime\", value: time });\r\n      dispatch({ type: \"setTurnToMove\", value: firstMove });\r\n      dispatch({ type: \"setFoundMatch\", value: true });\r\n      setMoveTimer(firstMove, false, dispatch);\r\n    });\r\n\r\n    socket.on(\"isInGame\", () => {\r\n      dispatch({\r\n        type: \"setFindingMatch\",\r\n        value:\r\n          \"Your account is currently in a game. Please try again after the game was finished\",\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"timeout\");\r\n      socket.removeAllListeners(\"foundMatch\");\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Col md={{ span: 4 }} xs={{ span: 10 }} className=\"game-controller mb-3\">\r\n      <div className=\"button-container\">\r\n        <div className=\"select-side-container\">\r\n          <Button\r\n            className=\"red-side\"\r\n            value=\"red\"\r\n            onClick={handleSwitchSide}\r\n            disabled={findingMatch === true}\r\n          >\r\n            Red\r\n          </Button>\r\n          <Button\r\n            className=\"black-side\"\r\n            value=\"black\"\r\n            onClick={handleSwitchSide}\r\n            disabled={findingMatch === true}\r\n          >\r\n            Black\r\n          </Button>\r\n        </div>\r\n        <div className=\"time-select-container\">\r\n          <Button\r\n            className=\"select-timer\"\r\n            onClick={props.handleToggle}\r\n            disabled={findingMatch === true}\r\n          >\r\n            <i className=\"fas fa-clock\"></i> {time + \":00\"}{\" \"}\r\n            <i className=\"fas fa-angle-down\"></i>\r\n          </Button>\r\n          <div\r\n            className=\"time-select-table\"\r\n            style={{ display: props.timeSelectorDisplay }}\r\n          >\r\n            <Button onClick={handleSelectTime} value=\"1\">\r\n              1 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"3\">\r\n              3 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"5\">\r\n              5 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"10\">\r\n              10 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"15\">\r\n              15 min\r\n            </Button>\r\n            <Button onClick={handleSelectTime} value=\"30\">\r\n              30 min\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className={`play ${findingMatch === true ? \"finding-opponent\" : \"\"}`}\r\n          onClick={handlePlay}\r\n        >\r\n          {findingMatch === true ? \"Finding Opponent...\" : findingMatch}\r\n        </Button>\r\n        <Button className=\"play-with-friend\" disabled={findingMatch === true}>\r\n          Play With Friend\r\n        </Button>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GameController;\r\n"]},"metadata":{},"sourceType":"module"}