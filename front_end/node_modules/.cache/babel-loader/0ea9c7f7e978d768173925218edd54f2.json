{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\VerifyEmail\\\\VerifyEmail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Container, Form, InputGroup, Button, Spinner, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport callAPI from \"../App/callAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerifyEmail = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [verified, setVerified] = useState(false);\n  const [waitForResponse, setWaitForResponse] = useState(false);\n  const [resend, setResend] = useState(false);\n  const [verificationCode, setVerficationCode] = useState(\"\");\n  const [invalidCodeMess, setInvalidCodeMess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [waitForSendingCode, setWaitForSendingCode] = useState(false);\n  const codeRef = useRef();\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n\n  const handleVerificationCodeChange = event => {\n    const value = event.target.value;\n    if (/[^0-9]/.test(value)) setInvalidCodeMess(\"Invalid verification code\");else setInvalidCodeMess(\"\");\n    setVerficationCode(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!verificationCode) setInvalidCodeMess(\"Please fill in this field\");else if (!invalidCodeMess) {\n      setWaitForResponse(true);\n      const {\n        message,\n        ok,\n        user\n      } = await callAPI(\"POST\", \"api/verify-email/code\", {\n        username: playerInfo.username,\n        correct: +codeRef.current === +verificationCode\n      });\n      setWaitForResponse(false);\n      if (!ok) setError(message);else if (user) {\n        setVerified(true);\n        dispatch({\n          type: \"setPlayerInfo\",\n          value: user\n        });\n      } else if (+codeRef.current !== +verificationCode) setInvalidCodeMess(\"Incorrect Code\");else setError(message);\n    }\n  };\n\n  const sendVerificationCode = async () => {\n    if (!resend) setResend(true);\n    setWaitForSendingCode(true);\n    setError(\"\");\n    const {\n      message,\n      code,\n      ok\n    } = await callAPI(\"POST\", \"api/verify-email\", {\n      email: playerInfo.email.value,\n      lastname: playerInfo.name.lastname\n    });\n    setWaitForSendingCode(false);\n    if (!ok) setError(message);else codeRef.current = code;\n  };\n\n  if (!playerInfo || verified) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Xiangqi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          span: 6\n        },\n        xs: {\n          span: 10\n        },\n        className: \"login-component d-flex flex-column  align-items-center\",\n        children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"verificationCode\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Enter your verification code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"verificationCode\",\n                isInvalid: invalidCodeMess !== \"\",\n                onChange: handleVerificationCodeChange,\n                value: verificationCode,\n                placeholder: \"Verification Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidCodeMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: waitForResponse ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this) : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: sendVerificationCode,\n            style: {\n              marginTop: \"10px\"\n            },\n            children: waitForSendingCode ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this) : resend ? \"Resend Verification Code\" : \"Send Verification Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerifyEmail, \"CDpR54iFk/PkuDqUHNwJRU3K1MA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = VerifyEmail;\nexport default VerifyEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/VerifyEmail/VerifyEmail.jsx"],"names":["React","useState","useRef","Container","Form","InputGroup","Button","Spinner","Row","Col","useDispatch","useSelector","Redirect","callAPI","VerifyEmail","dispatch","verified","setVerified","waitForResponse","setWaitForResponse","resend","setResend","verificationCode","setVerficationCode","invalidCodeMess","setInvalidCodeMess","error","setError","waitForSendingCode","setWaitForSendingCode","codeRef","playerInfo","state","appState","handleVerificationCodeChange","event","value","target","test","handleSubmit","preventDefault","message","ok","user","username","correct","current","type","sendVerificationCode","code","email","lastname","name","span","float","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst VerifyEmail = () => {\r\n  const dispatch = useDispatch();\r\n  const [verified, setVerified] = useState(false);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [resend, setResend] = useState(false);\r\n  const [verificationCode, setVerficationCode] = useState(\"\");\r\n  const [invalidCodeMess, setInvalidCodeMess] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [waitForSendingCode, setWaitForSendingCode] = useState(false);\r\n  const codeRef = useRef();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n\r\n  const handleVerificationCodeChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^0-9]/.test(value)) setInvalidCodeMess(\"Invalid verification code\");\r\n    else setInvalidCodeMess(\"\");\r\n    setVerficationCode(value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!verificationCode) setInvalidCodeMess(\"Please fill in this field\");\r\n    else if (!invalidCodeMess) {\r\n      setWaitForResponse(true);\r\n      const { message, ok, user } = await callAPI(\r\n        \"POST\",\r\n        \"api/verify-email/code\",\r\n        {\r\n          username: playerInfo.username,\r\n          correct: +codeRef.current === +verificationCode,\r\n        }\r\n      );\r\n      setWaitForResponse(false);\r\n      if (!ok) setError(message);\r\n      else if (user) {\r\n        setVerified(true);\r\n        dispatch({ type: \"setPlayerInfo\", value: user });\r\n      } else if (+codeRef.current !== +verificationCode)\r\n        setInvalidCodeMess(\"Incorrect Code\");\r\n      else setError(message);\r\n    }\r\n  };\r\n\r\n  const sendVerificationCode = async () => {\r\n    if (!resend) setResend(true);\r\n    setWaitForSendingCode(true);\r\n    setError(\"\");\r\n    const { message, code, ok } = await callAPI(\"POST\", \"api/verify-email\", {\r\n      email: playerInfo.email.value,\r\n      lastname: playerInfo.name.lastname,\r\n    });\r\n    setWaitForSendingCode(false);\r\n    if (!ok) setError(message);\r\n    else codeRef.current = code;\r\n  };\r\n\r\n  if (!playerInfo || verified) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 6 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          {error ? <p className=\"error-message\">{error}</p> : null}\r\n          <Form onSubmit={handleSubmit} method=\"POST\">\r\n            <Form.Group controlId=\"verificationCode\">\r\n              <Form.Label style={{ float: \"left\" }}>\r\n                Enter your verification code\r\n              </Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"verificationCode\"\r\n                  isInvalid={invalidCodeMess !== \"\"}\r\n                  onChange={handleVerificationCodeChange}\r\n                  value={verificationCode}\r\n                  placeholder=\"Verification Code\"\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidCodeMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">\r\n              {waitForResponse ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              onClick={sendVerificationCode}\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              {waitForSendingCode ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : resend ? (\r\n                \"Resend Verification Code\"\r\n              ) : (\r\n                \"Send Verification Code\"\r\n              )}\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n"]},"metadata":{},"sourceType":"module"}