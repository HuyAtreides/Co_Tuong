{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useStore } from \"react-redux\";\nimport { setMoveTimer, socket } from \"./context.js\";\n\nconst useHandleRoutingWhilePlaying = location => {\n  _s();\n\n  const store = useStore();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const foundMatch = store.getState().gameState.foundMatch;\n    const result = store.getState().gameState.result;\n    if (result === undefined) return;\n\n    if (foundMatch && location.pathname !== \"/\" && !result) {\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Opponent Won - \",\n          reason: \"Game Abandoned\",\n          className: \"game-message\"\n        }\n      });\n      setMoveTimer(null, true, dispatch);\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n    }\n  }, [location]);\n};\n\n_s(useHandleRoutingWhilePlaying, \"as0TxbPzkR8qMmsNaB537Pq5S7M=\", false, function () {\n  return [useStore, useDispatch];\n});\n\nexport default useHandleRoutingWhilePlaying;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/useHandleRoutingWhilePlaying.js"],"names":["useEffect","useDispatch","useStore","setMoveTimer","socket","useHandleRoutingWhilePlaying","location","store","dispatch","foundMatch","getState","gameState","result","undefined","pathname","type","value","winner","reason","className","emit"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AAEA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,cAArC;;AAEA,MAAMC,4BAA4B,GAAIC,QAAD,IAAc;AAAA;;AACjD,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAGF,KAAK,CAACG,QAAN,GAAiBC,SAAjB,CAA2BF,UAA9C;AACA,UAAMG,MAAM,GAAGL,KAAK,CAACG,QAAN,GAAiBC,SAAjB,CAA2BC,MAA1C;AACA,QAAIA,MAAM,KAAKC,SAAf,EAA0B;;AAC1B,QAAIJ,UAAU,IAAIH,QAAQ,CAACQ,QAAT,KAAsB,GAApC,IAA2C,CAACF,MAAhD,EAAwD;AACtDJ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAR,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAE,iBAFH;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE;AAJN;AAFA,OAAD,CAAR;AASAhB,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,EAAaK,QAAb,CAAZ;AACAJ,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACD;AACF,GAlBQ,EAkBN,CAACd,QAAD,CAlBM,CAAT;AAmBD,CAvBD;;GAAMD,4B;UACUH,Q,EACGD,W;;;AAuBnB,eAAeI,4BAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\n\r\nimport { setMoveTimer, socket } from \"./context.js\";\r\n\r\nconst useHandleRoutingWhilePlaying = (location) => {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const foundMatch = store.getState().gameState.foundMatch;\r\n    const result = store.getState().gameState.result;\r\n    if (result === undefined) return;\r\n    if (foundMatch && location.pathname !== \"/\" && !result) {\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [location]);\r\n};\r\n\r\nexport default useHandleRoutingWhilePlaying;\r\n"]},"metadata":{},"sourceType":"module"}