{"ast":null,"code":"import _slicedToArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from\"react\";import EntryComponent from\"./EntryComponent/EntryComponent.jsx\";import NavBar from\"./NavBar/NavBar.jsx\";import{Container,Spinner}from\"react-bootstrap\";import useFetchData from\"../App/useFetchData.js\";import\"./Main.scss\";import{useSelector,useDispatch,useStore}from\"react-redux\";import Game from\"./Game/Game.jsx\";import{SocketContext}from\"../App/context\";import{Redirect}from\"react-router-dom\";import Warning from\"./Warning/Warning.jsx\";import VerifyEmailNote from\"./VerifyEmailNote/VerifyEmailNote.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(props){var dispatch=useDispatch();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),connectionError=_useState2[0],setConnectionError=_useState2[1];var socket=useContext(SocketContext);var store=useStore();var lang=useSelector(function(state){return state.appState.lang;});var playerInfo=useSelector(function(state){return state.appState.playerInfo;});var loginError=useSelector(function(state){return state.appState.loginError;});var isAuthenticated=useSelector(function(state){return state.appState.isAuthenticated;});var _useFetchData=useFetchData(),_useFetchData2=_slicedToArray(_useFetchData,2),waitForResponse=_useFetchData2[0],setWaitForResponse=_useFetchData2[1];useEffect(function(){socket.on(\"connect_error\",function(err){var errMess;if(/your account/.test(err))errMess=lang===\"English\"?err.message:\"Kết nối đã đóng vì tài khoản của bạn được đặng nhập từ nơi khác\";else errMess=err.message;setConnectionError(err.message);socket.close();});socket.on(\"connect\",function(){if(connectionError===\"The connection was closed\"||connectionError===\"Kết nối đã đóng\"){setConnectionError(lang===\"English\"?\"Successfully reconnect\":\"Kết nối lại thành công\");setTimeout(function(){setConnectionError(null);},1000);}});return function(){socket.removeAllListeners(\"connect_error\");socket.removeAllListeners(\"connect\");};},[connectionError]);useEffect(function(){socket.on(\"disconnect\",function(reason){var foundMatch=store.getState().gameState.foundMatch;if(!foundMatch){dispatch({type:\"setFindingMatch\",value:lang===\"English\"?\"Connection Was Closed\":\"Kết nối đã đóng\"});setTimeout(function(){dispatch({type:\"setFindingMatch\",value:lang===\"English\"?\"Play\":\"Chơi\"});},700);}if(reason!==\"io client disconnect\"){setConnectionError(lang===\"English\"?\"Connection Was Closed\":\"Kết nối đã đóng\");socket.open();if(foundMatch){dispatch({type:\"setGameResult\",value:undefined});dispatch({type:\"setMessage\",value:{from:\"\",className:\"game-message\",message:lang===\"English\"?\"Connection Was Closed\":\"Kết nối đã đóng\"}});}}});return function(){socket.removeAllListeners(\"disconnect\");};},[]);if(loginError)return/*#__PURE__*/_jsx(Redirect,{to:\"/signin\"});if(waitForResponse)return/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"secondary\",className:\"spinner\"});return/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{setWaitForResponse:setWaitForResponse}),isAuthenticated?/*#__PURE__*/_jsx(Game,{}):/*#__PURE__*/_jsx(EntryComponent,{})]}),playerInfo&&!playerInfo.guest&&!playerInfo.email.verified?/*#__PURE__*/_jsx(VerifyEmailNote,{lang:lang}):null,connectionError?/*#__PURE__*/_jsx(Warning,{connectionError:connectionError}):null]});};export default Main;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Main.jsx"],"names":["React","useEffect","useState","useContext","EntryComponent","NavBar","Container","Spinner","useFetchData","useSelector","useDispatch","useStore","Game","SocketContext","Redirect","Warning","VerifyEmailNote","Main","props","dispatch","connectionError","setConnectionError","socket","store","lang","state","appState","playerInfo","loginError","isAuthenticated","waitForResponse","setWaitForResponse","on","err","errMess","test","message","close","setTimeout","removeAllListeners","reason","foundMatch","getState","gameState","type","value","open","undefined","from","className","guest","email","verified"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport useFetchData from \"../App/useFetchData.js\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { SocketContext } from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Warning from \"./Warning/Warning.jsx\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [connectionError, setConnectionError] = useState(null);\r\n  const socket = useContext(SocketContext);\r\n  const store = useStore();\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const [waitForResponse, setWaitForResponse] = useFetchData();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect_error\", (err) => {\r\n      let errMess;\r\n      if (/your account/.test(err))\r\n        errMess =\r\n          lang === \"English\"\r\n            ? err.message\r\n            : \"Kết nối đã đóng vì tài khoản của bạn được đặng nhập từ nơi khác\";\r\n      else errMess = err.message;\r\n      setConnectionError(err.message);\r\n      socket.close();\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      if (\r\n        connectionError === \"The connection was closed\" ||\r\n        connectionError === \"Kết nối đã đóng\"\r\n      ) {\r\n        setConnectionError(\r\n          lang === \"English\"\r\n            ? \"Successfully reconnect\"\r\n            : \"Kết nối lại thành công\"\r\n        );\r\n        setTimeout(() => {\r\n          setConnectionError(null);\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"connect_error\");\r\n      socket.removeAllListeners(\"connect\");\r\n    };\r\n  }, [connectionError]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", (reason) => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      if (!foundMatch) {\r\n        dispatch({\r\n          type: \"setFindingMatch\",\r\n          value:\r\n            lang === \"English\" ? \"Connection Was Closed\" : \"Kết nối đã đóng\",\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: \"setFindingMatch\",\r\n            value: lang === \"English\" ? \"Play\" : \"Chơi\",\r\n          });\r\n        }, 700);\r\n      }\r\n      if (reason !== \"io client disconnect\") {\r\n        setConnectionError(\r\n          lang === \"English\" ? \"Connection Was Closed\" : \"Kết nối đã đóng\"\r\n        );\r\n        socket.open();\r\n        if (foundMatch) {\r\n          dispatch({ type: \"setGameResult\", value: undefined });\r\n          dispatch({\r\n            type: \"setMessage\",\r\n            value: {\r\n              from: \"\",\r\n              className: \"game-message\",\r\n              message:\r\n                lang === \"English\"\r\n                  ? \"Connection Was Closed\"\r\n                  : \"Kết nối đã đóng\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"disconnect\");\r\n    };\r\n  }, []);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n  if (waitForResponse)\r\n    return (\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" />\r\n    );\r\n\r\n  return (\r\n    <Container fluid>\r\n      <div>\r\n        <NavBar setWaitForResponse={setWaitForResponse} />\r\n        {isAuthenticated ? <Game /> : <EntryComponent />}\r\n      </div>\r\n\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote lang={lang} />\r\n      ) : null}\r\n      {connectionError ? <Warning connectionError={connectionError} /> : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}