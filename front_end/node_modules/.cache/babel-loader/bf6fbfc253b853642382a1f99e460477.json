{"ast":null,"code":"import Piece from \"./piece.js\";\nimport elephantRules from \"./move_rules/elephantRules.js\";\n\nclass Elephant extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = elephantRules;\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\n    this.translate = `translate(${translateX}, ${translateY})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n      if (this.checkValidMove(newRow - curRow, newCol - curCol, board)) {\n        if (!this.isBlocked(newRow, newCol, board)) {\n          if (!board[newRow][newCol].side) return this.setPosition(false, newRow, newCol);\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side) return this.setPosition(true, newRow, newCol);\n      }\n    }\n\n    return null;\n  }\n\n  isBlocked(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n    let count = 0;\n\n    do {\n      curCol += curCol > newCol ? -1 : 1;\n      curRow += curRow > newRow ? -1 : 1;\n      if (board[curRow][curCol]) count++;\n    } while (curCol !== newCol && curRow !== newRow);\n\n    return count;\n  }\n\n}\n\nexport default Elephant;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/elephant.js"],"names":["Piece","elephantRules","Elephant","constructor","width","row","col","name","moves","setNewPosition","x","y","board","newCol","Math","floor","newRow","curRow","curCol","position","translateX","translateY","translate","checkValidMove","isBlocked","side","setPosition","count"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,QAAN,SAAuBF,KAAvB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaP,aAAb;AACD;;AAEDQ,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAc;AAC1B,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,KAAKN,KAApB,CAAf;AACA,UAAMY,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,KAAKP,KAApB,CAAf;AACA,UAAM,CAACa,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,UAAM,CAACC,UAAD,EAAaC,UAAb,IAA2B,CAACH,MAAM,GAAG,KAAKd,KAAf,EAAsBa,MAAM,GAAG,KAAKb,KAApC,CAAjC;AACA,SAAKkB,SAAL,GAAkB,aAAYF,UAAW,KAAIC,UAAW,GAAxD;;AACA,QAAIR,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BG,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,UAAI,KAAKO,cAAL,CAAoBP,MAAM,GAAGC,MAA7B,EAAqCJ,MAAM,GAAGK,MAA9C,EAAsDN,KAAtD,CAAJ,EAAkE;AAChE,YAAI,CAAC,KAAKY,SAAL,CAAeR,MAAf,EAAuBH,MAAvB,EAA+BD,KAA/B,CAAL,EAA4C;AAC1C,cAAI,CAACA,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBY,IAA3B,EACE,OAAO,KAAKC,WAAL,CAAiB,KAAjB,EAAwBV,MAAxB,EAAgCH,MAAhC,CAAP;AACH,SAHD,MAGO,IAAID,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBY,IAAtB,KAA+Bb,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBO,IAAzD,EACL,OAAO,KAAKC,WAAL,CAAiB,IAAjB,EAAuBV,MAAvB,EAA+BH,MAA/B,CAAP;AACH;AACF;;AACD,WAAO,IAAP;AACD;;AAEDW,EAAAA,SAAS,CAACR,MAAD,EAASH,MAAT,EAAiBD,KAAjB,EAAwB;AAC/B,QAAI,CAACK,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,QAAIQ,KAAK,GAAG,CAAZ;;AACA,OAAG;AACDT,MAAAA,MAAM,IAAIA,MAAM,GAAGL,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACAI,MAAAA,MAAM,IAAIA,MAAM,GAAGD,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,UAAIJ,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BS,KAAK;AACjC,KAJD,QAIST,MAAM,KAAKL,MAAX,IAAqBI,MAAM,KAAKD,MAJzC;;AAMA,WAAOW,KAAP;AACD;;AAlC0B;;AAqC7B,eAAezB,QAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport elephantRules from \"./move_rules/elephantRules.js\";\r\n\r\nclass Elephant extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = elephantRules;\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n      if (this.checkValidMove(newRow - curRow, newCol - curCol, board)) {\r\n        if (!this.isBlocked(newRow, newCol, board)) {\r\n          if (!board[newRow][newCol].side)\r\n            return this.setPosition(false, newRow, newCol);\r\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n          return this.setPosition(true, newRow, newCol);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  isBlocked(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol && curRow !== newRow);\r\n\r\n    return count;\r\n  }\r\n}\r\n\r\nexport default Elephant;\r\n"]},"metadata":{},"sourceType":"module"}