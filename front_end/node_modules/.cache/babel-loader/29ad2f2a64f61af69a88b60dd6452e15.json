{"ast":null,"code":"import _slicedToArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext,useRef}from\"react\";import\"./Game.scss\";import{Row}from\"react-bootstrap\";import GameController from\"./GameController/GameController.jsx\";import GamePlayArea from\"./GamePlayArea/GamePlayArea.jsx\";import{useSelector,useDispatch}from\"react-redux\";import GameBar from\"./GameBar/GameBar.jsx\";import{SocketContext,SetMoveTimerContext}from\"../../App/context.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=function Game(){var dispatch=useDispatch();var socket=useContext(SocketContext);var setMoveTimer=useContext(SetMoveTimerContext);var _useState=useState(\"none\"),_useState2=_slicedToArray(_useState,2),timeSelectorDisplay=_useState2[0],setTimeSelectorDisplay=_useState2[1];var foundMatch=useSelector(function(state){return state.gameState.foundMatch;});var foundMatchRef=useRef();var handleToggle=function handleToggle(){setTimeSelectorDisplay(timeSelectorDisplay===\"none\"?\"flex\":\"none\");};useEffect(function(){foundMatchRef.current=foundMatch;},[foundMatch]);useEffect(function(){return function(){if(foundMatchRef.current){var listItemRef=/*#__PURE__*/React.createRef();dispatch({type:\"setGameResult\",value:\"Lose\"});dispatch({type:\"setMessage\",value:{type:\"game result message\",winner:\"Opponent Won - \",reason:\"Game Abandoned\",className:\"game-message\",ref:listItemRef}});setMoveTimer(null,true,dispatch);socket.emit(\"gameFinish\",[\"Won\",\"Game Abandoned\"]);}};},[]);return/*#__PURE__*/_jsxs(Row,{md:{cols:1},className:\"mt-5 pb-5\",children:[/*#__PURE__*/_jsx(GamePlayArea,{}),!foundMatch?/*#__PURE__*/_jsx(GameController,{timeSelectorDisplay:timeSelectorDisplay,handleToggle:handleToggle}):/*#__PURE__*/_jsx(GameBar,{})]});};export default Game;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Game.jsx"],"names":["React","useState","useEffect","useContext","useRef","Row","GameController","GamePlayArea","useSelector","useDispatch","GameBar","SocketContext","SetMoveTimerContext","Game","dispatch","socket","setMoveTimer","timeSelectorDisplay","setTimeSelectorDisplay","foundMatch","state","gameState","foundMatchRef","handleToggle","current","listItemRef","createRef","type","value","winner","reason","className","ref","emit","cols"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,CAAiDC,MAAjD,KAA+D,OAA/D,CACA,MAAO,aAAP,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,aAAT,CAAwBC,mBAAxB,KAAmD,sBAAnD,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,MAAM,CAAGZ,UAAU,CAACQ,aAAD,CAAzB,CACA,GAAMK,CAAAA,YAAY,CAAGb,UAAU,CAACS,mBAAD,CAA/B,CAHiB,cAIqCX,QAAQ,CAAC,MAAD,CAJ7C,wCAIVgB,mBAJU,eAIWC,sBAJX,eAKjB,GAAMC,CAAAA,UAAU,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,SAAN,CAAgBF,UAA3B,EAAD,CAA9B,CACA,GAAMG,CAAAA,aAAa,CAAGlB,MAAM,EAA5B,CAEA,GAAMmB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBL,sBAAsB,CAACD,mBAAmB,GAAK,MAAxB,CAAiC,MAAjC,CAA0C,MAA3C,CAAtB,CACD,CAFD,CAIAf,SAAS,CAAC,UAAM,CACdoB,aAAa,CAACE,OAAd,CAAwBL,UAAxB,CACD,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIAjB,SAAS,CAAC,UAAM,CACd,MAAO,WAAM,CACX,GAAIoB,aAAa,CAACE,OAAlB,CAA2B,CACzB,GAAMC,CAAAA,WAAW,cAAGzB,KAAK,CAAC0B,SAAN,EAApB,CACAZ,QAAQ,CAAC,CAAEa,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,MAAhC,CAAD,CAAR,CACAd,QAAQ,CAAC,CACPa,IAAI,CAAE,YADC,CAEPC,KAAK,CAAE,CACLD,IAAI,CAAE,qBADD,CAELE,MAAM,CAAE,iBAFH,CAGLC,MAAM,CAAE,gBAHH,CAILC,SAAS,CAAE,cAJN,CAKLC,GAAG,CAAEP,WALA,CAFA,CAAD,CAAR,CAUAT,YAAY,CAAC,IAAD,CAAO,IAAP,CAAaF,QAAb,CAAZ,CACAC,MAAM,CAACkB,IAAP,CAAY,YAAZ,CAA0B,CAAC,KAAD,CAAQ,gBAAR,CAA1B,EACD,CACF,CAjBD,CAkBD,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,mBACE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAT,CAAsB,SAAS,CAAC,WAAhC,wBACE,KAAC,YAAD,IADF,CAEG,CAACf,UAAD,cACC,KAAC,cAAD,EACE,mBAAmB,CAAEF,mBADvB,CAEE,YAAY,CAAEM,YAFhB,EADD,cAMC,KAAC,OAAD,IARJ,GADF,CAaD,CAlDD,CAoDA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport GameBar from \"./GameBar/GameBar.jsx\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../App/context.js\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const foundMatchRef = useRef();\r\n\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    foundMatchRef.current = foundMatch;\r\n  }, [foundMatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (foundMatchRef.current) {\r\n        const listItemRef = React.createRef();\r\n        dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            type: \"game result message\",\r\n            winner: \"Opponent Won - \",\r\n            reason: \"Game Abandoned\",\r\n            className: \"game-message\",\r\n            ref: listItemRef,\r\n          },\r\n        });\r\n        setMoveTimer(null, true, dispatch);\r\n        socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea />\r\n      {!foundMatch ? (\r\n        <GameController\r\n          timeSelectorDisplay={timeSelectorDisplay}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ) : (\r\n        <GameBar />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}