{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\GamePlayArea\\\\GamePlayArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport Timer from \"../Timer/Timer.jsx\";\nimport Board from \"../Board/Board\";\nimport \"./GamePlayArea.scss\";\nimport { useSelector } from \"react-redux\";\nimport GameResult from \"./GameResult/GameResult.jsx\";\nimport Pause from \"./Pause/Pause.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GamePlayArea = props => {\n  _s();\n\n  const opponentTimeLeftToMove = useSelector(state => state.gameState.opponentTimeLeftToMove);\n  const playerTimeLeftToMove = useSelector(state => state.gameState.playerTimeLeftToMove);\n  const turnToMove = useSelector(state => state.boardState.turnToMove);\n  const gameResult = useSelector(state => state.gameState.gameResult);\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const capturedPieces = useSelector(state => state.boardState.capturedPieces);\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const opponentInfo = useSelector(state => state.gameState.opponentInfo);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: {\n      span: 8\n    },\n    sm: {\n      span: 11\n    },\n    xs: {\n      span: 11\n    },\n    className: \"board-container pb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-and-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: opponentInfo.photo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user-name\",\n          children: opponentInfo.playername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captured-pieces\",\n        children: capturedPieces.map((element, index) => {\n          if (element.side === element.choosenSide[1]) return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/Pieces/${element.name}.png`,\n            style: {\n              width: \"27px\"\n            }\n          }, `c${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        timeLeftToMove: opponentTimeLeftToMove,\n        turnToMove: foundMatch && !gameResult ? !turnToMove : turnToMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-and-name\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-and-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: playerInfo.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: playerInfo.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captured-pieces\",\n        children: capturedPieces.map((element, index) => {\n          if (element.side === element.choosenSide[0]) return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/Pieces/${element.name}.png`,\n            style: {\n              width: \"27px\"\n            }\n          }, `c${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this);\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        timeLeftToMove: playerTimeLeftToMove,\n        turnToMove: turnToMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GamePlayArea, \"BeedIAQ0b9RR7bLupqt85/LRVbM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = GamePlayArea;\nexport default GamePlayArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePlayArea\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/GamePlayArea/GamePlayArea.jsx"],"names":["React","Col","Timer","Board","useSelector","GameResult","Pause","GamePlayArea","props","opponentTimeLeftToMove","state","gameState","playerTimeLeftToMove","turnToMove","boardState","gameResult","foundMatch","capturedPieces","playerInfo","appState","opponentInfo","span","photo","playername","map","element","index","side","choosenSide","name","width","username"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Timer from \"../Timer/Timer.jsx\";\r\nimport Board from \"../Board/Board\";\r\nimport \"./GamePlayArea.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GameResult from \"./GameResult/GameResult.jsx\";\r\nimport Pause from \"./Pause/Pause.jsx\";\r\n\r\nconst GamePlayArea = (props) => {\r\n  const opponentTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.opponentTimeLeftToMove\r\n  );\r\n  const playerTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.playerTimeLeftToMove\r\n  );\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const capturedPieces = useSelector(\r\n    (state) => state.boardState.capturedPieces\r\n  );\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  return (\r\n    <Col\r\n      md={{ span: 8 }}\r\n      sm={{ span: 11 }}\r\n      xs={{ span: 11 }}\r\n      className=\"board-container pb-3\"\r\n    >\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <img src={opponentInfo.photo} alt=\"\" />\r\n          <p className=\"user-name\">{opponentInfo.playername}</p>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[1])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer\r\n          timeLeftToMove={opponentTimeLeftToMove}\r\n          turnToMove={foundMatch && !gameResult ? !turnToMove : turnToMove}\r\n        />\r\n      </div>\r\n      <Board />\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <div className=\"avatar-and-name\">\r\n            <img src={playerInfo.photo} alt=\"\" />\r\n            <p className=\"user-name\">{playerInfo.username}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[0])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer timeLeftToMove={playerTimeLeftToMove} turnToMove={turnToMove} />\r\n      </div>\r\n      <GameResult />\r\n      <Pause />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GamePlayArea;\r\n"]},"metadata":{},"sourceType":"module"}