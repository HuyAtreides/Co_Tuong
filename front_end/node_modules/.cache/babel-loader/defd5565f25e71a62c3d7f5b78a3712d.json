{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Signup\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from \"react\";\nimport { Container, Form, InputGroup, Button, Spinner, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { SocketContext } from \"../App/context.js\";\nimport callAPI from \"../App/callAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.appState.isAuthenticated);\n  const [verify, setVerify] = useState(false);\n  const socket = useContext(SocketContext);\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\n  const [waitForResponse, setWaitForResponse] = useState(false);\n  const [error, setError] = useState(null);\n  const [verificationCode, setVerficationCode] = useState(\"\");\n  const [invalidCodeMess, setInvalidCodeMess] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [sendMail, setSendMail] = useState(false);\n  const verifyCodeRef = useRef();\n\n  const handleVerificationCodeChange = event => {\n    const value = event.target.value;\n    if (/[^0-9]/.test(value) || value.length > 5) setInvalidCodeMess(\"Invalid verification code\");else setInvalidPasswordMess(\"\");\n    setVerficationCode(value);\n  };\n\n  const handleUsernameChange = event => {\n    const value = event.target.value;\n\n    if (/[^ _a-z0-9]/i.test(value) || value.length < 3 || value.length > 20) {\n      setInvalidUsernameMess(\"Username must be between 3-20 characters long and use only Latin letters and numbers\");\n    } else setInvalidUsernameMess(\"\");\n\n    setUsername(value);\n  };\n\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n\n    if (value.length < 6) {\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\n    } else setInvalidPasswordMess(\"\");\n\n    setPassword(value);\n  };\n\n  const handleEmailChange = event => {\n    const value = event.target.value;\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value)) setInvalidEmailMess(\"Invalid email address\");else setInvalidEmailMess(\"\");\n    setEmail(value);\n  };\n\n  const handleFirstnameChange = event => {\n    const value = event.target.value;\n    setInvalidFirstname(\"\");\n    setFirstname(value);\n  };\n\n  const handleLastnameChange = event => {\n    const value = event.target.value;\n    setInvalidLastname(\"\");\n    setLastname(value);\n  };\n\n  const handleMissingField = () => {\n    let count = 0;\n\n    if (!username) {\n      count += 1;\n      setInvalidUsernameMess(\"Please fill out this field\");\n    }\n\n    if (!password) {\n      count += 1;\n      setInvalidPasswordMess(\"Please fill out this field\");\n    }\n\n    if (!firstname) {\n      count += 1;\n      setInvalidFirstname(\"Please fill out this field\");\n    }\n\n    if (!lastname) {\n      count += 1;\n      setInvalidLastname(\"Please fill out this field\");\n    }\n\n    if (!email) {\n      count += 1;\n      setInvalidEmailMess(\"Please fill out this field\");\n    }\n\n    return count !== 0;\n  };\n\n  const handleVerifyEmail = async event => {\n    event.preventDefault();\n    const missingField = handleMissingField();\n\n    if (!missingField && !invalidEmailMess && !invalidPasswordMess && !invalidUsernameMess && !invalidFirstname && !invalidLastname) {\n      setWaitForResponse(true);\n      setError(null);\n      const {\n        message,\n        verifyCode\n      } = await callAPI(\"POST\", {\n        email: email,\n        lastname: lastname\n      }, \"signup/verify-email\");\n      setWaitForResponse(false);\n\n      if (message) {\n        setError(message);\n      } else {\n        setVerify(true);\n        verifyCodeRef.current = verifyCode;\n      }\n    }\n  };\n\n  const handleSignUp = async event => {\n    event.preventDefault();\n\n    if (!invalidCodeMess) {\n      setWaitForResponse(true);\n      setError(null);\n      const {\n        message,\n        user\n      } = await callAPI(\"POST\", {\n        email: email,\n        password: password,\n        username: username,\n        lastname: lastname,\n        firstname: firstname,\n        verify: +verificationCode === verifyCodeRef.current\n      }, \"signup\");\n      setWaitForResponse(false);\n\n      if (message) {\n        setError(message);\n      } else {\n        dispatch({\n          type: \"setAuthenticated\",\n          value: true\n        });\n        dispatch({\n          type: \"playerInfo\",\n          value: user\n        });\n        socket.auth.player = {\n          playername: user.username,\n          photo: user.photo\n        };\n        socket.connect();\n      }\n    }\n  };\n\n  const resendVerificationCode = async event => {\n    event.preventDefault();\n    setSendMail(true);\n    const {\n      message,\n      verifyCode\n    } = await callAPI(\"POST\", {\n      email: email,\n      lastname: lastname\n    }, \"signup/verify-email\");\n    setSendMail(false);\n\n    if (message) {\n      setError(message);\n    } else {\n      verifyCodeRef.current = verifyCode;\n    }\n  };\n\n  if (isAuthenticated) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Xiangqi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          span: 3\n        },\n        xs: {\n          span: 10\n        },\n        className: \"login-component d-flex flex-column  align-items-center\",\n        children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: verify ? handleSignUp : handleVerifyEmail,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            style: {\n              display: verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"username\",\n                isInvalid: invalidUsernameMess !== \"\",\n                onChange: handleUsernameChange,\n                value: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidUsernameMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstname\",\n            style: {\n              display: verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstname\",\n                isInvalid: invalidFirstname !== \"\",\n                onChange: handleFirstnameChange,\n                value: firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidFirstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastname\",\n            style: {\n              display: verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Lastname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastname\",\n                isInvalid: invalidLastname !== \"\",\n                onChange: handleLastnameChange,\n                value: lastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidLastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            style: {\n              display: verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"email\",\n                isInvalid: invalidEmailMess !== \"\",\n                onChange: handleEmailChange,\n                value: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidEmailMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            style: {\n              display: verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                name: \"password\",\n                isInvalid: invalidPasswordMess !== \"\",\n                onChange: handlePasswordChange,\n                value: password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidPasswordMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"verificationCode\",\n            style: {\n              display: !verify ? \"none\" : \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: \"Enter your verification code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"verificationCode\",\n                isInvalid: invalidCodeMess !== \"\",\n                onChange: handleVerificationCodeChange,\n                value: verificationCode,\n                placeholder: \"Verification Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: invalidCodeMess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: waitForResponse ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this) : !verify ? \"Create Account\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              display: !verify ? \"none\" : \"inline\",\n              marginTop: \"7px\"\n            },\n            onClick: resendVerificationCode,\n            children: sendMail ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this) : \"Resend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"seperator\",\n          style: {\n            display: verify ? \"none\" : \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"seperator-text\",\n            children: \"or connect with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-login\",\n          style: {\n            display: verify ? \"none\" : \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"google\",\n            href: \"http://localhost:8080/auth/google\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), \" Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"facebook\",\n            href: \"http://localhost:8080/auth/facebook\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-facebook \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), \" Facebook\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"github\",\n            href: \"http://localhost:8080/auth/github\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-github \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), \" Github\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"XypEi7fYC8RlMfKY2RYM1rhlWXA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Signup/Signup.jsx"],"names":["React","useState","useRef","useContext","Container","Form","InputGroup","Button","Spinner","Row","Col","useDispatch","useSelector","Redirect","SocketContext","callAPI","Signup","dispatch","isAuthenticated","state","appState","verify","setVerify","socket","invalidUsernameMess","setInvalidUsernameMess","invalidEmailMess","setInvalidEmailMess","invalidPasswordMess","setInvalidPasswordMess","waitForResponse","setWaitForResponse","error","setError","verificationCode","setVerficationCode","invalidCodeMess","setInvalidCodeMess","username","setUsername","password","setPassword","email","setEmail","firstname","setFirstname","invalidFirstname","setInvalidFirstname","invalidLastname","setInvalidLastname","lastname","setLastname","sendMail","setSendMail","verifyCodeRef","handleVerificationCodeChange","event","value","target","test","length","handleUsernameChange","handlePasswordChange","handleEmailChange","handleFirstnameChange","handleLastnameChange","handleMissingField","count","handleVerifyEmail","preventDefault","missingField","message","verifyCode","current","handleSignUp","user","type","auth","player","playername","photo","connect","resendVerificationCode","span","display","float","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { SocketContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const [verify, setVerify] = useState(false);\r\n  const socket = useContext(SocketContext);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [verificationCode, setVerficationCode] = useState(\"\");\r\n  const [invalidCodeMess, setInvalidCodeMess] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\r\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [sendMail, setSendMail] = useState(false);\r\n  const verifyCodeRef = useRef();\r\n\r\n  const handleVerificationCodeChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^0-9]/.test(value) || value.length > 5)\r\n      setInvalidCodeMess(\"Invalid verification code\");\r\n    else setInvalidPasswordMess(\"\");\r\n    setVerficationCode(value);\r\n  };\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (/[^ _a-z0-9]/i.test(value) || value.length < 3 || value.length > 20) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setInvalidFirstname(\"\");\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setInvalidLastname(\"\");\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!firstname) {\r\n      count += 1;\r\n      setInvalidFirstname(\"Please fill out this field\");\r\n    }\r\n    if (!lastname) {\r\n      count += 1;\r\n      setInvalidLastname(\"Please fill out this field\");\r\n    }\r\n    if (!email) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleVerifyEmail = async (event) => {\r\n    event.preventDefault();\r\n    const missingField = handleMissingField();\r\n    if (\r\n      !missingField &&\r\n      !invalidEmailMess &&\r\n      !invalidPasswordMess &&\r\n      !invalidUsernameMess &&\r\n      !invalidFirstname &&\r\n      !invalidLastname\r\n    ) {\r\n      setWaitForResponse(true);\r\n      setError(null);\r\n      const { message, verifyCode } = await callAPI(\r\n        \"POST\",\r\n        {\r\n          email: email,\r\n          lastname: lastname,\r\n        },\r\n        \"signup/verify-email\"\r\n      );\r\n      setWaitForResponse(false);\r\n      if (message) {\r\n        setError(message);\r\n      } else {\r\n        setVerify(true);\r\n        verifyCodeRef.current = verifyCode;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!invalidCodeMess) {\r\n      setWaitForResponse(true);\r\n      setError(null);\r\n      const { message, user } = await callAPI(\r\n        \"POST\",\r\n        {\r\n          email: email,\r\n          password: password,\r\n          username: username,\r\n          lastname: lastname,\r\n          firstname: firstname,\r\n          verify: +verificationCode === verifyCodeRef.current,\r\n        },\r\n        \"signup\"\r\n      );\r\n      setWaitForResponse(false);\r\n      if (message) {\r\n        setError(message);\r\n      } else {\r\n        dispatch({ type: \"setAuthenticated\", value: true });\r\n        dispatch({ type: \"playerInfo\", value: user });\r\n        socket.auth.player = {\r\n          playername: user.username,\r\n          photo: user.photo,\r\n        };\r\n        socket.connect();\r\n      }\r\n    }\r\n  };\r\n\r\n  const resendVerificationCode = async (event) => {\r\n    event.preventDefault();\r\n    setSendMail(true);\r\n    const { message, verifyCode } = await callAPI(\r\n      \"POST\",\r\n      {\r\n        email: email,\r\n        lastname: lastname,\r\n      },\r\n      \"signup/verify-email\"\r\n    );\r\n    setSendMail(false);\r\n    if (message) {\r\n      setError(message);\r\n    } else {\r\n      verifyCodeRef.current = verifyCode;\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 3 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          {error ? <p className=\"error-message\">{error}</p> : null}\r\n          <Form\r\n            onSubmit={verify ? handleSignUp : handleVerifyEmail}\r\n            method=\"POST\"\r\n          >\r\n            <Form.Group\r\n              controlId=\"username\"\r\n              style={{ display: verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>Username</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  isInvalid={invalidUsernameMess !== \"\"}\r\n                  onChange={handleUsernameChange}\r\n                  value={username}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidUsernameMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"firstname\"\r\n              style={{ display: verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>Firstname</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  isInvalid={invalidFirstname !== \"\"}\r\n                  onChange={handleFirstnameChange}\r\n                  value={firstname}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidFirstname}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"lastname\"\r\n              style={{ display: verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>Lastname</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  isInvalid={invalidLastname !== \"\"}\r\n                  onChange={handleLastnameChange}\r\n                  value={lastname}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidLastname}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"email\"\r\n              style={{ display: verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>Email</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  isInvalid={invalidEmailMess !== \"\"}\r\n                  onChange={handleEmailChange}\r\n                  value={email}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidEmailMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group\r\n              controlId=\"password\"\r\n              style={{ display: verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>Password</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  isInvalid={invalidPasswordMess !== \"\"}\r\n                  onChange={handlePasswordChange}\r\n                  value={password}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidPasswordMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"verificationCode\"\r\n              style={{ display: !verify ? \"none\" : \"block\" }}\r\n            >\r\n              <Form.Label style={{ float: \"left\" }}>\r\n                Enter your verification code\r\n              </Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"verificationCode\"\r\n                  isInvalid={invalidCodeMess !== \"\"}\r\n                  onChange={handleVerificationCodeChange}\r\n                  value={verificationCode}\r\n                  placeholder=\"Verification Code\"\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidCodeMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">\r\n              {waitForResponse ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : !verify ? (\r\n                \"Create Account\"\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              style={{ display: !verify ? \"none\" : \"inline\", marginTop: \"7px\" }}\r\n              onClick={resendVerificationCode}\r\n            >\r\n              {sendMail ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Resend\"\r\n              )}\r\n            </Button>\r\n          </Form>\r\n          <p\r\n            className=\"seperator\"\r\n            style={{ display: verify ? \"none\" : \"flex\" }}\r\n          >\r\n            <span></span>\r\n            <span className=\"seperator-text\">or connect with</span>\r\n            <span></span>\r\n          </p>\r\n          <div\r\n            className=\"social-login\"\r\n            style={{ display: verify ? \"none\" : \"flex\" }}\r\n          >\r\n            <a className=\"google\" href=\"http://localhost:8080/auth/google\">\r\n              <i className=\"fab fa-google\"></i> Google\r\n            </a>\r\n            <a className=\"facebook\" href=\"http://localhost:8080/auth/facebook\">\r\n              <i className=\"fab fa-facebook \"></i> Facebook\r\n            </a>\r\n            <a className=\"github\" href=\"http://localhost:8080/auth/github\">\r\n              <i className=\"fab fa-github \"></i> Github\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}