{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\GamePlayArea\\\\Pause\\\\Pause.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport \"./Pause.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SocketContext, TimerContext } from \"../../../../App/App.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const socket = useContext(SocketContext);\n  const timer = useContext(TimerContext);\n  const time = useSelector(state => state.gameState.pauseTime);\n  const minute = Math.floor(time / 60);\n  const second = time % 60;\n  useEffect(() => {\n    if (time === 0) {\n      const listItemRef = /*#__PURE__*/React.createRef();\n\n      if (!/Resumed/.test(props.pause)) {\n        dispatch({\n          type: \"setPause\",\n          value: \"Timeout\"\n        });\n        dispatch({\n          type: \"setPauseTime\",\n          value: \"timeout\"\n        });\n        timer.postMessage(true);\n        dispatch({\n          type: \"setMessage\",\n          value: {\n            from: \"\",\n            message: \"Pause Timeout\",\n            className: \"game-message\",\n            ref: listItemRef\n          }\n        });\n        socket.emit(\"pauseTimeout\");\n      } else {\n        dispatch({\n          type: \"setPause\",\n          value: \"resume game\"\n        });\n      }\n    }\n\n    socket.on(\"pauseOver\", () => {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      dispatch({\n        type: \"setPause\",\n        value: \"Timeout\"\n      });\n      dispatch({\n        type: \"setPauseTime\",\n        value: \"timeout\"\n      });\n      timer.postMessage(true);\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          from: \"\",\n          message: \"Pause Timeout\",\n          className: \"game-message\",\n          ref: listItemRef\n        }\n      });\n    });\n    return () => {\n      socket.removeAllListeners(\"pauseOver\");\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"pause-timer\",\n    children: [/Paused/.test(props.pause) ? \"Resume In\" : \"Game Will Start In\", \":\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"owFJUt0Mv6xUJlV3SU2z7eHYtlM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Timer;\n\nconst Pause = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const pause = useSelector(state => state.gameState.pause);\n  const [boardWidth, boardHeight] = useSelector(state => state.boardState.boardSize);\n  const socket = useContext(SocketContext);\n  const timer = useContext(TimerContext);\n  useEffect(() => {\n    if (pause) {\n      if (/Paused/.test(pause)) {\n        timer.onmessage = () => {\n          dispatch({\n            type: \"setPauseTime\",\n            value: null\n          });\n        };\n      } else if (/Resumed/.test(pause)) {\n        dispatch({\n          type: \"setPauseTime\",\n          value: \"timeout\"\n        });\n        timer.postMessage(true);\n      }\n    }\n\n    socket.on(\"gamePaused\", () => {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      const message = {\n        from: \"Phan Gia Huy\",\n        message: \"Paused Game\",\n        className: \"game-message\",\n        ref: listItemRef\n      };\n      dispatch({\n        type: \"setMessage\",\n        value: message\n      });\n      dispatch({\n        type: \"setPause\",\n        value: \"Opponent Paused Game\"\n      });\n    });\n    socket.on(\"opponentResumeGame\", () => {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      const message = {\n        from: \"Phan Gia Huy\",\n        message: \"Resumed Game\",\n        className: \"game-message\",\n        ref: listItemRef\n      };\n      dispatch({\n        type: \"setMessage\",\n        value: message\n      });\n      dispatch({\n        type: \"setPause\",\n        value: \"Opponent Resumed Game\"\n      });\n    });\n    return () => {\n      socket.removeAllListeners(\"gamePaused\");\n    };\n  }, [pause]);\n  if (!pause) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pause\",\n    style: {\n      width: `${boardWidth}px`,\n      height: `${boardHeight}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pause-announce\",\n        children: pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        pause: pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Pause, \"xYB5+vF9Iiri6rwJ/8U5u6dOA/g=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = Pause;\nexport default Pause;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"Pause\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/GamePlayArea/Pause/Pause.jsx"],"names":["React","useContext","useEffect","useSelector","useDispatch","SocketContext","TimerContext","Timer","props","dispatch","socket","timer","time","state","gameState","pauseTime","minute","Math","floor","second","listItemRef","createRef","test","pause","type","value","postMessage","from","message","className","ref","emit","on","removeAllListeners","Pause","boardWidth","boardHeight","boardState","boardSize","onmessage","width","height"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport \"./Pause.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SocketContext, TimerContext } from \"../../../../App/App.jsx\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const timer = useContext(TimerContext);\r\n  const time = useSelector((state) => state.gameState.pauseTime);\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      const listItemRef = React.createRef();\r\n      if (!/Resumed/.test(props.pause)) {\r\n        dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        timer.postMessage(true);\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            from: \"\",\r\n            message: \"Pause Timeout\",\r\n            className: \"game-message\",\r\n            ref: listItemRef,\r\n          },\r\n        });\r\n        socket.emit(\"pauseTimeout\");\r\n      } else {\r\n        dispatch({ type: \"setPause\", value: \"resume game\" });\r\n      }\r\n    }\r\n\r\n    socket.on(\"pauseOver\", () => {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n      dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n      timer.postMessage(true);\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          from: \"\",\r\n          message: \"Pause Timeout\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"pauseOver\");\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <p className=\"pause-timer\">\r\n      {/Paused/.test(props.pause) ? \"Resume In\" : \"Game Will Start In\"}:{\" \"}\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Pause = () => {\r\n  const dispatch = useDispatch();\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const socket = useContext(SocketContext);\r\n  const timer = useContext(TimerContext);\r\n\r\n  useEffect(() => {\r\n    if (pause) {\r\n      if (/Paused/.test(pause)) {\r\n        timer.onmessage = () => {\r\n          dispatch({ type: \"setPauseTime\", value: null });\r\n        };\r\n      } else if (/Resumed/.test(pause)) {\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        timer.postMessage(true);\r\n      }\r\n    }\r\n\r\n    socket.on(\"gamePaused\", () => {\r\n      const listItemRef = React.createRef();\r\n      const message = {\r\n        from: \"Phan Gia Huy\",\r\n        message: \"Paused Game\",\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({ type: \"setPause\", value: \"Opponent Paused Game\" });\r\n    });\r\n\r\n    socket.on(\"opponentResumeGame\", () => {\r\n      const listItemRef = React.createRef();\r\n      const message = {\r\n        from: \"Phan Gia Huy\",\r\n        message: \"Resumed Game\",\r\n        className: \"game-message\",\r\n        ref: listItemRef,\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({ type: \"setPause\", value: \"Opponent Resumed Game\" });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"gamePaused\");\r\n    };\r\n  }, [pause]);\r\n\r\n  if (!pause) return null;\r\n  return (\r\n    <div\r\n      className=\"pause\"\r\n      style={{\r\n        width: `${boardWidth}px`,\r\n        height: `${boardHeight}px`,\r\n      }}\r\n    >\r\n      <div>\r\n        <p className=\"pause-announce\">{pause}</p>\r\n        <Timer pause={pause} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pause;\r\n"]},"metadata":{},"sourceType":"module"}