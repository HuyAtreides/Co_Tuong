{"ast":null,"code":"import{useEffect}from\"react\";import{useDispatch,useStore}from\"react-redux\";import{useLocation}from\"react-router-dom\";var useHandleRoutingWhilePlaying=function useHandleRoutingWhilePlaying(socket,setMoveTimer){var store=useStore();var location=useLocation();var dispatch=useDispatch();useEffect(function(){var foundMatch=store.getState().gameState.foundMatch;var opponentInfo=store.getState().gameState.opponentInfo;var result=store.getState().gameState.gameResult;if(result===undefined)return;if(foundMatch&&location.pathname!==\"/\"&&!result){dispatch({type:\"setGameResult\",value:\"Lose\"});dispatch({type:\"setMessage\",value:{type:\"game result message\",winner:\"\".concat(opponentInfo.playername,\" Won - \"),reason:\"Game Abandoned\",className:\"game-message\"}});setMoveTimer(null,true,dispatch);socket.emit(\"gameFinish\",[\"Won\",\"Game Abandoned\"]);}},[location]);};export default useHandleRoutingWhilePlaying;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/useHandleRoutingWhilePlaying.js"],"names":["useEffect","useDispatch","useStore","useLocation","useHandleRoutingWhilePlaying","socket","setMoveTimer","store","location","dispatch","foundMatch","getState","gameState","opponentInfo","result","gameResult","undefined","pathname","type","value","winner","playername","reason","className","emit"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,aAAtC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACC,MAAD,CAASC,YAAT,CAA0B,CAC7D,GAAMC,CAAAA,KAAK,CAAGL,QAAQ,EAAtB,CACA,GAAMM,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,UAAU,CAAGH,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BF,UAA9C,CACA,GAAMG,CAAAA,YAAY,CAAGN,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BC,YAAhD,CACA,GAAMC,CAAAA,MAAM,CAAGP,KAAK,CAACI,QAAN,GAAiBC,SAAjB,CAA2BG,UAA1C,CACA,GAAID,MAAM,GAAKE,SAAf,CAA0B,OAC1B,GAAIN,UAAU,EAAIF,QAAQ,CAACS,QAAT,GAAsB,GAApC,EAA2C,CAACH,MAAhD,CAAwD,CACtDL,QAAQ,CAAC,CAAES,IAAI,CAAE,eAAR,CAAyBC,KAAK,CAAE,MAAhC,CAAD,CAAR,CACAV,QAAQ,CAAC,CACPS,IAAI,CAAE,YADC,CAEPC,KAAK,CAAE,CACLD,IAAI,CAAE,qBADD,CAELE,MAAM,WAAKP,YAAY,CAACQ,UAAlB,WAFD,CAGLC,MAAM,CAAE,gBAHH,CAILC,SAAS,CAAE,cAJN,CAFA,CAAD,CAAR,CASAjB,YAAY,CAAC,IAAD,CAAO,IAAP,CAAaG,QAAb,CAAZ,CACAJ,MAAM,CAACmB,IAAP,CAAY,YAAZ,CAA0B,CAAC,KAAD,CAAQ,gBAAR,CAA1B,EACD,CACF,CAnBQ,CAmBN,CAAChB,QAAD,CAnBM,CAAT,CAoBD,CAzBD,CA2BA,cAAeJ,CAAAA,4BAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\r\n  const store = useStore();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const foundMatch = store.getState().gameState.foundMatch;\r\n    const opponentInfo = store.getState().gameState.opponentInfo;\r\n    const result = store.getState().gameState.gameResult;\r\n    if (result === undefined) return;\r\n    if (foundMatch && location.pathname !== \"/\" && !result) {\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponentInfo.playername} Won - `,\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [location]);\r\n};\r\n\r\nexport default useHandleRoutingWhilePlaying;\r\n"]},"metadata":{},"sourceType":"module"}