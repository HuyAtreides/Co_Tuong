{"ast":null,"code":"import Piece from \"./piece.js\";\nimport advisorRules from \"./move_rules/advisorRules.js\";\n\nclass Advisor extends Piece {\n  constructor(width, row, col, name, choosenSide) {\n    super(width, row, col, name, choosenSide);\n    this.moves = advisorRules;\n    this.minCol = 3;\n    this.maxCol = 5;\n    this.minRow = this.side === this.choosenSide[0] ? 0 : 7;\n    this.maxRow = this.side === this.choosenSide[0] ? 2 : 9;\n  }\n\n  countPiecesBetween(newRow, newCol, board) {\n    let [curRow, curCol] = this.position;\n    let count = 0;\n\n    do {\n      curCol += curCol > newCol ? -1 : 1;\n      curRow += curRow > newRow ? -1 : 1;\n      if (board[curRow][curCol]) count++;\n    } while (curCol !== newCol || curRow !== newRow);\n\n    return count;\n  }\n\n  canCaptureGeneral() {\n    return false;\n  }\n\n}\n\nexport default Advisor;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/advisor.js"],"names":["Piece","advisorRules","Advisor","constructor","width","row","col","name","choosenSide","moves","minCol","maxCol","minRow","side","maxRow","countPiecesBetween","newRow","newCol","board","curRow","curCol","position","count","canCaptureGeneral"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,OAAN,SAAsBF,KAAtB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,WAAxB,EAAqC;AAC9C,UAAMJ,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,WAA7B;AACA,SAAKC,KAAL,GAAaR,YAAb;AACA,SAAKS,MAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,MAAL,GAAc,KAAKC,IAAL,KAAc,KAAKL,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,CAAtD;AACA,SAAKM,MAAL,GAAc,KAAKD,IAAL,KAAc,KAAKL,WAAL,CAAiB,CAAjB,CAAd,GAAoC,CAApC,GAAwC,CAAtD;AACD;;AAEDO,EAAAA,kBAAkB,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwB;AACxC,QAAI,CAACC,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA5B;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,OAAG;AACDF,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACAE,MAAAA,MAAM,IAAIA,MAAM,GAAGH,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAjC;AACA,UAAIE,KAAK,CAACC,MAAD,CAAL,CAAcC,MAAd,CAAJ,EAA2BE,KAAK;AACjC,KAJD,QAISF,MAAM,KAAKH,MAAX,IAAqBE,MAAM,KAAKH,MAJzC;;AAMA,WAAOM,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAP;AACD;;AAxByB;;AA2B5B,eAAerB,OAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport advisorRules from \"./move_rules/advisorRules.js\";\r\n\r\nclass Advisor extends Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    super(width, row, col, name, choosenSide);\r\n    this.moves = advisorRules;\r\n    this.minCol = 3;\r\n    this.maxCol = 5;\r\n    this.minRow = this.side === this.choosenSide[0] ? 0 : 7;\r\n    this.maxRow = this.side === this.choosenSide[0] ? 2 : 9;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    do {\r\n      curCol += curCol > newCol ? -1 : 1;\r\n      curRow += curRow > newRow ? -1 : 1;\r\n      if (board[curRow][curCol]) count++;\r\n    } while (curCol !== newCol || curRow !== newRow);\r\n\r\n    return count;\r\n  }\r\n\r\n  canCaptureGeneral() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Advisor;\r\n"]},"metadata":{},"sourceType":"module"}