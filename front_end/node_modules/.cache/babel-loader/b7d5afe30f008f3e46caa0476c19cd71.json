{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Form, InputGroup } from \"react-bootstrap\";\nimport \"./Login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\u1EDD T\\u01B0\\u1EDBng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username-or-email\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          hasValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            isInvalid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please choose a username.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Xius+RyVkKjVOKh2xpz3nOm3Gu4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Login/Login.jsx"],"names":["React","useState","Container","Form","InputGroup","Login","props","login","setLogin","invalidMessage","setInvalidMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,iBAA5C;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,WAAW,MAAvB;AAAA,kCACE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,QAAQ,MAAlC;AAAmC,YAAA,SAAS;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,YAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnBD;;GAAMI,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Form, InputGroup } from \"react-bootstrap\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = (props) => {\r\n  const [login, setLogin] = useState(false);\r\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Cờ Tướng</h1>\r\n      <Form>\r\n        <Form.Group controlId=\"username-or-email\">\r\n          <InputGroup hasValidate>\r\n            <Form.Control type=\"text\" required isInvalid />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please choose a username.\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}