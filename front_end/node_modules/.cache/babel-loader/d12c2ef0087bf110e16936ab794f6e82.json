{"ast":null,"code":"import Piece from \"./piece.js\";\nimport cannonRules from \"./move_rules/cannonRules.js\";\n\nclass Cannon extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = cannonRules;\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    this.translate = `translate(${curCol * this.width}, ${curRow * this.width})`;\n\n    if (this.checkValidMove(newRow, newCol, board)) {\n      if (!board[newRow][newCol].side) {\n        if (this.countPiecesBetween(newRow, newCol, board) === 0) return this.setPosition(false, newRow, newCol);\n      } else if (board[newRow][newCol].side !== board[curRow][curCol].side) if (this.countPiecesBetween(newRow, newCol, board) === 2) return this.setPosition(true, newRow, newCol);\n    }\n  }\n\n  canCaptureGeneral(board) {\n    const [curRow, curCol] = this.position;\n\n    for (let move of this.moves) {\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\n\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\n        if (board[newRow][newCol].side) if (board[newRow][newCol].side !== board[curRow][curCol].side) if (this.countPiecesBetween(newRow, newCol, board) === 2) if (board[newRow][newCol].name.split(\"-\")[0] === \"general\") return true;\n      }\n    }\n  }\n\n}\n\nexport default Cannon;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/cannon.js"],"names":["Piece","cannonRules","Cannon","constructor","width","row","col","name","moves","setNewPosition","x","y","board","newCol","Math","floor","newRow","curRow","curCol","position","translate","checkValidMove","side","countPiecesBetween","setPosition","canCaptureGeneral","move","split"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,MAAN,SAAqBF,KAArB,CAA2B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaP,WAAb;AACD;;AAEDQ,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAc;AAC1B,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,KAAKN,KAApB,CAAf;AACA,UAAMY,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,KAAKP,KAApB,CAAf;AACA,UAAM,CAACa,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,SAAKC,SAAL,GAAkB,aAAYF,MAAM,GAAG,KAAKd,KAAM,KAChDa,MAAM,GAAG,KAAKb,KACf,GAFD;;AAGA,QAAI,KAAKiB,cAAL,CAAoBL,MAApB,EAA4BH,MAA5B,EAAoCD,KAApC,CAAJ,EAAgD;AAC9C,UAAI,CAACA,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAA3B,EAAiC;AAC/B,YAAI,KAAKC,kBAAL,CAAwBP,MAAxB,EAAgCH,MAAhC,EAAwCD,KAAxC,MAAmD,CAAvD,EACE,OAAO,KAAKY,WAAL,CAAiB,KAAjB,EAAwBR,MAAxB,EAAgCH,MAAhC,CAAP;AACH,OAHD,MAGO,IAAID,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAAtB,KAA+BV,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBI,IAAzD,EACL,IAAI,KAAKC,kBAAL,CAAwBP,MAAxB,EAAgCH,MAAhC,EAAwCD,KAAxC,MAAmD,CAAvD,EACE,OAAO,KAAKY,WAAL,CAAiB,IAAjB,EAAuBR,MAAvB,EAA+BH,MAA/B,CAAP;AACL;AACF;;AAEDY,EAAAA,iBAAiB,CAACb,KAAD,EAAQ;AACvB,UAAM,CAACK,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;;AACA,SAAK,IAAIO,IAAT,IAAiB,KAAKlB,KAAtB,EAA6B;AAC3B,YAAM,CAACQ,MAAD,EAASH,MAAT,IAAmB,CAACI,MAAM,GAAGS,IAAI,CAAC,CAAD,CAAd,EAAmBR,MAAM,GAAGQ,IAAI,CAAC,CAAD,CAAhC,CAAzB;;AACA,UAAIb,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BG,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,YAAIJ,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAA1B,EACE,IAAIV,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBS,IAAtB,KAA+BV,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBI,IAAzD,EACE,IAAI,KAAKC,kBAAL,CAAwBP,MAAxB,EAAgCH,MAAhC,EAAwCD,KAAxC,MAAmD,CAAvD,EACE,IAAIA,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBN,IAAtB,CAA2BoB,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,MAA6C,SAAjD,EACE,OAAO,IAAP;AACT;AACF;AACF;;AAnCwB;;AAsC3B,eAAezB,MAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport cannonRules from \"./move_rules/cannonRules.js\";\r\n\r\nclass Cannon extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = cannonRules;\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    this.translate = `translate(${curCol * this.width}, ${\r\n      curRow * this.width\r\n    })`;\r\n    if (this.checkValidMove(newRow, newCol, board)) {\r\n      if (!board[newRow][newCol].side) {\r\n        if (this.countPiecesBetween(newRow, newCol, board) === 0)\r\n          return this.setPosition(false, newRow, newCol);\r\n      } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n        if (this.countPiecesBetween(newRow, newCol, board) === 2)\r\n          return this.setPosition(true, newRow, newCol);\r\n    }\r\n  }\r\n\r\n  canCaptureGeneral(board) {\r\n    const [curRow, curCol] = this.position;\r\n    for (let move of this.moves) {\r\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n        if (board[newRow][newCol].side)\r\n          if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n            if (this.countPiecesBetween(newRow, newCol, board) === 2)\r\n              if (board[newRow][newCol].name.split(\"-\")[0] === \"general\")\r\n                return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Cannon;\r\n"]},"metadata":{},"sourceType":"module"}