{"ast":null,"code":"import _toConsumableArray from\"F:/Web/C\\u1EDD T\\u01B0\\u1EDBng/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import initializeBoard from\"../Components/Main/Game/Board/initializeBoard.js\";var defaultState={board:initializeBoard(520/9,[\"red\",\"black\"]),targetDisplay:\"none\",targetTranslate:\"translate(0, 0)\",boardSize:[520,520/(521/577)],currentPiece:null,getClicked:false,draggable:false,capturedPieces:[],turnToMove:false,side:[\"red\",\"black\"]};var boardReducer=function boardReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;var newState=Object.assign({},state);var type=action.type,value=action.value;switch(type){case\"setBoard\":newState.board=value;return newState;case\"setTargetDisplay\":newState.targetDisplay=value;return newState;case\"setTargetTranslate\":newState.targetTranslate=value;return newState;case\"setBoardSize\":newState.boardSize=value;return newState;case\"setCurrentPiece\":newState.currentPiece=value;return newState;case\"setGetClicked\":newState.getClicked=value;return newState;case\"setDraggable\":newState.draggable=value;return newState;case\"setCapturedPieces\":var newCapturedPieces=_toConsumableArray(newState.capturedPieces);newCapturedPieces.push(value);newState.capturedPieces=newCapturedPieces;return newState;case\"setTurnToMove\":newState.turnToMove=value;return newState;case\"switchSide\":var width=+document.querySelector(\".board-container\").offsetWidth;newState.board=initializeBoard(width/9,value);newState.side=value;return newState;case\"resetBoardState\":defaultState.board=initializeBoard(value/9,[\"red\",\"black\"]);defaultState.boardSize=[value,value/(521/577)];return defaultState;default:return state;}};export default boardReducer;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/reducer/boardReducer.js"],"names":["initializeBoard","defaultState","board","targetDisplay","targetTranslate","boardSize","currentPiece","getClicked","draggable","capturedPieces","turnToMove","side","boardReducer","state","action","newState","Object","assign","type","value","newCapturedPieces","push","width","document","querySelector","offsetWidth"],"mappings":"uKAAA,MAAOA,CAAAA,eAAP,KAA4B,kDAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAEF,eAAe,CAAC,IAAM,CAAP,CAAU,CAAC,KAAD,CAAQ,OAAR,CAAV,CADH,CAEnBG,aAAa,CAAE,MAFI,CAGnBC,eAAe,CAAE,iBAHE,CAInBC,SAAS,CAAE,CAAC,GAAD,CAAM,KAAO,IAAM,GAAb,CAAN,CAJQ,CAKnBC,YAAY,CAAE,IALK,CAMnBC,UAAU,CAAE,KANO,CAOnBC,SAAS,CAAE,KAPQ,CAQnBC,cAAc,CAAE,EARG,CASnBC,UAAU,CAAE,KATO,CAUnBC,IAAI,CAAE,CAAC,KAAD,CAAQ,OAAR,CAVa,CAArB,CAaA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBZ,YAAyB,IAAXa,CAAAA,MAAW,2CACrD,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBJ,KAAlB,CAAjB,CADqD,GAE7CK,CAAAA,IAF6C,CAE7BJ,MAF6B,CAE7CI,IAF6C,CAEvCC,KAFuC,CAE7BL,MAF6B,CAEvCK,KAFuC,CAGrD,OAAQD,IAAR,EACE,IAAK,UAAL,CACEH,QAAQ,CAACb,KAAT,CAAiBiB,KAAjB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,kBAAL,CACEA,QAAQ,CAACZ,aAAT,CAAyBgB,KAAzB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,oBAAL,CACEA,QAAQ,CAACX,eAAT,CAA2Be,KAA3B,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,cAAL,CACEA,QAAQ,CAACV,SAAT,CAAqBc,KAArB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,iBAAL,CACEA,QAAQ,CAACT,YAAT,CAAwBa,KAAxB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,eAAL,CACEA,QAAQ,CAACR,UAAT,CAAsBY,KAAtB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,cAAL,CACEA,QAAQ,CAACP,SAAT,CAAqBW,KAArB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,mBAAL,CACE,GAAMK,CAAAA,iBAAiB,oBAAOL,QAAQ,CAACN,cAAhB,CAAvB,CACAW,iBAAiB,CAACC,IAAlB,CAAuBF,KAAvB,EACAJ,QAAQ,CAACN,cAAT,CAA0BW,iBAA1B,CACA,MAAOL,CAAAA,QAAP,CACF,IAAK,eAAL,CACEA,QAAQ,CAACL,UAAT,CAAsBS,KAAtB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,YAAL,CACE,GAAMO,CAAAA,KAAK,CAAG,CAACC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,WAA1D,CACAV,QAAQ,CAACb,KAAT,CAAiBF,eAAe,CAACsB,KAAK,CAAG,CAAT,CAAYH,KAAZ,CAAhC,CACAJ,QAAQ,CAACJ,IAAT,CAAgBQ,KAAhB,CACA,MAAOJ,CAAAA,QAAP,CACF,IAAK,iBAAL,CACEd,YAAY,CAACC,KAAb,CAAqBF,eAAe,CAACmB,KAAK,CAAG,CAAT,CAAY,CAAC,KAAD,CAAQ,OAAR,CAAZ,CAApC,CACAlB,YAAY,CAACI,SAAb,CAAyB,CAACc,KAAD,CAAQA,KAAK,EAAI,IAAM,GAAV,CAAb,CAAzB,CACA,MAAOlB,CAAAA,YAAP,CACF,QACE,MAAOY,CAAAA,KAAP,CAxCJ,CA0CD,CA7CD,CA+CA,cAAeD,CAAAA,YAAf","sourcesContent":["import initializeBoard from \"../Components/Main/Game/Board/initializeBoard.js\";\r\n\r\nconst defaultState = {\r\n  board: initializeBoard(520 / 9, [\"red\", \"black\"]),\r\n  targetDisplay: \"none\",\r\n  targetTranslate: \"translate(0, 0)\",\r\n  boardSize: [520, 520 / (521 / 577)],\r\n  currentPiece: null,\r\n  getClicked: false,\r\n  draggable: false,\r\n  capturedPieces: [],\r\n  turnToMove: false,\r\n  side: [\"red\", \"black\"],\r\n};\r\n\r\nconst boardReducer = (state = defaultState, action) => {\r\n  const newState = Object.assign({}, state);\r\n  const { type, value } = action;\r\n  switch (type) {\r\n    case \"setBoard\":\r\n      newState.board = value;\r\n      return newState;\r\n    case \"setTargetDisplay\":\r\n      newState.targetDisplay = value;\r\n      return newState;\r\n    case \"setTargetTranslate\":\r\n      newState.targetTranslate = value;\r\n      return newState;\r\n    case \"setBoardSize\":\r\n      newState.boardSize = value;\r\n      return newState;\r\n    case \"setCurrentPiece\":\r\n      newState.currentPiece = value;\r\n      return newState;\r\n    case \"setGetClicked\":\r\n      newState.getClicked = value;\r\n      return newState;\r\n    case \"setDraggable\":\r\n      newState.draggable = value;\r\n      return newState;\r\n    case \"setCapturedPieces\":\r\n      const newCapturedPieces = [...newState.capturedPieces];\r\n      newCapturedPieces.push(value);\r\n      newState.capturedPieces = newCapturedPieces;\r\n      return newState;\r\n    case \"setTurnToMove\":\r\n      newState.turnToMove = value;\r\n      return newState;\r\n    case \"switchSide\":\r\n      const width = +document.querySelector(\".board-container\").offsetWidth;\r\n      newState.board = initializeBoard(width / 9, value);\r\n      newState.side = value;\r\n      return newState;\r\n    case \"resetBoardState\":\r\n      defaultState.board = initializeBoard(value / 9, [\"red\", \"black\"]);\r\n      defaultState.boardSize = [value, value / (521 / 577)];\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n"]},"metadata":{},"sourceType":"module"}