{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useStore, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\n  _s();\n\n  const store = useStore();\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const result = store.getState().gameState.gameResult;\n    if (result === undefined) return;\n\n    if (foundMatch && location.pathname !== \"/\" && !result) {\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Opponent Won - \",\n          reason: \"Game Abandoned\",\n          className: \"game-message\"\n        }\n      });\n      setMoveTimer(null, true, dispatch);\n      console.log([socket.id, socket.opponentID]);\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\n      console.log(new Date().getTime());\n      console.log(\"lost\");\n    }\n  }, [location, foundMatch]);\n};\n\n_s(useHandleRoutingWhilePlaying, \"Mm2SCwHwEugO53O5+a9fI3v/JAs=\", false, function () {\n  return [useStore, useSelector, useLocation, useDispatch];\n});\n\nexport default useHandleRoutingWhilePlaying;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/useHandleRoutingWhilePlaying.js"],"names":["useEffect","useDispatch","useStore","useSelector","useLocation","useHandleRoutingWhilePlaying","socket","setMoveTimer","store","foundMatch","state","gameState","location","dispatch","result","getState","gameResult","undefined","pathname","type","value","winner","reason","className","console","log","id","opponentID","emit","Date","getTime"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,4BAA4B,GAAG,CAACC,MAAD,EAASC,YAAT,KAA0B;AAAA;;AAC7D,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBF,UAA5B,CAA9B;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGZ,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGN,KAAK,CAACO,QAAN,GAAiBJ,SAAjB,CAA2BK,UAA1C;AACA,QAAIF,MAAM,KAAKG,SAAf,EAA0B;;AAC1B,QAAIR,UAAU,IAAIG,QAAQ,CAACM,QAAT,KAAsB,GAApC,IAA2C,CAACJ,MAAhD,EAAwD;AACtDD,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAP,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,YADC;AAEPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,IAAI,EAAE,qBADD;AAELE,UAAAA,MAAM,EAAE,iBAFH;AAGLC,UAAAA,MAAM,EAAE,gBAHH;AAILC,UAAAA,SAAS,EAAE;AAJN;AAFA,OAAD,CAAR;AASAhB,MAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,EAAaM,QAAb,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACnB,MAAM,CAACoB,EAAR,EAAYpB,MAAM,CAACqB,UAAnB,CAAZ;AACArB,MAAAA,MAAM,CAACsB,IAAP,CAAY,YAAZ,EAA0B,CAAC,KAAD,EAAQ,gBAAR,CAA1B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAII,IAAJ,GAAWC,OAAX,EAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GApBQ,EAoBN,CAACb,QAAD,EAAWH,UAAX,CApBM,CAAT;AAqBD,CA3BD;;GAAMJ,4B;UACUH,Q,EACKC,W,EACFC,W,EACAH,W;;;AAyBnB,eAAeI,4BAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useStore, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\r\n  const store = useStore();\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const result = store.getState().gameState.gameResult;\r\n    if (result === undefined) return;\r\n    if (foundMatch && location.pathname !== \"/\" && !result) {\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      console.log([socket.id, socket.opponentID]);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n      console.log(new Date().getTime());\r\n      console.log(\"lost\");\r\n    }\r\n  }, [location, foundMatch]);\r\n};\r\n\r\nexport default useHandleRoutingWhilePlaying;\r\n"]},"metadata":{},"sourceType":"module"}