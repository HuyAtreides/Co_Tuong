{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\nimport NavBar from \"./NavBar/NavBar.jsx\";\nimport { Container } from \"react-bootstrap\";\nimport \"./Main.scss\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport Game from \"./Game/Game.jsx\";\nimport { SocketContext } from \"../App/context\";\nimport { Redirect } from \"react-router-dom\";\nimport Warning from \"./Warning/Warning.jsx\";\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [connectionError, setConnectionError] = useState(null);\n  const socket = useContext(SocketContext);\n  const store = useStore();\n  const playerInfo = useSelector(state => state.appState.playerInfo);\n  const loginError = useSelector(state => state.appState.loginError);\n  const isAuthenticated = useSelector(state => state.appState.isAuthenticated);\n  useEffect(() => {\n    socket.on(\"connect_error\", err => {\n      setConnectionError(err.message);\n      socket.close();\n    });\n    socket.on(\"connect\", () => {\n      if (connectionError === \"The connection was closed\") {\n        setConnectionError(\"Successfully reconnect\");\n        setTimeout(() => {\n          setConnectionError(null);\n        }, 1000);\n      }\n    });\n    return () => {\n      socket.removeAllListeners(\"connect_error\");\n      socket.removeAllListeners(\"connect\");\n    };\n  }, [connectionError]);\n  useEffect(() => {\n    socket.on(\"disconnect\", reason => {\n      const foundMatch = store.getState().gameState.foundMatch;\n\n      if (!foundMatch) {\n        dispatch({\n          type: \"setFindingMatch\",\n          value: \"Connection Was Closed\"\n        });\n        setTimeout(() => {\n          dispatch({\n            type: \"setFindingMatch\",\n            value: \"Play\"\n          });\n        }, 700);\n      }\n\n      if (reason !== \"io client disconnect\") {\n        setConnectionError(\"The connection was closed\");\n        socket.open();\n\n        if (foundMatch) {\n          dispatch({\n            type: \"setGameResult\",\n            value: undefined\n          });\n          dispatch({\n            type: \"setMessage\",\n            value: {\n              from: \"\",\n              className: \"game-message\",\n              message: \"The connection was closed\"\n            }\n          });\n        }\n      }\n    });\n    return () => {\n      socket.removeAllListeners(\"disconnect\");\n    };\n  }, []);\n  if (loginError) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        setWaitForResponse: props.setWaitForResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(EntryComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), playerInfo && !playerInfo.guest && !playerInfo.email.verified ? /*#__PURE__*/_jsxDEV(VerifyEmailNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : null, connectionError ? /*#__PURE__*/_jsxDEV(Warning, {\n      connectionError: connectionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"WJQtmCPLhOdz46gEuuuRz0QYmeo=\", false, function () {\n  return [useDispatch, useStore, useSelector, useSelector, useSelector];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Main.jsx"],"names":["React","useEffect","useState","useContext","EntryComponent","NavBar","Container","useSelector","useDispatch","useStore","Game","SocketContext","Redirect","Warning","VerifyEmailNote","Main","props","dispatch","connectionError","setConnectionError","socket","store","playerInfo","state","appState","loginError","isAuthenticated","on","err","message","close","setTimeout","removeAllListeners","reason","foundMatch","getState","gameState","type","value","open","undefined","from","className","setWaitForResponse","guest","email","verified"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { SocketContext } from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Warning from \"./Warning/Warning.jsx\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [connectionError, setConnectionError] = useState(null);\r\n  const socket = useContext(SocketContext);\r\n  const store = useStore();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect_error\", (err) => {\r\n      setConnectionError(err.message);\r\n      socket.close();\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      if (connectionError === \"The connection was closed\") {\r\n        setConnectionError(\"Successfully reconnect\");\r\n        setTimeout(() => {\r\n          setConnectionError(null);\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"connect_error\");\r\n      socket.removeAllListeners(\"connect\");\r\n    };\r\n  }, [connectionError]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", (reason) => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      if (!foundMatch) {\r\n        dispatch({ type: \"setFindingMatch\", value: \"Connection Was Closed\" });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"setFindingMatch\", value: \"Play\" });\r\n        }, 700);\r\n      }\r\n      if (reason !== \"io client disconnect\") {\r\n        setConnectionError(\"The connection was closed\");\r\n        socket.open();\r\n        if (foundMatch) {\r\n          dispatch({ type: \"setGameResult\", value: undefined });\r\n          dispatch({\r\n            type: \"setMessage\",\r\n            value: {\r\n              from: \"\",\r\n              className: \"game-message\",\r\n              message: \"The connection was closed\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"disconnect\");\r\n    };\r\n  }, []);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n\r\n  return (\r\n    <Container fluid>\r\n      <div>\r\n        <NavBar setWaitForResponse={props.setWaitForResponse} />\r\n        {isAuthenticated ? <Game /> : <EntryComponent />}\r\n      </div>\r\n\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote />\r\n      ) : null}\r\n      {connectionError ? <Warning connectionError={connectionError} /> : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}