{"ast":null,"code":"import Piece from \"./piece.js\";\nimport elephantRules from \"./move_rules/elephantRules.js\";\n\nclass Elephant extends Piece {\n  constructor(width, row, col, name) {\n    super(width, row, col, name);\n    this.moves = elephantRules;\n  }\n\n  setNewPosition(x, y, board) {\n    const newCol = Math.floor(x / this.width);\n    const newRow = Math.floor(y / this.width);\n    const [curRow, curCol] = this.position;\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\n    this.translate = `translate(${translateX}, ${translateY})`;\n\n    if (newCol >= 0 && newCol < 9 && newRow >= 5 && newRow < 10) {\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\n        if (!board[newRow][newCol].side) {\n          return this.setPosition(false, newRow, newCol);\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\n          return this.setPosition(true, newRow, newCol);\n        }\n      }\n    }\n\n    return null;\n  }\n\n}\n\nexport default Elephant;","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/pieces/elephant.js"],"names":["Piece","elephantRules","Elephant","constructor","width","row","col","name","moves","setNewPosition","x","y","board","newCol","Math","floor","newRow","curRow","curCol","position","translateX","translateY","translate","checkValidMove","side","setPosition"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAEA,MAAMC,QAAN,SAAuBF,KAAvB,CAA6B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACjC,UAAMH,KAAN,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB;AACA,SAAKC,KAAL,GAAaP,aAAb;AACD;;AAEDQ,EAAAA,cAAc,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAc;AAC1B,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAG,KAAKN,KAApB,CAAf;AACA,UAAMY,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,KAAKP,KAApB,CAAf;AACA,UAAM,CAACa,MAAD,EAASC,MAAT,IAAmB,KAAKC,QAA9B;AACA,UAAM,CAACC,UAAD,EAAaC,UAAb,IAA2B,CAACH,MAAM,GAAG,KAAKd,KAAf,EAAsBa,MAAM,GAAG,KAAKb,KAApC,CAAjC;AACA,SAAKkB,SAAL,GAAkB,aAAYF,UAAW,KAAIC,UAAW,GAAxD;;AACA,QAAIR,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAAxB,IAA6BG,MAAM,IAAI,CAAvC,IAA4CA,MAAM,GAAG,EAAzD,EAA6D;AAC3D,UAAI,KAAKO,cAAL,CAAoBP,MAAM,GAAGC,MAA7B,EAAqCJ,MAAM,GAAGK,MAA9C,CAAJ,EAA2D;AACzD,YAAI,CAACN,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBW,IAA3B,EAAiC;AAC/B,iBAAO,KAAKC,WAAL,CAAiB,KAAjB,EAAwBT,MAAxB,EAAgCH,MAAhC,CAAP;AACD,SAFD,MAEO,IAAID,KAAK,CAACI,MAAD,CAAL,CAAcH,MAAd,EAAsBW,IAAtB,KAA+BZ,KAAK,CAACK,MAAD,CAAL,CAAcC,MAAd,EAAsBM,IAAzD,EAA+D;AACpE,iBAAO,KAAKC,WAAL,CAAiB,IAAjB,EAAuBT,MAAvB,EAA+BH,MAA/B,CAAP;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AAtB0B;;AAyB7B,eAAeX,QAAf","sourcesContent":["import Piece from \"./piece.js\";\r\nimport elephantRules from \"./move_rules/elephantRules.js\";\r\n\r\nclass Elephant extends Piece {\r\n  constructor(width, row, col, name) {\r\n    super(width, row, col, name);\r\n    this.moves = elephantRules;\r\n  }\r\n\r\n  setNewPosition(x, y, board) {\r\n    const newCol = Math.floor(x / this.width);\r\n    const newRow = Math.floor(y / this.width);\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (newCol >= 0 && newCol < 9 && newRow >= 5 && newRow < 10) {\r\n      if (this.checkValidMove(newRow - curRow, newCol - curCol)) {\r\n        if (!board[newRow][newCol].side) {\r\n          return this.setPosition(false, newRow, newCol);\r\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side) {\r\n          return this.setPosition(true, newRow, newCol);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Elephant;\r\n"]},"metadata":{},"sourceType":"module"}