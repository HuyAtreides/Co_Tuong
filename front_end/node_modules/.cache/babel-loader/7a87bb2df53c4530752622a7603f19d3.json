{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\App\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Login from \"../Login/Login.jsx\";\nimport Main from \"../Main/Main.jsx\";\nimport Signup from \"../Signup/Signup.jsx\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080/play\");\nconst timer = new Worker(\"/web_worker_timer/webWorkerTimer.js\");\nconst SocketContext = /*#__PURE__*/React.createContext();\nconst TimerContext = /*#__PURE__*/React.createContext();\n\nfunction App(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const foundMatch = useSelector(state => state.gameState.foundMatch);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    return () => {\n      timer.terminate();\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const location = window.location.href;\n\n    if (foundMatch && location !== \"http://localhost:3000/\") {\n      const listItemRef = /*#__PURE__*/React.createRef();\n      dispatch({\n        type: \"setGameResult\",\n        value: \"Lose\"\n      });\n      dispatch({\n        type: \"setSendGameResult\",\n        value: [\"Won\", \"Opponent Resign\"]\n      });\n      dispatch({\n        type: \"setMessage\",\n        value: {\n          type: \"game result message\",\n          winner: \"Opponent Won - \",\n          reason: \"Opponent Resign\",\n          className: \"game-message\",\n          ref: listItemRef\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: /*#__PURE__*/_jsxDEV(TimerContext.Provider, {\n      value: timer,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              setIsAuthenticated: setIsAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              isAuthenticated: isAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"R8EQHrPq71Re23XzHJHuA1M81YI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport { App, SocketContext, TimerContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/App/App.jsx"],"names":["React","useState","useEffect","Route","Switch","BrowserRouter","Router","useSelector","useDispatch","Login","Main","Signup","io","socket","timer","Worker","SocketContext","createContext","TimerContext","App","props","dispatch","foundMatch","state","gameState","isAuthenticated","setIsAuthenticated","terminate","disconnect","location","window","href","listItemRef","createRef","type","value","winner","reason","className","ref"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Login from \"../Login/Login.jsx\";\r\nimport Main from \"../Main/Main.jsx\";\r\nimport Signup from \"../Signup/Signup.jsx\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:8080/play\");\r\nconst timer = new Worker(\"/web_worker_timer/webWorkerTimer.js\");\r\nconst SocketContext = React.createContext();\r\nconst TimerContext = React.createContext();\r\n\r\nfunction App(props) {\r\n  const dispatch = useDispatch();\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  useEffect(() => {\r\n    return () => {\r\n      timer.terminate();\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    const location = window.location.href;\r\n    if (foundMatch && location !== \"http://localhost:3000/\") {\r\n      const listItemRef = React.createRef();\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setSendGameResult\",\r\n        value: [\"Won\", \"Opponent Resign\"],\r\n      });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: \"Opponent Won - \",\r\n          reason: \"Opponent Resign\",\r\n          className: \"game-message\",\r\n          ref: listItemRef,\r\n        },\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <TimerContext.Provider value={timer}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login setIsAuthenticated={setIsAuthenticated} />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Main isAuthenticated={isAuthenticated} />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </TimerContext.Provider>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport { App, SocketContext, TimerContext };\r\n"]},"metadata":{},"sourceType":"module"}