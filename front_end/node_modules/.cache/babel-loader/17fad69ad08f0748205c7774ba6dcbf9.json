{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\GamePlayArea\\\\Pause\\\\Pause.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport \"./Pause.scss\";\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\nimport { SocketContext, SetMoveTimerContext } from \"../../../../App/context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const socket = useContext(SocketContext);\n  const setMoveTimer = useContext(SetMoveTimerContext);\n  const time = useSelector(state => state.gameState.pauseTime);\n  const minute = Math.floor(time / 60);\n  const second = time % 60;\n  const store = useStore();\n  useEffect(() => {\n    if (time === 0) {\n      if (/Paused/.test(props.pause)) {\n        dispatch({\n          type: \"setPauseTime\",\n          value: \"timeout\"\n        });\n        dispatch({\n          type: \"setPause\",\n          value: \"Timeout\"\n        });\n        socket.emit(\"startTimer\", true);\n      } else {\n        socket.emit(\"startGame\");\n      }\n    }\n\n    socket.on(\"receiveGameStartSignal\", () => {\n      socket.emit(\"receiveGameStartSignalAck\");\n    });\n    socket.on(\"gameStarted\", () => {\n      const turnToMove = store.getState().boardState.turnToMove;\n      dispatch({\n        type: \"setPauseTime\",\n        value: \"restart\"\n      });\n      dispatch({\n        type: \"setPause\",\n        value: null\n      });\n      socket.emit(\"startTimer\", false);\n      dispatch({\n        type: \"setPause\",\n        value: null\n      });\n      dispatch({\n        type: \"setPauseTime\",\n        value: \"restart\"\n      });\n      setMoveTimer(turnToMove, false, dispatch);\n    });\n    return () => {\n      socket.removeAllListeners(\"receiveGameStartSignal\");\n      socket.removeAllListeners(\"gameStarted\");\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"pause-timer\",\n    children: [/Paused/.test(props.pause) ? lang === \"English\" ? \"Resume In\" : \"Tiếp Tục Trong\" : lang === \"English\" ? \"Game Will Start In\" : \"Bắt Đầu Trận Trong\", \":\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"A9Sm8jmZCoMcaooCaIcMthL5iKA=\", false, function () {\n  return [useDispatch, useSelector, useStore];\n});\n\n_c = Timer;\n\nconst Pause = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const lang = useSelector(state => state.appState.lang);\n  const pause = useSelector(state => state.gameState.pause);\n  const [boardWidth, boardHeight] = useSelector(state => state.boardState.boardSize);\n  const store = useStore();\n  const socket = useContext(SocketContext);\n  let pauseAnnounce = pause;\n  useEffect(() => {\n    if (/Resumed/.test(pause)) dispatch({\n      type: \"setPauseTime\",\n      value: \"timeout\"\n    });\n\n    const handleOpponentPauseOrResumeGame = pause => {\n      const opponentInfo = store.getState().gameState.opponentInfo;\n      const action = pause ? \"Paused\" : \"Resumed\";\n      const actionInVi = pause ? \"Dừng\" : \"Tiếp Tục\";\n      const message = {\n        from: `${opponentInfo.playername}`,\n        message: lang === \"English\" ? `${action} Game` : `${actionInVi} Trận`,\n        className: \"game-message\"\n      };\n      dispatch({\n        type: \"setMessage\",\n        value: message\n      });\n      dispatch({\n        type: \"setPause\",\n        value: `${opponentInfo.playername} ${pause ? \"Paused\" : \"Resumed\"} Game`\n      });\n      socket.emit(`receive${pause ? \"Pause\" : \"Resume\"}SignalAck`);\n    };\n\n    socket.on(\"startPauseTimer\", () => {\n      socket.removeAllListeners(\"oneSecondPass\");\n      socket.on(\"oneSecondPass\", () => {\n        dispatch({\n          type: \"setPauseTime\",\n          value: null\n        });\n      });\n      socket.emit(\"startTimer\", true);\n    });\n    socket.on(\"opponentPauseGame\", () => {\n      handleOpponentPauseOrResumeGame(true);\n    });\n    socket.on(\"opponentResumeGame\", () => {\n      handleOpponentPauseOrResumeGame(false);\n    });\n    return () => {\n      socket.removeAllListeners(\"opponentPauseGame\");\n      socket.removeAllListeners(\"opponentResumeGame\");\n      socket.removeAllListeners(\"startPauseTimer\");\n    };\n  }, [pause]);\n  if (!pause) return null;\n\n  if (lang !== \"English\") {\n    const name = pause.split(\" \")[0];\n    if (/Paused/.test(pause)) pauseAnnounce = name + \" Dừng Trận\";else if (/Resumed/.test(pause)) pauseAnnounce = name + \" Tiếp Tục Trận\";else pauseAnnounce = \"Hết Thời Gian Dừng\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pause\",\n    style: {\n      width: `${boardWidth}px`,\n      height: `${boardHeight}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pause-announce\",\n        children: pauseAnnounce\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        pause: pause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Pause, \"oox5xYiAct35niK/pFokOR2w8ao=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useStore];\n});\n\n_c2 = Pause;\nexport default _c3 = /*#__PURE__*/React.memo(Pause);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"Pause\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/GamePlayArea/Pause/Pause.jsx"],"names":["React","useContext","useEffect","useSelector","useDispatch","useStore","SocketContext","SetMoveTimerContext","Timer","props","dispatch","socket","setMoveTimer","time","state","gameState","pauseTime","minute","Math","floor","second","store","test","pause","type","value","emit","on","turnToMove","getState","boardState","removeAllListeners","lang","Pause","appState","boardWidth","boardHeight","boardSize","pauseAnnounce","handleOpponentPauseOrResumeGame","opponentInfo","action","actionInVi","message","from","playername","className","name","split","width","height","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport \"./Pause.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const time = useSelector((state) => state.gameState.pauseTime);\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n  const store = useStore();\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      if (/Paused/.test(props.pause)) {\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n        socket.emit(\"startTimer\", true);\r\n      } else {\r\n        socket.emit(\"startGame\");\r\n      }\r\n    }\r\n\r\n    socket.on(\"receiveGameStartSignal\", () => {\r\n      socket.emit(\"receiveGameStartSignalAck\");\r\n    });\r\n\r\n    socket.on(\"gameStarted\", () => {\r\n      const turnToMove = store.getState().boardState.turnToMove;\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      dispatch({ type: \"setPause\", value: null });\r\n      socket.emit(\"startTimer\", false);\r\n      dispatch({ type: \"setPause\", value: null });\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      setMoveTimer(turnToMove, false, dispatch);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"receiveGameStartSignal\");\r\n      socket.removeAllListeners(\"gameStarted\");\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <p className=\"pause-timer\">\r\n      {/Paused/.test(props.pause)\r\n        ? lang === \"English\"\r\n          ? \"Resume In\"\r\n          : \"Tiếp Tục Trong\"\r\n        : lang === \"English\"\r\n        ? \"Game Will Start In\"\r\n        : \"Bắt Đầu Trận Trong\"}\r\n      :{\" \"}\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Pause = () => {\r\n  const dispatch = useDispatch();\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const store = useStore();\r\n  const socket = useContext(SocketContext);\r\n  let pauseAnnounce = pause;\r\n\r\n  useEffect(() => {\r\n    if (/Resumed/.test(pause))\r\n      dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n\r\n    const handleOpponentPauseOrResumeGame = (pause) => {\r\n      const opponentInfo = store.getState().gameState.opponentInfo;\r\n      const action = pause ? \"Paused\" : \"Resumed\";\r\n      const actionInVi = pause ? \"Dừng\" : \"Tiếp Tục\";\r\n      const message = {\r\n        from: `${opponentInfo.playername}`,\r\n        message: lang === \"English\" ? `${action} Game` : `${actionInVi} Trận`,\r\n        className: \"game-message\",\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({\r\n        type: \"setPause\",\r\n        value: `${opponentInfo.playername} ${\r\n          pause ? \"Paused\" : \"Resumed\"\r\n        } Game`,\r\n      });\r\n      socket.emit(`receive${pause ? \"Pause\" : \"Resume\"}SignalAck`);\r\n    };\r\n\r\n    socket.on(\"startPauseTimer\", () => {\r\n      socket.removeAllListeners(\"oneSecondPass\");\r\n      socket.on(\"oneSecondPass\", () => {\r\n        dispatch({ type: \"setPauseTime\", value: null });\r\n      });\r\n      socket.emit(\"startTimer\", true);\r\n    });\r\n\r\n    socket.on(\"opponentPauseGame\", () => {\r\n      handleOpponentPauseOrResumeGame(true);\r\n    });\r\n\r\n    socket.on(\"opponentResumeGame\", () => {\r\n      handleOpponentPauseOrResumeGame(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentPauseGame\");\r\n      socket.removeAllListeners(\"opponentResumeGame\");\r\n      socket.removeAllListeners(\"startPauseTimer\");\r\n    };\r\n  }, [pause]);\r\n\r\n  if (!pause) return null;\r\n\r\n  if (lang !== \"English\") {\r\n    const name = pause.split(\" \")[0];\r\n    if (/Paused/.test(pause)) pauseAnnounce = name + \" Dừng Trận\";\r\n    else if (/Resumed/.test(pause)) pauseAnnounce = name + \" Tiếp Tục Trận\";\r\n    else pauseAnnounce = \"Hết Thời Gian Dừng\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"pause\"\r\n      style={{\r\n        width: `${boardWidth}px`,\r\n        height: `${boardHeight}px`,\r\n      }}\r\n    >\r\n      <div>\r\n        <p className=\"pause-announce\">{pauseAnnounce}</p>\r\n        <Timer pause={pause} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pause);\r\n"]},"metadata":{},"sourceType":"module"}