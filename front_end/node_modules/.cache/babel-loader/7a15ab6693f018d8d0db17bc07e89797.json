{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\C\\u1EDD T\\u01B0\\u1EDBng\\\\front_end\\\\src\\\\Components\\\\Main\\\\Game\\\\Game.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Game.scss\";\nimport Board from \"./Board/Board\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Timer from \"./Timer/Timer.jsx\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GameController from \"./GameController/GameController.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\n  const [time, setTime] = useState(10);\n  const [timeLeftToMove, setTimeLeftToMove] = useState(10); // const turnToMove = useSelector((state) => state.boardState.turnToMove);\n\n  const handleToggle = () => {\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\n  };\n\n  const handleSelectTime = event => {\n    const selectedTime = event.currentTarget.getAttribute(\"value\");\n    setTime(selectedTime);\n    setTimeLeftToMove(+selectedTime);\n    handleToggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    md: {\n      cols: 2\n    },\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: {\n        span: 4\n      },\n      sm: {\n        span: 11\n      },\n      xs: {\n        span: 11\n      },\n      className: \"board-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-and-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://betacssjs.chesscomfiles.com/bundles/web/images/black_400.918cdaa6.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: \"Opponent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          timeLeftToMove: timeLeftToMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-and-name\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-and-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/user_profile_pic/P.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-name\",\n              children: \"Phan Gia Huy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          timeLeftToMove: timeLeftToMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameController, {\n      time: time,\n      handleSelectTime: handleSelectTime,\n      timeSelectorDisplay: timeSelectorDisplay,\n      handleToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"YXNU3oI6ZA5zXe4XaeQ/M/zLAR8=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/src/Components/Main/Game/Game.jsx"],"names":["React","useState","Board","Row","Col","Timer","Button","useDispatch","useSelector","GameController","Game","props","timeSelectorDisplay","setTimeSelectorDisplay","time","setTime","timeLeftToMove","setTimeLeftToMove","handleToggle","handleSelectTime","event","selectedTime","currentTarget","getAttribute","cols","span"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Game.scss\";\r\nimport Board from \"./Board/Board\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Timer from \"./Timer/Timer.jsx\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\n\r\nconst Game = (props) => {\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const [time, setTime] = useState(10);\r\n  const [timeLeftToMove, setTimeLeftToMove] = useState(10);\r\n  // const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  const handleSelectTime = (event) => {\r\n    const selectedTime = event.currentTarget.getAttribute(\"value\");\r\n    setTime(selectedTime);\r\n    setTimeLeftToMove(+selectedTime);\r\n    handleToggle();\r\n  };\r\n\r\n  return (\r\n    <Row md={{ cols: 2 }} className=\"mt-5\">\r\n      <Col\r\n        md={{ span: 4 }}\r\n        sm={{ span: 11 }}\r\n        xs={{ span: 11 }}\r\n        className=\"board-container\"\r\n      >\r\n        <div className=\"player-area\">\r\n          <div className=\"avatar-and-name\">\r\n            <img\r\n              src=\"https://betacssjs.chesscomfiles.com/bundles/web/images/black_400.918cdaa6.png\"\r\n              alt=\"\"\r\n            />\r\n            <p className=\"user-name\">Opponent</p>\r\n          </div>\r\n          <Timer timeLeftToMove={timeLeftToMove} />\r\n        </div>\r\n        <Board />\r\n        <div className=\"player-area\">\r\n          <div className=\"avatar-and-name\">\r\n            <div className=\"avatar-and-name\">\r\n              <img src=\"/user_profile_pic/P.svg\" alt=\"\" />\r\n              <p className=\"user-name\">Phan Gia Huy</p>\r\n            </div>\r\n          </div>\r\n          <Timer timeLeftToMove={timeLeftToMove} />\r\n        </div>\r\n      </Col>\r\n      <GameController\r\n        time={time}\r\n        handleSelectTime={handleSelectTime}\r\n        timeSelectorDisplay={timeSelectorDisplay}\r\n        handleToggle={handleToggle}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}