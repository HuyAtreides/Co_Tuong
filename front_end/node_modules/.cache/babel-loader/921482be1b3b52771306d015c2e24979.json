{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.batchedSubscribe = batchedSubscribe;\n\nfunction batchedSubscribe(batch) {\n  if (typeof batch !== 'function') {\n    throw new Error('Expected batch to be a function.');\n  }\n\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  function notifyListeners() {\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n  }\n\n  function notifyListenersBatched() {\n    batch(notifyListeners);\n  }\n\n  return function (next) {\n    return function () {\n      var store = next.apply(undefined, arguments);\n      var subscribeImmediate = store.subscribe;\n\n      function dispatch() {\n        var res = store.dispatch.apply(store, arguments);\n        notifyListenersBatched();\n        return res;\n      }\n\n      return _extends({}, store, {\n        dispatch: dispatch,\n        subscribe: subscribe,\n        subscribeImmediate: subscribeImmediate\n      });\n    };\n  };\n}","map":{"version":3,"sources":["F:/Web/Cờ Tướng/front_end/node_modules/redux-batched-subscribe/lib/index.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","batchedSubscribe","batch","Error","currentListeners","nextListeners","ensureCanMutateNextListeners","slice","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","notifyListeners","listeners","notifyListenersBatched","next","store","apply","undefined","subscribeImmediate","dispatch","res"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.batchedSubscribe = batchedSubscribe;\n\nfunction batchedSubscribe(batch) {\n  if (typeof batch !== 'function') {\n    throw new Error('Expected batch to be a function.');\n  }\n\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  function notifyListeners() {\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n  }\n\n  function notifyListenersBatched() {\n    batch(notifyListeners);\n  }\n\n  return function (next) {\n    return function () {\n      var store = next.apply(undefined, arguments);\n      var subscribeImmediate = store.subscribe;\n\n      function dispatch() {\n        var res = store.dispatch.apply(store, arguments);\n        notifyListenersBatched();\n        return res;\n      }\n\n      return _extends({}, store, {\n        dispatch: dispatch,\n        subscribe: subscribe,\n        subscribeImmediate: subscribeImmediate\n      });\n    };\n  };\n}"]},"metadata":{},"sourceType":"script"}