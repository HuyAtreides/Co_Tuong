[{"F:\\Web\\Cờ Tướng\\front_end\\src\\index.jsx":"1","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\piece.js":"2","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\instantiatePiece.js":"3","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\advisor.js":"4","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\general.js":"5","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\cannon.js":"6","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\elephant.js":"7","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\chariot.js":"8","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\horse.js":"9","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\soldier.js":"10","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\chariotRules.js":"11","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\horseRules.js":"12","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\advisorRules.js":"13","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\generalRules.js":"14","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\elephantRules.js":"15","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\cannonRules.js":"16","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\soldierRules.js":"17","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\rootReducer.js":"18","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\boardReducer.js":"19","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Main.jsx":"20","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\EntryComponent\\EntryComponent.jsx":"21","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\NavBar.jsx":"22","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Signup\\Signup.jsx":"23","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\App.jsx":"24","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Game.jsx":"25","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Board.jsx":"26","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Timer\\Timer.jsx":"27","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\initializeBoard.js":"28","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\getSVGLocation.js":"29","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\appReducer.js":"30","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\gameReducer.js":"31","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Piece\\Piece.jsx":"32","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\GameController.jsx":"33","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GamePlayArea.jsx":"34","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\GameBar.jsx":"35","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\ChatSection.jsx":"36","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GameResult\\GameResult.jsx":"37","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\DrawOffer\\DrawOffer.jsx":"38","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\renderMessages.js":"39","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\Pause\\Pause.jsx":"40","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\context.js":"41","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\callAPI.js":"42","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\VerifyEmail\\VerifyEmail.jsx":"43","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\VerifyEmailNote\\VerifyEmailNote.jsx":"44","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\SignIn\\SignIn.jsx":"45","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\PlayWithFriend.jsx":"46","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\renderPlayersList.js":"47","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\renderPendingPlayers.js":"48","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\Invites\\Invites.jsx":"49","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\Invites\\renderInvites.js":"50","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Warning\\Warning.jsx":"51","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayButton\\PlayButton.jsx":"52","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\useHandleRoutingWhilePlaying.js":"53"},{"size":731,"mtime":1617602431724,"results":"54","hashOfConfig":"55"},{"size":7039,"mtime":1617717372384,"results":"56","hashOfConfig":"55"},{"size":1011,"mtime":1614062655316,"results":"57","hashOfConfig":"55"},{"size":843,"mtime":1615369926028,"results":"58","hashOfConfig":"55"},{"size":1188,"mtime":1615550251079,"results":"59","hashOfConfig":"55"},{"size":1725,"mtime":1615550250211,"results":"60","hashOfConfig":"55"},{"size":804,"mtime":1615369931823,"results":"61","hashOfConfig":"55"},{"size":292,"mtime":1614063330081,"results":"62","hashOfConfig":"55"},{"size":1980,"mtime":1615550251907,"results":"63","hashOfConfig":"55"},{"size":942,"mtime":1615465196337,"results":"64","hashOfConfig":"55"},{"size":451,"mtime":1614662801179,"results":"65","hashOfConfig":"55"},{"size":152,"mtime":1614662802067,"results":"66","hashOfConfig":"55"},{"size":108,"mtime":1613373533127,"results":"67","hashOfConfig":"55"},{"size":106,"mtime":1613373658854,"results":"68","hashOfConfig":"55"},{"size":110,"mtime":1615429349011,"results":"69","hashOfConfig":"55"},{"size":449,"mtime":1614662799537,"results":"70","hashOfConfig":"55"},{"size":77,"mtime":1613458402026,"results":"71","hashOfConfig":"55"},{"size":335,"mtime":1614590459472,"results":"72","hashOfConfig":"55"},{"size":1962,"mtime":1617261946856,"results":"73","hashOfConfig":"55"},{"size":4323,"mtime":1617707308710,"results":"74","hashOfConfig":"55"},{"size":824,"mtime":1616402813278,"results":"75","hashOfConfig":"55"},{"size":2934,"mtime":1617531851858,"results":"76","hashOfConfig":"55"},{"size":11433,"mtime":1617523702921,"results":"77","hashOfConfig":"55"},{"size":1281,"mtime":1617602801076,"results":"78","hashOfConfig":"55"},{"size":3441,"mtime":1617621584851,"results":"79","hashOfConfig":"55"},{"size":9380,"mtime":1617717386063,"results":"80","hashOfConfig":"55"},{"size":1537,"mtime":1617603930499,"results":"81","hashOfConfig":"55"},{"size":1998,"mtime":1614492200749,"results":"82","hashOfConfig":"55"},{"size":283,"mtime":1615462144124,"results":"83","hashOfConfig":"55"},{"size":678,"mtime":1617327336448,"results":"84","hashOfConfig":"55"},{"size":2341,"mtime":1616259466155,"results":"85","hashOfConfig":"55"},{"size":717,"mtime":1616391268607,"results":"86","hashOfConfig":"55"},{"size":5984,"mtime":1617621762862,"results":"87","hashOfConfig":"55"},{"size":3551,"mtime":1617705321474,"results":"88","hashOfConfig":"55"},{"size":3341,"mtime":1617608523293,"results":"89","hashOfConfig":"55"},{"size":3088,"mtime":1617621894356,"results":"90","hashOfConfig":"55"},{"size":2291,"mtime":1616216092846,"results":"91","hashOfConfig":"55"},{"size":2710,"mtime":1617339528318,"results":"92","hashOfConfig":"55"},{"size":602,"mtime":1617200766555,"results":"93","hashOfConfig":"55"},{"size":3896,"mtime":1617370277174,"results":"94","hashOfConfig":"55"},{"size":1911,"mtime":1617705107224,"results":"95","hashOfConfig":"55"},{"size":725,"mtime":1617705214567,"results":"96","hashOfConfig":"55"},{"size":4310,"mtime":1617552901272,"results":"97","hashOfConfig":"55"},{"size":688,"mtime":1616393016572,"results":"98","hashOfConfig":"55"},{"size":8079,"mtime":1617523701298,"results":"99","hashOfConfig":"55"},{"size":8279,"mtime":1617554167888,"results":"100","hashOfConfig":"55"},{"size":724,"mtime":1616842423454,"results":"101","hashOfConfig":"55"},{"size":655,"mtime":1617348901108,"results":"102","hashOfConfig":"55"},{"size":2435,"mtime":1617554117171,"results":"103","hashOfConfig":"55"},{"size":1563,"mtime":1617349712756,"results":"104","hashOfConfig":"55"},{"size":553,"mtime":1617330525293,"results":"105","hashOfConfig":"55"},{"size":693,"mtime":1617163098262,"results":"106","hashOfConfig":"55"},{"size":1120,"mtime":1617621748287,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"fbx7jn",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"110"},"F:\\Web\\Cờ Tướng\\front_end\\src\\index.jsx",[],["230","231"],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\piece.js",["232"],"import { socket } from \"../Components/App/context.js\";\r\n\r\nclass Piece {\r\n  constructor(width, row, col, name, choosenSide) {\r\n    this.width = width;\r\n    this.position = [row, col];\r\n    this.name = name;\r\n    this.side = name.split(\"-\")[1];\r\n    this.choosenSide = choosenSide;\r\n    this.minCol = 0;\r\n    this.maxCol = 8;\r\n    this.minRow = 0;\r\n    this.maxRow = 9;\r\n    this.translate = `translate(${width * col}, ${width * row})`;\r\n  }\r\n\r\n  move(x, y) {\r\n    const translate = `translate(${x - this.width / 2}, ${y - this.width / 2})`;\r\n    this.translate = translate;\r\n  }\r\n\r\n  checkValidMove(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [moveRow, moveCol] = [newRow - curRow, newCol - curCol];\r\n    const valid =\r\n      newCol >= this.minCol &&\r\n      newCol <= this.maxCol &&\r\n      newRow >= this.minRow &&\r\n      newRow <= this.maxRow;\r\n    const existMove = this.moves.some((move) => {\r\n      return move[0] === moveRow && move[1] === moveCol;\r\n    });\r\n    if (valid && existMove) {\r\n      const generalTranslate = this.putGeneralInDanger(newRow, newCol, board);\r\n      if (generalTranslate) return generalTranslate;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setPosition(capture, newRow, newCol) {\r\n    const [translateX, translateY] = [newCol * this.width, newRow * this.width];\r\n    const translate = `translate(${translateX}, ${translateY})`;\r\n    this.position = [newRow, newCol];\r\n    this.translate = translate;\r\n    return [capture === \"capture\", newRow, newCol];\r\n  }\r\n\r\n  canMoveToNewPosition(newRow, newCol, board) {\r\n    const [curRow, curCol] = this.position;\r\n    const [translateX, translateY] = [curCol * this.width, curRow * this.width];\r\n    this.translate = `translate(${translateX}, ${translateY})`;\r\n    if (this.side === this.choosenSide[1]) {\r\n      const isValid = this.checkValidMove(newRow, newCol, board);\r\n      if (isValid && !/translate/.test(isValid)) {\r\n        if (!board[newRow][newCol].side) {\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 0) return true;\r\n        } else if (board[newRow][newCol].side !== board[curRow][curCol].side)\r\n          if (this.countPiecesBetween(newRow, newCol, board) === 1)\r\n            return \"capture\";\r\n      } else if (isValid) return isValid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  countPiecesBetween(newRow, newCol, board) {\r\n    let [curRow, curCol] = this.position;\r\n    let count = 0;\r\n    if (newRow === curRow) {\r\n      do {\r\n        curCol += curCol > newCol ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curCol !== newCol);\r\n    } else {\r\n      do {\r\n        curRow += curRow > newRow ? -1 : 1;\r\n        if (board[curRow][curCol]) count++;\r\n      } while (curRow !== newRow);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  static isGeneralInDanger(board, side) {\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (board[i][j] && board[i][j].side !== side) {\r\n          const canCapture = board[i][j].canCaptureGeneral(board);\r\n          if (/translate/.test(canCapture)) return canCapture;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  putGeneralInDanger(newRow, newCol, board) {\r\n    const tmpBoard = board.reduce((acc, row) => {\r\n      acc.push([...row]);\r\n      return acc;\r\n    }, []);\r\n    this.updateTmpBoard(newRow, newCol, tmpBoard);\r\n    return Piece.isGeneralInDanger(tmpBoard, this.side);\r\n  }\r\n\r\n  static isLost(board, side) {\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (board[i][j] && board[i][j].side === side) {\r\n          const [curRow, curCol] = board[i][j].position;\r\n          for (let move of board[i][j].moves) {\r\n            const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n            const tmp = board[i][j].canMoveToNewPosition(newRow, newCol, board);\r\n            if (tmp && !/translate/.test(tmp)) return null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Piece.isGeneralInDanger(board, side)) {\r\n      return \"Checkmate\";\r\n    }\r\n    return \"Stalemate\";\r\n  }\r\n\r\n  updateTmpBoard(newRow, newCol, tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    const tmp = tmpBoard[curRow][curCol];\r\n    tmpBoard[curRow][curCol] = 0;\r\n    tmpBoard[newRow][newCol] = tmp;\r\n  }\r\n\r\n  canCaptureGeneral(tmpBoard) {\r\n    const [curRow, curCol] = this.position;\r\n    for (let move of this.moves) {\r\n      const [newRow, newCol] = [curRow + move[0], curCol + move[1]];\r\n      if (newCol >= 0 && newCol < 9 && newRow >= 0 && newRow < 10) {\r\n        if (tmpBoard[newRow][newCol].side)\r\n          if (tmpBoard[newRow][newCol].side !== tmpBoard[curRow][curCol].side)\r\n            if (this.countPiecesBetween(newRow, newCol, tmpBoard) === 1)\r\n              if (tmpBoard[newRow][newCol].name.split(\"-\")[0] === \"general\") {\r\n                return tmpBoard[newRow][newCol].translate;\r\n              }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  modifyBoard(board, [newRow, newCol], dispatch) {\r\n    const [curRow, curCol] = this.position;\r\n    this.setPosition(null, newRow, newCol);\r\n    const tmp = board[curRow][curCol];\r\n    if (board[newRow][newCol])\r\n      dispatch({ type: \"setCapturedPieces\", value: board[newRow][newCol] });\r\n    board[curRow][curCol] = 0;\r\n    board[newRow][newCol] = tmp;\r\n    dispatch({ type: \"setBoard\", value: [...board] });\r\n  }\r\n\r\n  animateMove([newRow, newCol], board, dispatch) {\r\n    const [curRow, curCol] = this.position;\r\n    this.DOMNode = document.querySelector(`#p${curRow}${curCol}`);\r\n    if (curCol === newCol) {\r\n      this.moveVertical([newRow, newCol], board, dispatch);\r\n    } else this.moveDiagonal([newRow, newCol], board, dispatch);\r\n  }\r\n\r\n  setTransform([xB, yB], board, dispatch) {\r\n    const translate = `translate(${xB * this.width}, ${yB * this.width})`;\r\n    this.DOMNode.setAttribute(\"transform\", translate);\r\n    if (board) {\r\n      this.modifyBoard(board, [yB, xB], dispatch);\r\n    }\r\n  }\r\n\r\n  moveVertical([yB, xB], board, dispatch) {\r\n    const [yA, xA] = this.position;\r\n    let step = 0;\r\n\r\n    const animate = () => {\r\n      if (Math.abs(step) < Math.abs(yB - yA)) {\r\n        step += (yB - yA) / (0.25 * 60);\r\n        this.setTransform([xA, yA + step], null, null);\r\n        window.requestAnimationFrame(animate);\r\n      } else if (Math.abs(step) >= Math.abs(yB - yA)) {\r\n        this.setTransform([xB, yB], board, dispatch);\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  moveDiagonal([yB, xB], board, dispatch) {\r\n    const [yA, xA] = this.position;\r\n    let step = 0;\r\n\r\n    const animate = () => {\r\n      if (Math.abs(step) < Math.abs(xB - xA)) {\r\n        step += (xB - xA) / (0.25 * 60);\r\n        let y = (step / (xB - xA)) * (yB - yA) + yA;\r\n        this.setTransform([xA + step, y], null, null);\r\n        window.requestAnimationFrame(animate);\r\n      } else if (Math.abs(step) >= Math.abs(xB - xA)) {\r\n        this.setTransform([xB, yB], board, dispatch);\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(animate);\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\instantiatePiece.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\advisor.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\general.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\cannon.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\elephant.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\chariot.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\horse.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\soldier.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\chariotRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\horseRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\advisorRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\generalRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\elephantRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\cannonRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\soldierRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\rootReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\boardReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Main.jsx",["233","234","235","236"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport EntryComponent from \"./EntryComponent/EntryComponent.jsx\";\r\nimport NavBar from \"./NavBar/NavBar.jsx\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Main.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport Game from \"./Game/Game.jsx\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport { AuthenticateUserContext, SocketContext } from \"../App/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Warning from \"./Warning/Warning.jsx\";\r\nimport VerifyEmailNote from \"./VerifyEmailNote/VerifyEmailNote.jsx\";\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const [connectionError, setConnectionError] = useState(null);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const socket = useContext(SocketContext);\r\n  const store = useStore();\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (!isAuthenticated) {\r\n        setWaitForResponse(true);\r\n        const { user, message, opponentID } = await callAPI(\r\n          \"GET\",\r\n          \"user\",\r\n          null\r\n        );\r\n        if (user) {\r\n          authenticateUser(dispatch, user, opponentID);\r\n        } else if (message) dispatch({ type: \"setLoginError\", value: message });\r\n        setWaitForResponse(false);\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"setLoginError\", value: err.message });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\"title\").innerText =\r\n      lang === \"English\" ? \"Xiangqi\" : \"Cờ Tướng\";\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect_error\", (err) => {\r\n      setConnectionError(err.message);\r\n      socket.close();\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      if (connectionError === \"The connection was closed\") {\r\n        setConnectionError(\"Successfully reconnect\");\r\n        setTimeout(() => {\r\n          setConnectionError(null);\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"connect_error\");\r\n      socket.removeAllListeners(\"connect\");\r\n    };\r\n  }, [connectionError]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", (reason) => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      if (!foundMatch) {\r\n        dispatch({ type: \"setFindingMatch\", value: \"Connection Was Closed\" });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"setFindingMatch\", value: \"Play\" });\r\n        }, 700);\r\n      }\r\n      if (reason !== \"io client disconnect\") {\r\n        setConnectionError(\"The connection was closed\");\r\n        socket.open();\r\n        if (foundMatch) {\r\n          dispatch({ type: \"setGameResult\", value: undefined });\r\n          dispatch({\r\n            type: \"setMessage\",\r\n            value: {\r\n              from: \"\",\r\n              className: \"game-message\",\r\n              message: \"The connection was closed\",\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"disconnect\");\r\n    };\r\n  }, []);\r\n\r\n  if (loginError) return <Redirect to=\"/signin\" />;\r\n\r\n  return (\r\n    <Container fluid className={waitForResponse ? \"loading\" : \"\"}>\r\n      {waitForResponse ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <NavBar setWaitForResponse={setWaitForResponse} />\r\n          {isAuthenticated ? <Game /> : <EntryComponent />}\r\n        </div>\r\n      )}\r\n      {playerInfo && !playerInfo.guest && !playerInfo.email.verified ? (\r\n        <VerifyEmailNote />\r\n      ) : null}\r\n      {connectionError ? <Warning connectionError={connectionError} /> : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\EntryComponent\\EntryComponent.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\NavBar.jsx",["237"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport callAPI from \"../../App/callAPI.js\";\r\nimport Invites from \"./Invites/Invites.jsx\";\r\nimport { SocketContext } from \"../../App/context.js\";\r\nimport \"./NavBar.scss\";\r\n\r\nconst NavBar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const lang = useSelector((state) => state.appState.lang);\r\n  const handleSetLang = (event) => {\r\n    const selectedLang = event.currentTarget.text;\r\n    dispatch({ type: \"setLang\", value: selectedLang });\r\n  };\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  const handleLogout = async () => {\r\n    props.setWaitForResponse(true);\r\n    await callAPI(\"GET\", \"logout\", null);\r\n    dispatch({ type: \"setIsAuthenticated\", value: false });\r\n    dispatch({ type: \"setPlayerInfo\", value: null });\r\n    socket.disconnect();\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"md\" className=\"nav-bar\">\r\n      <Invites />\r\n      <Navbar.Brand>\r\n        <Link to=\"/\" className=\"link-brand\">\r\n          Xiangqi\r\n        </Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"nav\">\r\n          <Link\r\n            target={\r\n              isAuthenticated && isAuthenticated !== \"guest\"\r\n                ? \"_blank\"\r\n                : \"_self\"\r\n            }\r\n            to={`/${\r\n              isAuthenticated && isAuthenticated !== \"guest\" ? \"home\" : \"signin\"\r\n            }`}\r\n            className=\"link nav-link\"\r\n          >\r\n            {isAuthenticated && isAuthenticated !== \"guest\"\r\n              ? \"Home\"\r\n              : \"Sign In\"}\r\n          </Link>\r\n          <button\r\n            className=\"link nav-link logout\"\r\n            onClick={handleLogout}\r\n            style={{\r\n              display:\r\n                isAuthenticated && isAuthenticated !== \"guest\"\r\n                  ? \"inline\"\r\n                  : \"none\",\r\n            }}\r\n          >\r\n            Log Out\r\n          </button>\r\n          <Link\r\n            to=\"/signup\"\r\n            className=\"link nav-link \"\r\n            style={{\r\n              display:\r\n                isAuthenticated && isAuthenticated !== \"guest\"\r\n                  ? \"none\"\r\n                  : \"inline\",\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Link>\r\n          <NavDropdown title={lang} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item onClick={handleSetLang}>\r\n              Tiếng Việt\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item onClick={handleSetLang}>English</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Signup\\Signup.jsx",["238","239","240","241"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthenticateUserContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [invalidFirstname, setInvalidFirstname] = useState(\"\");\r\n  const [invalidLastname, setInvalidLastname] = useState(\"\");\r\n  const [checkingSession, setCheckingSession] = useState(false);\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [successfullyLogin, setSuccessfullyLogin] = useState(false);\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (\r\n      /[^_a-z0-9ÁáÀàẢảÃãẠạĂăẮắẰằẲẳẴẵẶặÂâẤấẦầẨẩẪẫẬậĐđÉéÈèẺẻẼẽẸẹÊêẾếỀềỂểỄễỆệÍíÌìỈỉĨĩỊịÓóÒòỎỏÕõỌọÔôỐốỒồỔổỖỗỘộƠơỚớỜờỞởỠỡỢợÚúÙùỦủŨũỤụƯưỨứỪừỬửỮữỰựÝýỲỳỶỷỸỹỴỵ ]/i.test(\r\n        value\r\n      ) ||\r\n      value.length < 3 ||\r\n      value.length > 20\r\n    ) {\r\n      setInvalidUsernameMess(\r\n        \"Username must be between 3-20 characters long and use only Latin letters and numbers\"\r\n      );\r\n    } else setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    const value = event.target.value;\r\n    if (!/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.\\-]+$/.test(value) || /\\.\\./.test(value))\r\n      setInvalidEmailMess(\"Invalid email address\");\r\n    else setInvalidEmailMess(\"\");\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleFirstnameChange = (event) => {\r\n    const value = event.target.value;\r\n    setFirstname(value);\r\n  };\r\n  const handleLastnameChange = (event) => {\r\n    const value = event.target.value;\r\n    if (\r\n      /[^a-zA-ZÁáÀàẢảÃãẠạĂăẮắẰằẲẳẴẵẶặÂâẤấẦầẨẩẪẫẬậĐđÉéÈèẺẻẼẽẸẹÊêẾếỀềỂểỄễỆệÍíÌìỈỉĨĩỊịÓóÒòỎỏÕõỌọÔôỐốỒồỔổỖỗỘộƠơỚớỜờỞởỠỡỢợÚúÙùỦủŨũỤụƯưỨứỪừỬửỮữỰựÝýỲỳỶỷỸỹỴỵ]/.test(\r\n        value[0]\r\n      )\r\n    )\r\n      setInvalidLastname(\"First character must be latin letter\");\r\n    else setInvalidLastname(\"\");\r\n    setLastname(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    if (!firstname) {\r\n      count += 1;\r\n      setInvalidFirstname(\"Please fill out this field\");\r\n    }\r\n    if (!lastname) {\r\n      count += 1;\r\n      setInvalidLastname(\"Please fill out this field\");\r\n    }\r\n    if (!email) {\r\n      count += 1;\r\n      setInvalidEmailMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Email/.test(message)) {\r\n      setInvalidEmailMess(message);\r\n    } else if (/User/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n  };\r\n\r\n  const handleSignUp = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      setError(\"\");\r\n      const missingField = handleMissingField();\r\n      if (\r\n        !missingField &&\r\n        !invalidEmailMess &&\r\n        !invalidPasswordMess &&\r\n        !invalidUsernameMess &&\r\n        !invalidFirstname &&\r\n        !invalidLastname\r\n      ) {\r\n        setWaitForResponse(true);\r\n        setError(null);\r\n        const { message, user, ok, opponentID } = await callAPI(\"POST\", \"signup\", {\r\n          email: email,\r\n          firstname: firstname,\r\n          username: username,\r\n          password: password,\r\n          lastname: lastname,\r\n        });\r\n        setWaitForResponse(false);\r\n        if (user) {\r\n          authenticateUser(dispatch, user, opponentID);\r\n        } else handleError(ok, message);\r\n      }\r\n    } catch (err) {\r\n      setWaitForResponse(false);\r\n      handleError(false, err.toString());\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (isAuthenticated) return;\r\n      setCheckingSession(true);\r\n      const { user, message, ok } = await callAPI(\"GET\", \"user\", null);\r\n      setCheckingSession(false);\r\n      if (user) {\r\n        authenticateUser(dispatch, user);\r\n      } else handleError(ok, message);\r\n    } catch (err) {\r\n      handleError(false, err.toString());\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  if (isAuthenticated) {\r\n    if (isAuthenticated !== \"guest\") return <Redirect to=\"/\" />;\r\n    else if (successfullyLogin) return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      {checkingSession ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col\r\n            md={{ span: 4 }}\r\n            sm={{ span: 6 }}\r\n            xs={{ span: 10 }}\r\n            className=\"login-component d-flex flex-column  align-items-center\"\r\n          >\r\n            {error ? <p className=\"error-message\">{error}</p> : null}\r\n            <Form onSubmit={handleSignUp} method=\"POST\">\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label style={{ float: \"left\" }}>Username</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidUsernameMess !== \"\"}\r\n                    onChange={handleUsernameChange}\r\n                    value={username}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"firstname\">\r\n                <Form.Label style={{ float: \"left\" }}>Firstname</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidFirstname !== \"\"}\r\n                    onChange={handleFirstnameChange}\r\n                    value={firstname}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidFirstname}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"lastname\">\r\n                <Form.Label style={{ float: \"left\" }}>Lastname</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidLastname !== \"\"}\r\n                    onChange={handleLastnameChange}\r\n                    value={lastname}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidLastname}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label style={{ float: \"left\" }}>Email</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidEmailMess !== \"\"}\r\n                    onChange={handleEmailChange}\r\n                    value={email}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidEmailMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label style={{ float: \"left\" }}>Password</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    isInvalid={invalidPasswordMess !== \"\"}\r\n                    onChange={handlePasswordChange}\r\n                    value={password}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\">\r\n                {waitForResponse ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </Button>\r\n            </Form>\r\n            <p className=\"seperator\">\r\n              <span></span>\r\n              <span className=\"seperator-text\">or connect with</span>\r\n              <span></span>\r\n            </p>\r\n            <div className=\"social-login\">\r\n              <a\r\n                className=\"google\"\r\n                href=\"http://localhost:8080/api/auth/google\"\r\n              >\r\n                <i className=\"fab fa-google\"></i> Google\r\n              </a>\r\n              <a\r\n                className=\"facebook\"\r\n                href=\"http://localhost:8080/api/auth/facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook \"></i> Facebook\r\n              </a>\r\n              <a\r\n                className=\"github\"\r\n                href=\"http://localhost:8080/api/auth/github\"\r\n              >\r\n                <i className=\"fab fa-github \"></i> Github\r\n              </a>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\App.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Game.jsx",["242"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../App/context.js\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector, useStore, useDispatch } from \"react-redux\";\r\nimport GameBar from \"./GameBar/GameBar.jsx\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const [centerBoard, setCenterBoard] = useState(false);\r\n  const socket = useContext(SocketContext);\r\n  const store = useStore();\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n\r\n  const handleCenterBoard = () => {\r\n    setCenterBoard(!centerBoard);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  const handleGameOver = (result, reason) => {\r\n    const opponentInfo = store.getState().gameState.opponentInfo;\r\n    const playerInfo = store.getState().appState.playerInfo;\r\n    dispatch({ type: \"setGameResult\", value: result });\r\n    dispatch({\r\n      type: \"setMessage\",\r\n      value: {\r\n        type: \"game result message\",\r\n        winner: `${\r\n          result === \"Won\"\r\n            ? `${playerInfo.username}`\r\n            : `${opponentInfo.playername}`\r\n        } Won - `,\r\n        reason: reason,\r\n        className: \"game-message\",\r\n      },\r\n    });\r\n    setMoveTimer(null, true, dispatch);\r\n  };\r\n\r\n  const handleResign = () => {\r\n    const playerInfo = store.getState().appState.playerInfo;\r\n    handleGameOver(\"Lose\", `${playerInfo.username} Resign`);\r\n    socket.emit(\"gameFinish\", [\"Won\", `${playerInfo.username} Resign`]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"gameOver\", (result, reason) => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      const gameResult = store.getState().gameState.gameResult;\r\n      if (gameResult !== null || !foundMatch) return;\r\n      handleGameOver(result, reason);\r\n    });\r\n\r\n    socket.on(\"opponentLeftGame\", () => {\r\n      const foundMatch = store.getState().gameState.foundMatch;\r\n      const opponentInfo = store.getState().gameState.opponentInfo;\r\n      if (foundMatch)\r\n        dispatch({\r\n          type: \"setMessage\",\r\n          value: {\r\n            from: `${opponentInfo.playername}`,\r\n            message: \"Left The Game\",\r\n            className: \"game-message\",\r\n          },\r\n        });\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentLeftGame\");\r\n      socket.removeAllListeners(\"gameOver\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-3 pb-3\">\r\n      <GamePlayArea />\r\n      <div\r\n        className=\"w-100\"\r\n        style={{ display: centerBoard ? \"block\" : \"none\" }}\r\n      ></div>\r\n      {!foundMatch ? (\r\n        <GameController\r\n          timeSelectorDisplay={timeSelectorDisplay}\r\n          handleToggle={handleToggle}\r\n          handleCenterBoard={handleCenterBoard}\r\n          centerBoard={centerBoard}\r\n        />\r\n      ) : (\r\n        <GameBar\r\n          handleCenterBoard={handleCenterBoard}\r\n          centerBoard={centerBoard}\r\n          handleResign={handleResign}\r\n        />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Board.jsx",["243","244"],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Timer\\Timer.jsx",["245"],"import React, { useEffect, useContext } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const store = useStore();\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n\r\n  useEffect(() => {\r\n    if (props.timeLeftToMove <= 0 && turnToMove) {\r\n      const opponent = store.getState().gameState.opponentInfo;\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponent.playername} Won - `,\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [turnToMove, props.timeLeftToMove]);\r\n\r\n  return (\r\n    <div\r\n      className={`clock ${\r\n        props.turnToMove && socket.connected ? \"turn-to-move\" : \"\"\r\n      }`}\r\n    >\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\initializeBoard.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\getSVGLocation.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\appReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\gameReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Piece\\Piece.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\GameController.jsx",["246","247"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport PlayButton from \"./PlayButton/PlayButton.jsx\";\r\nimport \"./GameController.scss\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../App/context.js\";\r\nimport PlayWithFriend from \"./PlayWithFriend/PlayWithFriend.jsx\";\r\n\r\nconst GameController = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [playWithFriendText, setPlayWithFriendText] = useState(\r\n    \"Play With Friend\"\r\n  );\r\n  const [playWithFriend, setPlayWithFriend] = useState(false);\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const findingMatch = useSelector((state) => state.gameState.findingMatch);\r\n  const time = useSelector((state) => state.gameState.time);\r\n  const side = useSelector((state) => state.boardState.side);\r\n\r\n  const handlePlayWithFriend = () => {\r\n    if (!socket.connected) {\r\n      setPlayWithFriendText(\"Connection Was Closed\");\r\n      setTimeout(() => {\r\n        setPlayWithFriendText(\"Play With Friend\");\r\n      }, 700);\r\n    } else setPlayWithFriend(!playWithFriend);\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (!socket.connected) {\r\n      dispatch({ type: \"setFindingMatch\", value: \"Connection Was Closed\" });\r\n      setTimeout(() => {\r\n        dispatch({ type: \"setFindingMatch\", value: \"Play\" });\r\n      }, 700);\r\n    } else if (findingMatch !== true) {\r\n      socket.emit(\"setTimeAndSide\", +time, side[1], () => {\r\n        socket.emit(\"findMatch\");\r\n        dispatch({ type: \"setFindingMatch\", value: true });\r\n      });\r\n    } else if (findingMatch === true) socket.emit(\"cancelFindMatch\");\r\n  };\r\n\r\n  const handleSelectTime = (event) => {\r\n    const selectedTime = +event.currentTarget.getAttribute(\"value\");\r\n    dispatch({ type: \"setTime\", value: selectedTime });\r\n    socket.emit(\"setTimeAndSide\", selectedTime, side[1]);\r\n    props.handleToggle();\r\n  };\r\n\r\n  const handleSwitchSide = (event) => {\r\n    const selectedSide = event.currentTarget.getAttribute(\"value\");\r\n    if (selectedSide === \"black\") {\r\n      dispatch({ type: \"switchSide\", value: [\"red\", \"black\"] });\r\n      socket.emit(\"setTimeAndSide\", +time, \"black\");\r\n    } else {\r\n      dispatch({ type: \"switchSide\", value: [\"black\", \"red\"] });\r\n      socket.emit(\"setTimeAndSide\", +time, \"red\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"setTimeAndSide\", +time, side[1]);\r\n    socket.on(\"timeout\", () => {\r\n      dispatch({\r\n        type: \"setFindingMatch\",\r\n        value: \"No Players are currently online :(\",\r\n      });\r\n    });\r\n\r\n    socket.on(\"foundMatch\", (opponent, firstMove, time) => {\r\n      dispatch({ type: \"setFoundMatch\", value: true });\r\n      dispatch({\r\n        type: \"setOpponentInfo\",\r\n        value: {\r\n          playername: opponent.playername,\r\n          photo: opponent.photo,\r\n        },\r\n      });\r\n\r\n      dispatch({ type: \"setTime\", value: time });\r\n      dispatch({ type: \"setTurnToMove\", value: firstMove });\r\n      setMoveTimer(firstMove, false, dispatch);\r\n    });\r\n\r\n    socket.on(\"findMatchCanceled\", () => {\r\n      dispatch({ type: \"setFindingMatch\", value: \"play\" });\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"cancelFindMatch\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Col md={{ span: 4 }} xs={{ span: 10 }} className=\"game-controller mb-3\">\r\n      {!playWithFriend ? (\r\n        <div className=\"button-container\">\r\n          <div className=\"select-side-container\">\r\n            <Button\r\n              className=\"red-side\"\r\n              value=\"red\"\r\n              onClick={handleSwitchSide}\r\n              disabled={findingMatch === true || findingMatch === \"Waiting...\"}\r\n            >\r\n              Red\r\n            </Button>\r\n            <Button\r\n              className=\"black-side\"\r\n              value=\"black\"\r\n              onClick={handleSwitchSide}\r\n              disabled={findingMatch === true || findingMatch === \"Waiting...\"}\r\n            >\r\n              Black\r\n            </Button>\r\n          </div>\r\n          <div className=\"time-select-container\">\r\n            <Button\r\n              className=\"select-timer\"\r\n              onClick={props.handleToggle}\r\n              disabled={findingMatch === true || findingMatch === \"Waiting...\"}\r\n            >\r\n              <i className=\"fas fa-clock\"></i> {time + \":00\"}{\" \"}\r\n              <i className=\"fas fa-angle-down\"></i>\r\n            </Button>\r\n            <div\r\n              className=\"time-select-table\"\r\n              style={{ display: props.timeSelectorDisplay }}\r\n            >\r\n              <Button onClick={handleSelectTime} value=\"1\">\r\n                1 min\r\n              </Button>\r\n              <Button onClick={handleSelectTime} value=\"3\">\r\n                3 min\r\n              </Button>\r\n              <Button onClick={handleSelectTime} value=\"5\">\r\n                5 min\r\n              </Button>\r\n              <Button onClick={handleSelectTime} value=\"10\">\r\n                10 min\r\n              </Button>\r\n              <Button onClick={handleSelectTime} value=\"15\">\r\n                15 min\r\n              </Button>\r\n              <Button onClick={handleSelectTime} value=\"30\">\r\n                30 min\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <PlayButton findingMatch={findingMatch} handlePlay={handlePlay} />\r\n\r\n          <Button\r\n            className=\"play-with-friend\"\r\n            disabled={findingMatch === true || findingMatch === \"Waiting...\"}\r\n            onClick={handlePlayWithFriend}\r\n          >\r\n            {playWithFriendText}\r\n          </Button>\r\n          <Button className=\"center-board\" onClick={props.handleCenterBoard}>\r\n            {`Center Board: ${props.centerBoard ? \"On\" : \"Off\"}`}\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <PlayWithFriend return={handlePlayWithFriend} />\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GameController;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GamePlayArea.jsx",["248","249"],"import React from \"react\";\r\nimport { Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Timer from \"../Timer/Timer.jsx\";\r\nimport Board from \"../Board/Board\";\r\nimport \"./GamePlayArea.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GameResult from \"./GameResult/GameResult.jsx\";\r\nimport Pause from \"./Pause/Pause.jsx\";\r\n\r\nconst GamePlayArea = (props) => {\r\n  const opponentTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.opponentTimeLeftToMove\r\n  );\r\n  const playerTimeLeftToMove = useSelector(\r\n    (state) => state.gameState.playerTimeLeftToMove\r\n  );\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const gameResult = useSelector((state) => state.gameState.gameResult);\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const capturedPieces = useSelector(\r\n    (state) => state.boardState.capturedPieces\r\n  );\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const opponentInfo = useSelector((state) => state.gameState.opponentInfo);\r\n\r\n  return (\r\n    <Col\r\n      md={{ span: 4 }}\r\n      sm={{ span: 11 }}\r\n      xs={{ span: 11 }}\r\n      className=\"board-container pb-3\"\r\n    >\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <img src={opponentInfo.photo} alt=\"\" />\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={(props) => (\r\n              <Tooltip id=\"name-tooltip\" {...props}>\r\n                {opponentInfo.playername}\r\n              </Tooltip>\r\n            )}\r\n          >\r\n            <p className=\"user-name\">{opponentInfo.playername}</p>\r\n          </OverlayTrigger>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[1])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer\r\n          timeLeftToMove={opponentTimeLeftToMove}\r\n          turnToMove={\r\n            foundMatch && gameResult === null ? !turnToMove : turnToMove\r\n          }\r\n        />\r\n      </div>\r\n      <Board />\r\n      <div className=\"player-area\">\r\n        <div className=\"avatar-and-name\">\r\n          <div className=\"avatar-and-name\">\r\n            <img src={playerInfo.photo} alt=\"\" />\r\n            <OverlayTrigger\r\n              placement=\"top\"\r\n              overlay={(props) => (\r\n                <Tooltip id=\"name-tooltip\" {...props}>\r\n                  {playerInfo.username}\r\n                </Tooltip>\r\n              )}\r\n            >\r\n              <p className=\"user-name\">{playerInfo.username}</p>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </div>\r\n        <div className=\"captured-pieces\">\r\n          {capturedPieces.map((element, index) => {\r\n            if (element.side === element.choosenSide[0])\r\n              return (\r\n                <img\r\n                  src={`/images/Pieces/${element.name}.png`}\r\n                  style={{ width: \"27px\" }}\r\n                  key={`c${index}`}\r\n                ></img>\r\n              );\r\n            return null;\r\n          })}\r\n        </div>\r\n        <Timer timeLeftToMove={playerTimeLeftToMove} turnToMove={turnToMove} />\r\n      </div>\r\n      <GameResult />\r\n      <Pause />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GamePlayArea;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\GameBar.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\ChatSection.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GameResult\\GameResult.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\DrawOffer\\DrawOffer.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\renderMessages.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\Pause\\Pause.jsx",["250","251"],"import React, { useContext, useEffect } from \"react\";\r\nimport \"./Pause.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { SocketContext, SetMoveTimerContext } from \"../../../../App/context.js\";\r\n\r\nconst Timer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const socket = useContext(SocketContext);\r\n  const setMoveTimer = useContext(SetMoveTimerContext);\r\n  const time = useSelector((state) => state.gameState.pauseTime);\r\n  const minute = Math.floor(time / 60);\r\n  const second = time % 60;\r\n  const store = useStore();\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      if (/Paused/.test(props.pause)) {\r\n        dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n        dispatch({ type: \"setPause\", value: \"Timeout\" });\r\n        socket.emit(\"startTimer\", true);\r\n      } else {\r\n        socket.emit(\"startGame\");\r\n      }\r\n    }\r\n\r\n    socket.on(\"receiveGameStartSignal\", () => {\r\n      socket.emit(\"receiveGameStartSignalAck\");\r\n    });\r\n\r\n    socket.on(\"gameStarted\", () => {\r\n      const turnToMove = store.getState().boardState.turnToMove;\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      dispatch({ type: \"setPause\", value: null });\r\n      socket.emit(\"startTimer\", false);\r\n      dispatch({ type: \"setPause\", value: null });\r\n      dispatch({ type: \"setPauseTime\", value: \"restart\" });\r\n      setMoveTimer(turnToMove, false, dispatch);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"receiveGameStartSignal\");\r\n      socket.removeAllListeners(\"gameStarted\");\r\n    };\r\n  }, [time]);\r\n\r\n  return (\r\n    <p className=\"pause-timer\">\r\n      {/Paused/.test(props.pause) ? \"Resume In\" : \"Game Will Start In\"}:{\" \"}\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Pause = () => {\r\n  const dispatch = useDispatch();\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const [boardWidth, boardHeight] = useSelector(\r\n    (state) => state.boardState.boardSize\r\n  );\r\n  const store = useStore();\r\n  const socket = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    if (/Resumed/.test(pause))\r\n      dispatch({ type: \"setPauseTime\", value: \"timeout\" });\r\n\r\n    const handleOpponentPauseOrResumeGame = (pause) => {\r\n      const opponentInfo = store.getState().gameState.opponentInfo;\r\n      const message = {\r\n        from: `${opponentInfo.playername}`,\r\n        message: `${pause ? \"Paused\" : \"Resumed\"} Game`,\r\n        className: \"game-message\",\r\n      };\r\n      dispatch({ type: \"setMessage\", value: message });\r\n      dispatch({\r\n        type: \"setPause\",\r\n        value: `${opponentInfo.playername} ${\r\n          pause ? \"Paused\" : \"Resumed\"\r\n        } Game`,\r\n      });\r\n      socket.emit(`receive${pause ? \"Pause\" : \"Resume\"}SignalAck`);\r\n    };\r\n\r\n    socket.on(\"startPauseTimer\", () => {\r\n      socket.removeAllListeners(\"oneSecondPass\");\r\n      socket.on(\"oneSecondPass\", () => {\r\n        dispatch({ type: \"setPauseTime\", value: null });\r\n      });\r\n      socket.emit(\"startTimer\", true);\r\n    });\r\n\r\n    socket.on(\"opponentPauseGame\", () => {\r\n      handleOpponentPauseOrResumeGame(true);\r\n    });\r\n\r\n    socket.on(\"opponentResumeGame\", () => {\r\n      handleOpponentPauseOrResumeGame(false);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"opponentPauseGame\");\r\n      socket.removeAllListeners(\"opponentResumeGame\");\r\n      socket.removeAllListeners(\"startPauseTimer\");\r\n    };\r\n  }, [pause]);\r\n\r\n  if (!pause) return null;\r\n  return (\r\n    <div\r\n      className=\"pause\"\r\n      style={{\r\n        width: `${boardWidth}px`,\r\n        height: `${boardHeight}px`,\r\n      }}\r\n    >\r\n      <div>\r\n        <p className=\"pause-announce\">{pause}</p>\r\n        <Timer pause={pause} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pause);\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\context.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\callAPI.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\VerifyEmail\\VerifyEmail.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\VerifyEmailNote\\VerifyEmailNote.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\SignIn\\SignIn.jsx",["252","253"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AuthenticateUserContext } from \"../App/context.js\";\r\nimport callAPI from \"../App/callAPI.js\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"./SignIn.scss\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const authenticateUser = useContext(AuthenticateUserContext);\r\n  const [successfullyLogin, setSuccessfullyLogin] = useState(false);\r\n  const [checkingSession, setCheckingSession] = useState(false);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [waitForServer, setWaitForServer] = useState(false);\r\n  const loginError = useSelector((state) => state.appState.loginError);\r\n  const isAuthenticated = useSelector(\r\n    (state) => state.appState.isAuthenticated\r\n  );\r\n\r\n  const handleUsernameChange = (event) => {\r\n    const value = event.target.value;\r\n    setInvalidUsernameMess(\"\");\r\n    setUsername(value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length < 6) {\r\n      setInvalidPasswordMess(\"Password must be atlest 6 characters\");\r\n    } else setInvalidPasswordMess(\"\");\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleMissingField = () => {\r\n    let count = 0;\r\n    if (!username) {\r\n      count += 1;\r\n      setInvalidUsernameMess(\"Please fill out this field\");\r\n    }\r\n    if (!password) {\r\n      count += 1;\r\n      setInvalidPasswordMess(\"Please fill out this field\");\r\n    }\r\n    return count !== 0;\r\n  };\r\n\r\n  const handleError = (ok, message) => {\r\n    if (!ok) {\r\n      setError(message);\r\n    } else if (/Password/.test(message)) {\r\n      setInvalidPasswordMess(message);\r\n    } else if (/Username/.test(message)) {\r\n      setInvalidUsernameMess(message);\r\n    } else setError(message);\r\n    dispatch({ type: \"setLoginError\", value: null });\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      setError(\"\");\r\n      const missingField = handleMissingField();\r\n      if (!missingField && !invalidPasswordMess && !invalidUsernameMess) {\r\n        setError(null);\r\n        setWaitForResponse(true);\r\n        const { message, user, ok, opponentID } = await callAPI(\r\n          \"POST\",\r\n          \"login\",\r\n          {\r\n            username: username,\r\n            password: password,\r\n          }\r\n        );\r\n        setWaitForResponse(false);\r\n        if (user) {\r\n          authenticateUser(dispatch, user, opponentID);\r\n        } else handleError(ok, message);\r\n      }\r\n    } catch (err) {\r\n      setWaitForResponse(false);\r\n      handleError(false, err.toString());\r\n    }\r\n  };\r\n\r\n  const handleLoginAsGuest = async () => {\r\n    try {\r\n      setError(\"\");\r\n      if (isAuthenticated === \"guest\") setSuccessfullyLogin(true);\r\n      else {\r\n        setWaitForServer(true);\r\n        const { user, opponentID } = await callAPI(\r\n          \"GET\",\r\n          \"login-as-guest\",\r\n          null\r\n        );\r\n        setWaitForServer(false);\r\n        setSuccessfullyLogin(true);\r\n        authenticateUser(dispatch, user, opponentID);\r\n      }\r\n    } catch (err) {\r\n      setWaitForServer(false);\r\n      handleError(false, err.toString());\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      if (isAuthenticated) return;\r\n      if (!loginError) {\r\n        setCheckingSession(true);\r\n        const { message, user, ok } = await callAPI(\"GET\", \"user\", null);\r\n        setCheckingSession(false);\r\n        if (user) {\r\n          authenticateUser(dispatch, user);\r\n        } else handleError(ok, message);\r\n      } else handleError(false, loginError);\r\n    } catch (err) {\r\n      handleError(false, err.toString());\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  if (isAuthenticated) {\r\n    if (isAuthenticated !== \"guest\") return <Redirect to=\"/\" />;\r\n    else if (successfullyLogin) return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      {checkingSession ? (\r\n        <Spinner\r\n          animation=\"border\"\r\n          variant=\"secondary\"\r\n          style={{\r\n            width: `${window.innerWidth / 5}px`,\r\n            height: `${window.innerWidth / 5}px`,\r\n            borderWidth: \"9px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <Row className=\"justify-content-center\">\r\n          <Col\r\n            md={{ span: 4 }}\r\n            sm={{ span: 6 }}\r\n            xs={{ span: 10 }}\r\n            className=\"login-component d-flex flex-column  align-items-center\"\r\n          >\r\n            {error ? <p className=\"error-message\">{error}</p> : null}\r\n            <Form onSubmit={handleLogin} method=\"POST\">\r\n              <Form.Group controlId=\"username-or-email\">\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    isInvalid={invalidUsernameMess !== \"\"}\r\n                    placeholder=\"Username or Email\"\r\n                    onChange={handleUsernameChange}\r\n                    value={username}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidUsernameMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <InputGroup hasValidation>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    isInvalid={invalidPasswordMess !== \"\"}\r\n                    placeholder=\"Password\"\r\n                    onChange={handlePasswordChange}\r\n                    value={password}\r\n                  />\r\n                  <Form.Control.Feedback\r\n                    type=\"invalid\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {invalidPasswordMess}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button type=\"submit\">\r\n                {waitForResponse ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Log In\"\r\n                )}\r\n              </Button>\r\n              <Button className=\"log-in-as-guest\" onClick={handleLoginAsGuest}>\r\n                {waitForServer ? (\r\n                  <Spinner animation=\"border\" variant=\"dark\" />\r\n                ) : (\r\n                  \"Log In As Guest\"\r\n                )}\r\n              </Button>\r\n            </Form>\r\n            <p className=\"seperator\">\r\n              <span></span>\r\n              <span className=\"seperator-text\">or connect with</span>\r\n              <span></span>\r\n            </p>\r\n            <div className=\"social-login\">\r\n              <a\r\n                className=\"google\"\r\n                href=\"http://localhost:8080/api/auth/google\"\r\n              >\r\n                <i className=\"fab fa-google\"></i> Google\r\n              </a>\r\n              <a\r\n                className=\"facebook\"\r\n                href=\"http://localhost:8080/api/auth/facebook\"\r\n              >\r\n                <i className=\"fab fa-facebook \"></i> Facebook\r\n              </a>\r\n              <a\r\n                className=\"github\"\r\n                href=\"http://localhost:8080/api/auth/github\"\r\n              >\r\n                <i className=\"fab fa-github \"></i> Github\r\n              </a>\r\n            </div>\r\n            <div className=\"sign-up-area\">\r\n              <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\PlayWithFriend.jsx",["254","255"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport \"./PlayWithFriend.scss\";\r\nimport { Button, Tooltip, Overlay, Spinner } from \"react-bootstrap\";\r\nimport renderPlayersList from \"./renderPlayersList.js\";\r\nimport renderPendingPlayers from \"./renderPendingPlayers.js\";\r\nimport callAPI from \"../../../../App/callAPI.js\";\r\nimport { SocketContext } from \"../../../../App/context.js\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PlayWithFriend = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [playersList, setPlayersList] = useState([]);\r\n  const [waitForResponse, setWaitForResponse] = useState(false);\r\n  const [pendingPlayers, setPendingPlayers] = useState([]);\r\n  const playerInfo = useSelector((state) => state.appState.playerInfo);\r\n  const socket = useContext(SocketContext);\r\n  const [show, setShow] = useState(\"\");\r\n  const target = useRef(null);\r\n  const copyButton = useRef(null);\r\n  const [inviteLink, setInviteLink] = useState(\"\");\r\n  const [invitedPlayer, setInvitedPlayer] = useState(null);\r\n\r\n  const [showText, setShowText] = useState(false);\r\n\r\n  const handleSelectPlayer = (event) => {\r\n    const name = event.currentTarget.getAttribute(\"playername\");\r\n    setInput(name);\r\n    setPlayersList([]);\r\n  };\r\n\r\n  const replaceSpecialCharacters = (str) => {\r\n    return str.replace(\r\n      /[^0-9a-zA-Z_ÁáÀàẢảÃãẠạĂăẮắẰằẲẳẴẵẶặÂâẤấẦầẨẩẪẫẬậĐđÉéÈèẺẻẼẽẸẹÊêẾếỀềỂểỄễỆệÍíÌìỈỉĨĩỊịÓóÒòỎỏÕõỌọÔôỐốỒồỔổỖỗỘộƠơỚớỜờỞởỠỡỢợÚúÙùỦủŨũỤụƯưỨứỪừỬửỮữỰựÝýỲỳỶỷỸỹỴỵ -]+/g,\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  const handleOnChange = async (event) => {\r\n    try {\r\n      const value = event.currentTarget.value;\r\n      setInput(value);\r\n      if (value) {\r\n        const { players } = await callAPI(\"POST\", \"players\", {\r\n          playername: replaceSpecialCharacters(value),\r\n        });\r\n        const reCheck = document.querySelector(\"#player-name-search\").value;\r\n        if (!players) return;\r\n        const name = playerInfo.username;\r\n        if (reCheck)\r\n          setPlayersList(renderPlayersList(players, handleSelectPlayer, name));\r\n      } else setPlayersList([]);\r\n    } catch (_) {\r\n      handleCanotSendInvite(\"Something went wrong there. Try again\");\r\n    }\r\n  };\r\n\r\n  const cancelInvite = (event) => {\r\n    const playername = event.currentTarget.getAttribute(\"playername\");\r\n    const index = pendingPlayers.findIndex(\r\n      (player) => player.username === playername\r\n    );\r\n    socket.emit(\"cancelInvite\", pendingPlayers[index].socketID, false);\r\n    setPendingPlayers((prevState) => {\r\n      prevState.splice(index, 1);\r\n      return [...prevState];\r\n    });\r\n  };\r\n\r\n  const handleCanotSendInvite = (reason) => {\r\n    setWaitForResponse(false);\r\n    setShow(reason);\r\n    setTimeout(() => {\r\n      setShow(\"\");\r\n    }, 1000);\r\n  };\r\n\r\n  const handleSendInvite = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      if (waitForResponse) return;\r\n      const index = pendingPlayers.findIndex(\r\n        (player) => player.username === input\r\n      );\r\n      if (index === -1) {\r\n        setWaitForResponse(true);\r\n        const { players } = await callAPI(\"POST\", \"players\", {\r\n          playername: replaceSpecialCharacters(input),\r\n          exact: true,\r\n        });\r\n        if (players.length && players[0].username !== playerInfo.username) {\r\n          if (players[0].socketID) {\r\n            if (pendingPlayers.length + 1 > 5) {\r\n              handleCanotSendInvite(\"You have sent too many invites\");\r\n              return;\r\n            }\r\n            setInvitedPlayer(players[0]);\r\n            socket.emit(\"sendInvite\", players[0].socketID, players[0].username);\r\n          } else handleCanotSendInvite(`${players[0].username} isn't online`);\r\n        } else handleCanotSendInvite(\"user not found\");\r\n      }\r\n    } catch (_) {\r\n      handleCanotSendInvite(\"Something went wrong there. Try again\");\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setInput(\"\");\r\n    setPlayersList([]);\r\n  };\r\n\r\n  const handleGenerateInviteLink = () => {\r\n    socket.emit(\"generateInviteLink\", (inviteLink) => {\r\n      setInviteLink(inviteLink);\r\n    });\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(inviteLink).then(() => {\r\n      setShowText(true);\r\n      setTimeout(() => {\r\n        setShowText(false);\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"validInvite\", () => {\r\n      setWaitForResponse(false);\r\n      setPendingPlayers((prevState) => {\r\n        prevState.push(invitedPlayer);\r\n        return [...prevState];\r\n      });\r\n    });\r\n\r\n    socket.on(\"inviteDeclined\", (receiverInfo) => {\r\n      const index = pendingPlayers.findIndex(\r\n        (player) => player.username === receiverInfo.playername\r\n      );\r\n      if (index !== -1) {\r\n        setPendingPlayers((prevState) => {\r\n          prevState[index].declineInvite = true;\r\n          return [...prevState];\r\n        });\r\n        setTimeout(() => {\r\n          setPendingPlayers((prevState) => {\r\n            prevState.splice(index, 1);\r\n            return [...prevState];\r\n          });\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n    socket.on(\"invalidInvite\", (message) => {\r\n      setWaitForResponse(false);\r\n      handleCanotSendInvite(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"validInvite\");\r\n      socket.removeAllListeners(\"invalidInvite\");\r\n      socket.removeAllListeners(\"inviteDeclined\");\r\n      socket.removeAllListeners(\"playerInGame\");\r\n    };\r\n  }, [invitedPlayer, pendingPlayers]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.emit(\"cancelInvite\", null, true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"play-with-friend-container\">\r\n      <i className=\"fas fa-arrow-left fa-2x\" onClick={props.return}></i>\r\n      <ul className=\"players-pending players-list\">\r\n        {renderPendingPlayers(pendingPlayers, cancelInvite)}\r\n      </ul>\r\n      <div className=\"btn-container\">\r\n        <form\r\n          className=\"username-input\"\r\n          onSubmit={handleSendInvite}\r\n          method=\"POST\"\r\n        >\r\n          <i className=\"fas fa-search\"></i>\r\n          <input\r\n            id=\"player-name-search\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onInput={handleOnChange}\r\n            value={input}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            onClick={clearInput}\r\n            style={{ display: input ? \"inline\" : \"none\" }}\r\n          ></i>\r\n          <Button className=\"invite\" type=\"submit\" ref={target}>\r\n            {waitForResponse ? (\r\n              <Spinner\r\n                animation=\"border\"\r\n                variant=\"info\"\r\n                style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n              />\r\n            ) : (\r\n              \"Invite\"\r\n            )}\r\n          </Button>\r\n          <Overlay target={target.current} show={show !== \"\"}>\r\n            {(props) => <Tooltip {...props}>{show}</Tooltip>}\r\n          </Overlay>\r\n          <ul className=\"players-list\">{playersList}</ul>\r\n        </form>\r\n        <Button className=\"invite-link\" onClick={handleGenerateInviteLink}>\r\n          Invite Link\r\n        </Button>\r\n        <div\r\n          className=\"link-container\"\r\n          style={{ display: inviteLink ? \"flex\" : \"none\" }}\r\n        >\r\n          <i className=\"fas fa-times\" onClick={() => setInviteLink(\"\")}></i>\r\n          <input\r\n            type=\"text\"\r\n            value={inviteLink}\r\n            className=\"link\"\r\n            readOnly={true}\r\n          />\r\n          <button\r\n            className=\"copy-link\"\r\n            onClick={handleCopyLink}\r\n            ref={copyButton}\r\n          >\r\n            Copy\r\n          </button>\r\n          <Overlay placement=\"top\" show={showText} target={copyButton.current}>\r\n            {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n              <div {...props} className=\"copied\">\r\n                Copied\r\n              </div>\r\n            )}\r\n          </Overlay>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayWithFriend;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\renderPlayersList.js",["256"],"const renderPlayersList = (players, handleSelectPlayer, name) => {\r\n  const playersList = players.map((player, index) => {\r\n    const { username, photo, socketID } = player;\r\n    if (username === name) return null;\r\n    return (\r\n      <li\r\n        key={`player${index}`}\r\n        onClick={handleSelectPlayer}\r\n        playername={username}\r\n      >\r\n        <div className=\"img-container\">\r\n          <img src={photo}></img>\r\n        </div>\r\n        <p>{username}</p>\r\n        <div className=\"status\">\r\n          <span\r\n            style={{ backgroundColor: socketID ? \"#28a745\" : \"#6c757d\" }}\r\n          ></span>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  return playersList;\r\n};\r\n\r\nexport default renderPlayersList;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayWithFriend\\renderPendingPlayers.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\Invites\\Invites.jsx",["257","258"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { SocketContext } from \"../../../App/context.js\";\r\nimport renderInvites from \"./renderInvites.js\";\r\nimport \"./Invites.scss\";\r\n\r\nconst Invites = () => {\r\n  const [invites, setInvites] = useState([]);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const handleAccept = (event) => {\r\n    const playername = event.currentTarget.getAttribute(\"playername\");\r\n    const index = invites.findIndex(\r\n      (player) => player.playername === playername\r\n    );\r\n    const { socketID } = invites[index];\r\n    socket.emit(\"acceptInvite\", socketID);\r\n    setInvites([]);\r\n  };\r\n\r\n  const handleDecline = (event) => {\r\n    const playername = event.currentTarget.getAttribute(\"playername\");\r\n    const index = invites.findIndex(\r\n      (player) => player.playername === playername\r\n    );\r\n    socket.emit(\"declineInvite\", invites[index].socketID, false);\r\n    setInvites((prevState) => {\r\n      prevState.splice(index, 1);\r\n      return [...prevState];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receiveInvite\", (sender, senderSocketID, time) => {\r\n      setInvites((prevState) => {\r\n        sender.socketID = senderSocketID;\r\n        sender.time = time;\r\n        prevState.push(sender);\r\n        return [...prevState];\r\n      });\r\n      socket.emit(\"inviteReceived\", senderSocketID);\r\n    });\r\n\r\n    socket.on(\"clearInvites\", () => {\r\n      setInvites([]);\r\n    });\r\n\r\n    socket.on(\"inviteCanceled\", (senderInfo) => {\r\n      const index = invites.findIndex(\r\n        (player) => player.playername === senderInfo.playername\r\n      );\r\n      if (index !== -1) {\r\n        setInvites((prevState) => {\r\n          prevState[index].cancelInvite = true;\r\n          return [...prevState];\r\n        });\r\n\r\n        setTimeout(() => {\r\n          setInvites((prevState) => {\r\n            prevState.splice(index, 1);\r\n            return [...prevState];\r\n          });\r\n        }, 1000);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.removeAllListeners(\"receiveInvite\");\r\n      socket.removeAllListeners(\"inviteCanceled\");\r\n      socket.removeAllListeners(\"clearInvites\");\r\n    };\r\n  }, [invites]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.emit(\"declineInvite\", null, true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"invites-list\">\r\n      {renderInvites(invites, handleAccept, handleDecline)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Invites;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\Invites\\renderInvites.js",["259","260"],"import { Button, Tooltip, OverlayTrigger, Overlay } from \"react-bootstrap\";\r\n\r\nconst renderInvites = (invites, handleAccept, handleDecline) => {\r\n  return invites.map((value, index) => {\r\n    const { playername, photo, time, cancelInvite } = value;\r\n    return (\r\n      <li key={`invite-${index}`}>\r\n        <div className=\"image-container\">\r\n          <img src={photo}></img>\r\n        </div>\r\n        <div className=\"name-and-btn-container\">\r\n          <p>\r\n            <OverlayTrigger\r\n              placement=\"top\"\r\n              overlay={<Tooltip id=\"sender-name-tooltip\">{playername}</Tooltip>}\r\n            >\r\n              <span id=\"player-name\">{playername}</span>\r\n            </OverlayTrigger>\r\n\r\n            <span id={cancelInvite ? \"cancel-invite\" : \"invite-text\"}>\r\n              {cancelInvite\r\n                ? \" canceled invite\"\r\n                : ` invites you to a game (${time} min)`}\r\n            </span>\r\n          </p>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              onClick={handleAccept}\r\n              className=\"accept-invite\"\r\n              playername={playername}\r\n              disabled={cancelInvite}\r\n            >\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              onClick={handleDecline}\r\n              className=\"decline-invite\"\r\n              playername={playername}\r\n              disabled={cancelInvite}\r\n            >\r\n              Decline\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default renderInvites;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Warning\\Warning.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\PlayButton\\PlayButton.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\useHandleRoutingWhilePlaying.js",["261"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useHandleRoutingWhilePlaying = (socket, setMoveTimer) => {\r\n  const store = useStore();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const foundMatch = store.getState().gameState.foundMatch;\r\n    const opponentInfo = store.getState().gameState.opponentInfo;\r\n    const result = store.getState().gameState.gameResult;\r\n    if (result === undefined) return;\r\n    if (foundMatch && location.pathname !== \"/\" && !result) {\r\n      dispatch({ type: \"setGameResult\", value: \"Lose\" });\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: {\r\n          type: \"game result message\",\r\n          winner: `${opponentInfo.playername} Won - `,\r\n          reason: \"Game Abandoned\",\r\n          className: \"game-message\",\r\n        },\r\n      });\r\n      setMoveTimer(null, true, dispatch);\r\n      socket.emit(\"gameFinish\", [\"Won\", \"Game Abandoned\"]);\r\n    }\r\n  }, [location]);\r\n};\r\n\r\nexport default useHandleRoutingWhilePlaying;\r\n",{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":16},{"ruleId":"270","severity":1,"message":"271","line":29,"column":13,"nodeType":"272","endLine":46,"endColumn":4},{"ruleId":"270","severity":1,"message":"273","line":46,"column":6,"nodeType":"274","endLine":46,"endColumn":23,"suggestions":"275"},{"ruleId":"270","severity":1,"message":"276","line":72,"column":6,"nodeType":"274","endLine":72,"endColumn":23,"suggestions":"277"},{"ruleId":"270","severity":1,"message":"278","line":103,"column":6,"nodeType":"274","endLine":103,"endColumn":8,"suggestions":"279"},{"ruleId":"266","severity":1,"message":"280","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"266","severity":1,"message":"281","line":35,"column":29,"nodeType":"268","messageId":"269","endLine":35,"endColumn":49},{"ruleId":"282","severity":1,"message":"283","line":63,"column":40,"nodeType":"284","messageId":"285","endLine":63,"endColumn":41,"suggestions":"286"},{"ruleId":"270","severity":1,"message":"271","line":153,"column":13,"nodeType":"272","endLine":165,"endColumn":4},{"ruleId":"270","severity":1,"message":"273","line":165,"column":6,"nodeType":"274","endLine":165,"endColumn":23,"suggestions":"287"},{"ruleId":"270","severity":1,"message":"288","line":79,"column":6,"nodeType":"274","endLine":79,"endColumn":8,"suggestions":"289"},{"ruleId":"270","severity":1,"message":"290","line":185,"column":6,"nodeType":"274","endLine":185,"endColumn":8,"suggestions":"291"},{"ruleId":"270","severity":1,"message":"292","line":224,"column":6,"nodeType":"274","endLine":224,"endColumn":36,"suggestions":"293"},{"ruleId":"270","severity":1,"message":"294","line":31,"column":6,"nodeType":"274","endLine":31,"endColumn":40,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"296","line":5,"column":36,"nodeType":"268","messageId":"269","endLine":5,"endColumn":44},{"ruleId":"270","severity":1,"message":"297","line":93,"column":6,"nodeType":"274","endLine":93,"endColumn":8,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":51,"column":17,"nodeType":"301","endLine":55,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":88,"column":17,"nodeType":"301","endLine":92,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":43,"column":6,"nodeType":"274","endLine":43,"endColumn":12,"suggestions":"303"},{"ruleId":"270","severity":1,"message":"278","line":108,"column":6,"nodeType":"274","endLine":108,"endColumn":13,"suggestions":"304"},{"ruleId":"270","severity":1,"message":"271","line":120,"column":13,"nodeType":"272","endLine":134,"endColumn":4},{"ruleId":"270","severity":1,"message":"305","line":134,"column":6,"nodeType":"274","endLine":134,"endColumn":23,"suggestions":"306"},{"ruleId":"270","severity":1,"message":"276","line":164,"column":6,"nodeType":"274","endLine":164,"endColumn":37,"suggestions":"307"},{"ruleId":"270","severity":1,"message":"276","line":170,"column":6,"nodeType":"274","endLine":170,"endColumn":8,"suggestions":"308"},{"ruleId":"299","severity":1,"message":"300","line":12,"column":11,"nodeType":"301","endLine":12,"endColumn":28},{"ruleId":"270","severity":1,"message":"276","line":71,"column":6,"nodeType":"274","endLine":71,"endColumn":15,"suggestions":"309"},{"ruleId":"270","severity":1,"message":"276","line":77,"column":6,"nodeType":"274","endLine":77,"endColumn":8,"suggestions":"310"},{"ruleId":"266","severity":1,"message":"311","line":1,"column":43,"nodeType":"268","messageId":"269","endLine":1,"endColumn":50},{"ruleId":"299","severity":1,"message":"300","line":9,"column":11,"nodeType":"301","endLine":9,"endColumn":28},{"ruleId":"270","severity":1,"message":"312","line":29,"column":6,"nodeType":"274","endLine":29,"endColumn":16,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'socket' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'authenticateUser' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["316"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'dispatch', 'socket', and 'store'. Either include them or remove the dependency array.",["318"],"'useEffect' is defined but never used.","'setSuccessfullyLogin' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["319","320"],["321"],"React Hook useEffect has missing dependencies: 'dispatch', 'handleGameOver', 'socket', and 'store'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has missing dependencies: 'constructNewPiecesWidth', 'dispatch', 'setMoveTimer', 'socket', and 'store'. Either include them or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'dispatch', 'opponentInfo.playername', 'setMoveTimer', 'side', and 'socket'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'dispatch', 'setMoveTimer', 'socket', and 'store'. Either include them or remove the dependency array.",["325"],"'useStore' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'setMoveTimer', 'side', 'socket', and 'time'. Either include them or remove the dependency array.",["326"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch', 'props.pause', 'setMoveTimer', 'socket', and 'store'. Either include them or remove the dependency array.",["327"],["328"],"React Hook useEffect has missing dependencies: 'authenticateUser', 'dispatch', 'handleError', and 'loginError'. Either include them or remove the dependency array.",["329"],["330"],["331"],["332"],["333"],"'Overlay' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'setMoveTimer', 'socket', and 'store'. Either include them or remove the dependency array. If 'setMoveTimer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"messageId":"341","fix":"342","desc":"343"},{"messageId":"344","fix":"345","desc":"346"},{"desc":"335","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"366","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [authenticateUser, dispatch, isAuthenticated]",{"range":"373","text":"374"},"Update the dependencies array to be: [connectionError, socket]",{"range":"375","text":"376"},"Update the dependencies array to be: [dispatch, socket, store]",{"range":"377","text":"378"},"removeEscape",{"range":"379","text":"380"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"381","text":"382"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"383","text":"374"},"Update the dependencies array to be: [dispatch, handleGameOver, socket, store]",{"range":"384","text":"385"},"Update the dependencies array to be: [constructNewPiecesWidth, dispatch, setMoveTimer, socket, store]",{"range":"386","text":"387"},"Update the dependencies array to be: [turnToMove, board, draggable, side, dispatch, opponentInfo.playername, socket, setMoveTimer]",{"range":"388","text":"389"},"Update the dependencies array to be: [turnToMove, props.timeLeftToMove, store, dispatch, setMoveTimer, socket]",{"range":"390","text":"391"},"Update the dependencies array to be: [dispatch, setMoveTimer, side, socket, time]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch, props.pause, setMoveTimer, socket, store, time]",{"range":"394","text":"395"},"Update the dependencies array to be: [dispatch, pause, socket, store]",{"range":"396","text":"397"},"Update the dependencies array to be: [authenticateUser, dispatch, handleError, isAuthenticated, loginError]",{"range":"398","text":"399"},"Update the dependencies array to be: [invitedPlayer, pendingPlayers, socket]",{"range":"400","text":"401"},"Update the dependencies array to be: [socket]",{"range":"402","text":"403"},"Update the dependencies array to be: [invites, socket]",{"range":"404","text":"405"},{"range":"406","text":"403"},"Update the dependencies array to be: [dispatch, location, setMoveTimer, socket, store]",{"range":"407","text":"408"},[1834,1851],"[authenticateUser, dispatch, isAuthenticated]",[2518,2535],"[connectionError, socket]",[3459,3461],"[dispatch, socket, store]",[2361,2362],"",[2361,2361],"\\",[5301,5318],[2769,2771],"[dispatch, handleGameOver, socket, store]",[7395,7397],"[constructNewPiecesWidth, dispatch, setMoveTimer, socket, store]",[8553,8583],"[turnToMove, board, draggable, side, dispatch, opponentInfo.playername, socket, setMoveTimer]",[1168,1202],"[turnToMove, props.timeLeftToMove, store, dispatch, setMoveTimer, socket]",[3324,3326],"[dispatch, setMoveTimer, side, socket, time]",[1562,1568],"[dispatch, props.pause, setMoveTimer, socket, store, time]",[3533,3540],"[dispatch, pause, socket, store]",[4141,4158],"[authenticateUser, dispatch, handleError, isAuthenticated, loginError]",[5472,5503],"[invitedPlayer, pendingPlayers, socket]",[5611,5613],"[socket]",[2153,2162],"[invites, socket]",[2271,2273],[1054,1064],"[dispatch, location, setMoveTimer, socket, store]"]