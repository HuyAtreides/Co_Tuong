[{"F:\\Web\\Cờ Tướng\\front_end\\src\\index.jsx":"1","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\piece.js":"2","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\instantiatePiece.js":"3","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\advisor.js":"4","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\general.js":"5","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\cannon.js":"6","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\elephant.js":"7","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\chariot.js":"8","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\horse.js":"9","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\soldier.js":"10","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\chariotRules.js":"11","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\horseRules.js":"12","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\advisorRules.js":"13","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\generalRules.js":"14","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\elephantRules.js":"15","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\cannonRules.js":"16","F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\soldierRules.js":"17","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\rootReducer.js":"18","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\boardReducer.js":"19","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Login\\Login.jsx":"20","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Main.jsx":"21","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\EntryComponent\\EntryComponent.jsx":"22","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\NavBar.jsx":"23","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Signup\\Signup.jsx":"24","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\App.jsx":"25","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Game.jsx":"26","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Board.jsx":"27","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Timer\\Timer.jsx":"28","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\initializeBoard.js":"29","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\getSVGLocation.js":"30","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\appReducer.js":"31","F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\gameReducer.js":"32","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Piece\\Piece.jsx":"33","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\GameController.jsx":"34","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GamePlayArea.jsx":"35","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\GameBar.jsx":"36","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\ChatSection.jsx":"37","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GameResult\\GameResult.jsx":"38"},{"size":454,"mtime":1614486817724,"results":"39","hashOfConfig":"40"},{"size":5807,"mtime":1614875907407,"results":"41","hashOfConfig":"40"},{"size":1011,"mtime":1614062655316,"results":"42","hashOfConfig":"40"},{"size":1274,"mtime":1614062654322,"results":"43","hashOfConfig":"40"},{"size":1145,"mtime":1614062679221,"results":"44","hashOfConfig":"40"},{"size":1657,"mtime":1614064113169,"results":"45","hashOfConfig":"40"},{"size":1309,"mtime":1614063332949,"results":"46","hashOfConfig":"40"},{"size":292,"mtime":1614063330081,"results":"47","hashOfConfig":"40"},{"size":1965,"mtime":1614064130631,"results":"48","hashOfConfig":"40"},{"size":928,"mtime":1614062746214,"results":"49","hashOfConfig":"40"},{"size":451,"mtime":1614662801179,"results":"50","hashOfConfig":"40"},{"size":152,"mtime":1614662802067,"results":"51","hashOfConfig":"40"},{"size":108,"mtime":1613373533127,"results":"52","hashOfConfig":"40"},{"size":106,"mtime":1613373658854,"results":"53","hashOfConfig":"40"},{"size":254,"mtime":1613374687330,"results":"54","hashOfConfig":"40"},{"size":449,"mtime":1614662799537,"results":"55","hashOfConfig":"40"},{"size":77,"mtime":1613458402026,"results":"56","hashOfConfig":"40"},{"size":335,"mtime":1614590459472,"results":"57","hashOfConfig":"40"},{"size":1762,"mtime":1614872222979,"results":"58","hashOfConfig":"40"},{"size":3039,"mtime":1614422920966,"results":"59","hashOfConfig":"40"},{"size":482,"mtime":1614488488252,"results":"60","hashOfConfig":"40"},{"size":823,"mtime":1614406500780,"results":"61","hashOfConfig":"40"},{"size":1393,"mtime":1614571244434,"results":"62","hashOfConfig":"40"},{"size":3670,"mtime":1614485595579,"results":"63","hashOfConfig":"40"},{"size":751,"mtime":1614492138468,"results":"64","hashOfConfig":"40"},{"size":952,"mtime":1614779286927,"results":"65","hashOfConfig":"40"},{"size":8879,"mtime":1614918790992,"results":"66","hashOfConfig":"40"},{"size":520,"mtime":1614700153340,"results":"67","hashOfConfig":"40"},{"size":1998,"mtime":1614492200749,"results":"68","hashOfConfig":"40"},{"size":283,"mtime":1614492184637,"results":"69","hashOfConfig":"40"},{"size":314,"mtime":1614571186943,"results":"70","hashOfConfig":"40"},{"size":1774,"mtime":1614845605023,"results":"71","hashOfConfig":"40"},{"size":740,"mtime":1614914167701,"results":"72","hashOfConfig":"40"},{"size":3400,"mtime":1614841196951,"results":"73","hashOfConfig":"40"},{"size":2762,"mtime":1614922619967,"results":"74","hashOfConfig":"40"},{"size":1307,"mtime":1614832225195,"results":"75","hashOfConfig":"40"},{"size":3131,"mtime":1614921266836,"results":"76","hashOfConfig":"40"},{"size":1573,"mtime":1614922546418,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"fbx7jn",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"F:\\Web\\Cờ Tướng\\front_end\\src\\index.jsx",[],["163","164"],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\piece.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\instantiatePiece.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\advisor.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\general.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\cannon.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\elephant.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\chariot.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\horse.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\soldier.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\chariotRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\horseRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\advisorRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\generalRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\elephantRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\cannonRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\pieces\\move_rules\\soldierRules.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\rootReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\boardReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Login\\Login.jsx",["165","166","167","168","169"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = (props) => {\r\n  const [login, setLogin] = useState(false);\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForData, setWaitForData] = useState(false);\r\n  return (\r\n    <Container fluid>\r\n      <h1>Xiangqi</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 3 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          <Form>\r\n            <Form.Group controlId=\"username-or-email\">\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  required\r\n                  isInvalid={invalidUsernameMess !== \"\"}\r\n                  placeholder=\"Username or Email\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {invalidUsernameMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  required\r\n                  isInvalid={invalidPasswordMess !== \"\"}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidPasswordMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Button type=\"submit\">\r\n              {waitForData ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Log In\"\r\n              )}\r\n            </Button>\r\n            <Button className=\"log-in-as-guest\">Log In As Guest</Button>\r\n          </Form>\r\n          <p className=\"seperator\">\r\n            <span></span>\r\n            <span className=\"seperator-text\">or connect with</span>\r\n            <span></span>\r\n          </p>\r\n          <div className=\"social-login\">\r\n            <a className=\"google\" href=\"/login-with-google\">\r\n              <i className=\"fab fa-google\"></i> Google\r\n            </a>\r\n            <a className=\"facebook\" href=\"/login-with-facebook\">\r\n              <i className=\"fab fa-facebook \"></i> Facebook\r\n            </a>\r\n            <a className=\"github\" href=\"/login-with-github\">\r\n              <i className=\"fab fa-github \"></i> Github\r\n            </a>\r\n          </div>\r\n          <div className=\"sign-up-area\">\r\n            <Link to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Main.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\EntryComponent\\EntryComponent.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\NavBar\\NavBar.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Signup\\Signup.jsx",["170","171","172","173"],"import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nconst Signup = (props) => {\r\n  const [invalidUsernameMess, setInvalidUsernameMess] = useState(\"\");\r\n  const [invalidEmailMess, setInvalidEmailMess] = useState(\"\");\r\n  const [invalidPasswordMess, setInvalidPasswordMess] = useState(\"\");\r\n  const [waitForData, setWaitForData] = useState(false);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1>Join Now</h1>\r\n      <Row className=\"justify-content-center\">\r\n        <Col\r\n          md={{ span: 3 }}\r\n          xs={{ span: 10 }}\r\n          className=\"login-component d-flex flex-column  align-items-center\"\r\n        >\r\n          <Form>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label style={{ float: \"left\" }}>Username</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  required\r\n                  isInvalid={invalidUsernameMess !== \"\"}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {invalidUsernameMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label style={{ float: \"left\" }}>Email</Form.Label>\r\n\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  required\r\n                  isInvalid={invalidEmailMess !== \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidEmailMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label style={{ float: \"left\" }}>Password</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  required\r\n                  isInvalid={invalidPasswordMess !== \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  type=\"invalid\"\r\n                  style={{ textAlign: \"left\" }}\r\n                >\r\n                  {invalidPasswordMess}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">\r\n              {waitForData ? (\r\n                <Spinner animation=\"border\" variant=\"dark\" />\r\n              ) : (\r\n                \"Create Account\"\r\n              )}\r\n            </Button>\r\n          </Form>\r\n          <p className=\"seperator\">\r\n            <span></span>\r\n            <span className=\"seperator-text\">or connect with</span>\r\n            <span></span>\r\n          </p>\r\n          <div className=\"social-login\">\r\n            <a\r\n              className=\"google\"\r\n              href=\"http://localhost:8080/login-with-google\"\r\n            >\r\n              <i className=\"fab fa-google\"></i> Google\r\n            </a>\r\n            <a\r\n              className=\"facebook\"\r\n              href=\"http://localhost:8080/login-with-facebook\"\r\n            >\r\n              <i className=\"fab fa-facebook \"></i> Facebook\r\n            </a>\r\n            <a\r\n              className=\"github\"\r\n              href=\"http://localhost:8080/login-with-github\"\r\n            >\r\n              <i className=\"fab fa-github \"></i> Github\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\App\\App.jsx",["174"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Login from \"../Login/Login.jsx\";\r\nimport Main from \"../Main/Main.jsx\";\r\nimport Signup from \"../Signup/Signup.jsx\";\r\n\r\nfunction App(props) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login setIsAuthenticated={setIsAuthenticated} />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <Signup />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Main isAuthenticated={isAuthenticated} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Game.jsx",["175"],"import React, { useState, useRef } from \"react\";\r\nimport \"./Game.scss\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GameController from \"./GameController/GameController.jsx\";\r\nimport GamePlayArea from \"./GamePlayArea/GamePlayArea.jsx\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GameBar from \"./GameBar/GameBar.jsx\";\r\n\r\nconst Game = () => {\r\n  const [timeSelectorDisplay, setTimeSelectorDisplay] = useState(\"none\");\r\n  const foundMatch = useSelector((state) => state.gameState.foundMatch);\r\n  const handleToggle = () => {\r\n    setTimeSelectorDisplay(timeSelectorDisplay === \"none\" ? \"flex\" : \"none\");\r\n  };\r\n\r\n  return (\r\n    <Row md={{ cols: 1 }} className=\"mt-5 pb-5\">\r\n      <GamePlayArea />\r\n      {!foundMatch ? (\r\n        <GameController\r\n          timeSelectorDisplay={timeSelectorDisplay}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ) : (\r\n        <GameBar />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Board.jsx",["176","177","178"],"import React, { useEffect, useRef } from \"react\";\r\nimport initializeBoard from \"./initializeBoard.js\";\r\nimport Piece from \"./Piece/Piece.jsx\";\r\nimport \"./Board.scss\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport getSVGLocation from \"./getSVGLocation.js\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nfunction Board() {\r\n  const dispatch = useDispatch();\r\n  const board = useSelector((state) => state.boardState.board);\r\n  const targetDisplay = useSelector((state) => state.boardState.targetDisplay);\r\n  const boardSize = useSelector((state) => state.boardState.boardSize);\r\n  const currentPiece = useSelector((state) => state.boardState.currentPiece);\r\n  const getClicked = useSelector((state) => state.boardState.getClicked);\r\n  const draggable = useSelector((state) => state.boardState.draggable);\r\n  const turnToMove = useSelector((state) => state.boardState.turnToMove);\r\n  const findingMatch = useSelector((state) => state.gameState.findingMatch);\r\n  const side = useSelector((state) => state.boardState.side);\r\n  const pause = useSelector((state) => state.gameState.pause);\r\n  const socketRef = useRef();\r\n  const svgRef = useRef();\r\n  const timerRef = useRef();\r\n  const messageToSend = useSelector((state) => state.gameState.messageToSend);\r\n  const targetTranslate = useSelector(\r\n    (state) => state.boardState.targetTranslate\r\n  );\r\n\r\n  const setTimer = (playerMove) => {\r\n    if (playerMove) {\r\n      clearInterval(timerRef.current);\r\n      dispatch({ type: \"setOpponentTimeLeftToMove\", value: \"restart\" });\r\n      timerRef.current = setInterval(() => {\r\n        dispatch({ type: \"setPlayerTimeLeftToMove\", value: null });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerRef.current);\r\n      dispatch({ type: \"setPlayerTimeLeftToMove\", value: \"restart\" });\r\n      timerRef.current = setInterval(() => {\r\n        dispatch({ type: \"setOpponentTimeLeftToMove\", value: null });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = (event) => {\r\n    const elementId = event.currentTarget.id;\r\n    const [row, col] = [+elementId[1], +elementId[2]];\r\n    const translate = board[row][col].translate;\r\n    if (!currentPiece || board[row][col].side === currentPiece.side) {\r\n      if (currentPiece) {\r\n        const [curRow, curCol] = currentPiece.position;\r\n        if (row !== curRow || curCol !== col) {\r\n          dispatch({ type: \"setGetClicked\", value: false });\r\n        }\r\n      }\r\n      dispatch({ type: \"setTargetDisplay\", value: \"inline\" });\r\n      dispatch({ type: \"setDraggable\", value: true });\r\n      dispatch({ type: \"setTargetTranslate\", value: translate });\r\n      dispatch({ type: \"setCurrentPiece\", value: board[row][col] });\r\n    }\r\n  };\r\n\r\n  const updateBoard = (newPostion, [curRow, curCol]) => {\r\n    if (newPostion) {\r\n      const [capture, newRow, newCol] = newPostion;\r\n      if (capture) {\r\n        dispatch({ type: \"setCapturedPieces\", value: board[newRow][newCol] });\r\n      }\r\n      board[curRow][curCol] = 0;\r\n      board[newRow][newCol] = currentPiece;\r\n    }\r\n  };\r\n\r\n  const handleOpponentMove = ([curRow, curCol], [newRow, newCol]) => {\r\n    if (board[curRow][curCol] && board[curRow][curCol].side === side[0]) {\r\n      board[curRow][curCol].animateMove([newRow, newCol], board, dispatch);\r\n      // dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n      setTimer(true);\r\n    }\r\n  };\r\n\r\n  const updateCurrentPiece = (newPosition) => {\r\n    if (newPosition || getClicked) {\r\n      dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n      dispatch({ type: \"setCurrentPiece\", value: null });\r\n      dispatch({ type: \"setGetClicked\", value: false });\r\n    } else {\r\n      dispatch({ type: \"setGetClicked\", value: true });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (event) => {\r\n    if (currentPiece) {\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      const [curRow, curCol] = currentPiece.position;\r\n      const newPosition = currentPiece.setNewPosition(x, y, board, turnToMove);\r\n      updateBoard(newPosition, [curRow, curCol]);\r\n      dispatch({ type: \"setDraggable\", value: false });\r\n      updateCurrentPiece(newPosition);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n      if (newPosition) {\r\n        dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n        setTimer(false);\r\n        socketRef.current.emit(\"opponentMove\", newPosition, [curRow, curCol]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const svg = svgRef.current;\r\n    const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n    if (x >= 0 && x < boardSize[0] && y >= 0 && y < boardSize[1] && draggable) {\r\n      currentPiece.move(x, y, board);\r\n      dispatch({ type: \"setBoard\", value: [...board] });\r\n    }\r\n  };\r\n\r\n  const moveOnClick = (currentPiece, x, y) => {\r\n    const [curRow, curCol] = currentPiece.position;\r\n    const newPosition = currentPiece.setNewPosition(x, y, board, turnToMove);\r\n    updateBoard(newPosition, [curRow, curCol]);\r\n    dispatch({ type: \"setTargetDisplay\", value: \"none\" });\r\n    dispatch({ type: \"setCurrentPiece\", value: null });\r\n    dispatch({ type: \"setBoard\", value: [...board] });\r\n    if (newPosition) {\r\n      dispatch({ type: \"setTurnToMove\", value: !turnToMove });\r\n      setTimer(false);\r\n      socketRef.current.emit(\"opponentMove\", newPosition, [curRow, curCol]);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    if (currentPiece) {\r\n      const svg = svgRef.current;\r\n      const [x, y] = getSVGLocation(+event.clientX, +event.clientY, svg);\r\n      if (!event.target.id) moveOnClick(currentPiece, x, y);\r\n    }\r\n  };\r\n\r\n  const constructNewBoard = (width) => {\r\n    const newBoard = board.map((row) => {\r\n      const newRow = row.map((piece) => {\r\n        if (piece) {\r\n          const [row, col] = piece.position;\r\n          piece.width = width;\r\n          piece.translate = `translate(${width * col}, ${width * row})`;\r\n          return piece;\r\n        }\r\n        return 0;\r\n      });\r\n      return newRow;\r\n    });\r\n    return newBoard;\r\n  };\r\n\r\n  const handleResize = () => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({\r\n      type: \"setBoardSize\",\r\n      value: [width, width / (521 / 577)],\r\n    });\r\n    dispatch({\r\n      type: \"setBoard\",\r\n      value: constructNewBoard(width / 9),\r\n    });\r\n  };\r\n\r\n  const registerEventHandler = () => {\r\n    socketRef.current.on(\"foundMatch\", (opponentID, firstMove) => {\r\n      socketRef.current.opponentID = opponentID;\r\n      dispatch({ type: \"setFindingMatch\", value: false });\r\n      dispatch({ type: \"setTurnToMove\", value: firstMove });\r\n      dispatch({ type: \"setFoundMatch\", value: true });\r\n      setTimer(firstMove);\r\n    });\r\n\r\n    socketRef.current.on(\"incomingMessage\", (message) => {\r\n      const listItemRef = React.createRef();\r\n      dispatch({\r\n        type: \"setMessage\",\r\n        value: { from: \"Opponent\", message: message, ref: listItemRef },\r\n      });\r\n    });\r\n\r\n    socketRef.current.on(\"timeout\", () => {\r\n      dispatch({ type: \"setFindingMatch\", value: null });\r\n    });\r\n\r\n    socketRef.current.on(\"move\", ([curRow, curCol], [newRow, newCol]) => {\r\n      handleOpponentMove([curRow, curCol], [newRow, newCol]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const width = document.querySelector(\".board-container\").offsetWidth;\r\n    dispatch({\r\n      type: \"setBoardSize\",\r\n      value: [width, width / (521 / 577)],\r\n    });\r\n    dispatch({\r\n      type: \"setBoard\",\r\n      value: initializeBoard(width / 9, side),\r\n    });\r\n\r\n    window.ondragstart = () => false;\r\n    socketRef.current = io(\"http://localhost:8080/play\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (findingMatch) {\r\n      socketRef.current.emit(\"findMatch\", side);\r\n    } else if (messageToSend !== null) {\r\n      socketRef.current.emit(\"sendMessage\", messageToSend);\r\n      dispatch({ type: \"setMessageToSend\", value: null });\r\n    }\r\n\r\n    window.onmousemove = handleMouseMove;\r\n    window.onmouseup = handleMouseUp;\r\n    window.onresize = handleResize;\r\n    registerEventHandler();\r\n\r\n    return () => {\r\n      window.onmouseup = null;\r\n      window.onmousemove = null;\r\n      window.onresize = null;\r\n      socketRef.current.removeAllListeners();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <svg\r\n      width={boardSize[0]}\r\n      height={boardSize[1]}\r\n      onClick={handleClick}\r\n      style={{\r\n        backgroundImage: \"url(/images/Board/board.jpg)\",\r\n      }}\r\n      ref={svgRef}\r\n    >\r\n      <image\r\n        href=\"/images/Target_Icon/target.gif\"\r\n        width={boardSize[0] / 9 - 3}\r\n        height={boardSize[0] / 9 - 3}\r\n        style={{ display: targetDisplay }}\r\n        transform={targetTranslate}\r\n      ></image>\r\n      <Piece board={board} handleMouseDown={handleMouseDown} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default React.memo(Board);\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Timer\\Timer.jsx",["179","180"],"import React, { useState } from \"react\";\r\nimport \"./Timer.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Timer = (props) => {\r\n  const minute = Math.floor(props.timeLeftToMove / 60);\r\n  const second = props.timeLeftToMove % 60;\r\n  return (\r\n    <div className={`clock ${props.turnToMove ? \"turn-to-move\" : \"\"}`}>\r\n      <span>\r\n        {(minute < 10 ? \"0\" + minute : minute) +\r\n          \":\" +\r\n          (second < 10 ? \"0\" + second : second)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\initializeBoard.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\getSVGLocation.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\appReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\reducer\\gameReducer.js",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\Board\\Piece\\Piece.jsx",["181","182"],"import React, { createRef, useRef } from \"react\";\r\n\r\nfunction Piece(props) {\r\n  const pieces = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (props.board[i][j]) {\r\n        const [row, col] = props.board[i][j].position;\r\n        pieces.push(\r\n          <image\r\n            id={`p${row}${col}`}\r\n            href={`/images/Pieces/${props.board[i][j].name}.png`}\r\n            width={props.board[i][j].width - 3}\r\n            height={props.board[i][j].width - 3}\r\n            transform={props.board[i][j].translate}\r\n            key={`${i}${j}`}\r\n            onMouseDown={props.handleMouseDown}\r\n          ></image>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return <g>{pieces}</g>;\r\n}\r\n\r\nexport default Piece;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameController\\GameController.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GamePlayArea.jsx",["183","184"],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\GameBar.jsx",["185","186","187","188","189"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport \"./GameBar.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ChatSection from \"./ChatSection/ChatSection.jsx\";\r\n\r\nconst GameBar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const handleOfferDraw = () => {};\r\n\r\n  return (\r\n    <Col\r\n      md={{ span: 4 }}\r\n      xs={{ span: 10 }}\r\n      className=\"game-controller mb-3 game-bar-controller\"\r\n    >\r\n      <div className=\"button-container game-bar\">\r\n        <div className=\"select-side-container\">\r\n          <Button\r\n            className=\"red-side draw-btn\"\r\n            value=\"draw\"\r\n            onClick={handleOfferDraw}\r\n          >\r\n            &#189; Draw\r\n          </Button>\r\n          <Button className=\"black-side resign-btn\" value=\"resign\">\r\n            <i className=\"fas fa-flag\"></i> Resign\r\n          </Button>\r\n        </div>\r\n        <div className=\"time-select-container\">\r\n          <Button className=\"select-timer pause-btn\">\r\n            <i className=\"fas fa-pause\"></i> Pause\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <ChatSection />\r\n      <Button className=\"exit-game\" disabled={true}>\r\n        Exit Game\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default GameBar;\r\n","F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GameBar\\ChatSection\\ChatSection.jsx",[],"F:\\Web\\Cờ Tướng\\front_end\\src\\Components\\Main\\Game\\GamePlayArea\\GameResult\\GameResult.jsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":16,"column":10,"nodeType":"196","messageId":"197","endLine":16,"endColumn":15},{"ruleId":"194","severity":1,"message":"198","line":16,"column":17,"nodeType":"196","messageId":"197","endLine":16,"endColumn":25},{"ruleId":"194","severity":1,"message":"199","line":17,"column":31,"nodeType":"196","messageId":"197","endLine":17,"endColumn":53},{"ruleId":"194","severity":1,"message":"200","line":18,"column":31,"nodeType":"196","messageId":"197","endLine":18,"endColumn":53},{"ruleId":"194","severity":1,"message":"201","line":19,"column":23,"nodeType":"196","messageId":"197","endLine":19,"endColumn":37},{"ruleId":"194","severity":1,"message":"199","line":13,"column":31,"nodeType":"196","messageId":"197","endLine":13,"endColumn":53},{"ruleId":"194","severity":1,"message":"202","line":14,"column":28,"nodeType":"196","messageId":"197","endLine":14,"endColumn":47},{"ruleId":"194","severity":1,"message":"200","line":15,"column":31,"nodeType":"196","messageId":"197","endLine":15,"endColumn":53},{"ruleId":"194","severity":1,"message":"201","line":16,"column":23,"nodeType":"196","messageId":"197","endLine":16,"endColumn":37},{"ruleId":"194","severity":1,"message":"203","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"204","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"205","line":5,"column":36,"nodeType":"196","messageId":"197","endLine":5,"endColumn":44},{"ruleId":"194","severity":1,"message":"206","line":20,"column":9,"nodeType":"196","messageId":"197","endLine":20,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":208,"column":6,"nodeType":"209","endLine":208,"endColumn":8,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"211","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"212","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":21},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"204","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":34},{"ruleId":"214","severity":1,"message":"215","line":41,"column":17,"nodeType":"216","endLine":45,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":67,"column":17,"nodeType":"216","endLine":71,"endColumn":18},{"ruleId":"194","severity":1,"message":"211","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"204","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"203","line":1,"column":35,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"212","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":21},{"ruleId":"194","severity":1,"message":"217","line":8,"column":9,"nodeType":"196","messageId":"197","endLine":8,"endColumn":17},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","'setLogin' is assigned a value but never used.","'setInvalidUsernameMess' is assigned a value but never used.","'setInvalidPasswordMess' is assigned a value but never used.","'setWaitForData' is assigned a value but never used.","'setInvalidEmailMess' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useStore' is defined but never used.","'pause' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'side'. Either include them or remove the dependency array.","ArrayExpression",["220"],"'useState' is defined but never used.","'useSelector' is defined but never used.","'createRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},"Update the dependencies array to be: [dispatch, side]",{"range":"223","text":"224"},[7694,7696],"[dispatch, side]"]